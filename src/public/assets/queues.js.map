{"version":3,"sources":["webpack:///webpack/bootstrap 4d7522b9354c4a6fc929","webpack:///./src/public/javascript/gizmo.js","webpack:///./src/public/javascript/utility.js","webpack:///./src/public/javascript/api.js","webpack:///./src/public/javascript/local_settings.js","webpack:///./src/public/javascript/queue-dashboard.js"],"names":["GizmoManager","gizmos","openGizmoId","build","id","template","document","getElementById","gizmo","cloneNode","classList","remove","add","nextGizmoId","$","append","name","skillFilter","find","html","setupInteractions","gizmoID","save","updateCurrent","skills","skillStringToArray","click","event","css","val","bind","showQueueList","toggleClass","lastId","Math","max","Object","keys","map","split","closeModal","deleteGizmo","window","target","is","updateSkillFilter","addGizmo","newID","data","JSON","stringify","localStorage","setItem","load","getItem","skillGroups","i","reduce","res","skillGroup","queueList","console","log","parse","skillString","skill","trim","error","err","message","newDate","Date","setTime","now","dateString","toTimeString","text","formatAMPM","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","strTime","getStatistics","filter","response","request","json","queueStats","getData","getReportResults","params","type","getUserInformation","username","path","updateUserTheme","newTheme","getAdminUsers","users","updateAdminUser","user","getSupervisorUsers","updateSupervisorUser","getFieldList","updateField","field","deleteField","getGoalList","getGoalsForAgentGroups","agentGroups","updateGoal","goal","deleteGoal","getDatasources","updateDatasource","datasource","deleteDatasource","getSkillGroups","getLinkList","updateLink","link","deleteLink","getSkillJobs","updateSkillJob","job","format","skillStr","sk","prop","deleteSkillJob","rebootServer","reloadData","uploadData","parameters","endpoint","url","method","apiURL","API_URL","requestOptions","headers","credentials","body","fetch","then","status","notifyServer504","ok","bodyText","Error","statusText","jsonToReturnValue","getFaultStringFromData","getParameters","requestType","timeout","startItUp","preventDefault","clearTimeout","moment","runQueueDashboard","closest","attr","thisgizmo","table","next","createQueueList","trigger","href","slice","addEventListener","lastSlUpdate","slData","eventLoop","interval","currentTime","time","start","end","refreshView","setTimeout","serviceLevelData","each","gizmoElement","thisGizmo","callsInQueue","maxWait","agentsLoggedIn","agentsNotReady","agentsOnCall","agentsReady","serviceLevel","callsOffered","abandons","length","queue","includes","metrics","totals","current","calls","push","skillName","formatWaitTime","waitString","SLpercent","round","abandonRate","empty","sort","a","b","thead","createElement","th1","appendChild","createTextNode","className","th2","th3","forEach","tr","td1","td2","td3","wait","setSeconds","toISOString","substr","jsonToViewData","includeFields","columns","rows","row","newRow","j","indexOf"],"mappings":"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","file":"queues.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 98);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4d7522b9354c4a6fc929","import * as api from './api';\r\n\r\n// Handling of queue gizmo widgets.\r\n// Manages state and DOM (modals to edit skills & name).\r\nexport default function GizmoManager() {\r\n    // Object storing info on filters & names for each gizmo-widget\r\n    this.gizmos = null;\r\n    // which gizmo has a menu open?\r\n    this.openGizmoId = null;\r\n\r\n    this.build = function(id=null) {\r\n        let template = document.getElementById('gizmo-template');\r\n        let gizmo = template.cloneNode(true);\r\n\r\n        // update classes to those of a live, wild gizmo\r\n        gizmo.classList.remove('template');\r\n        gizmo.classList.add('gizmo');\r\n\r\n        // Create an ID and append to DOM\r\n        if (id == null) {\r\n            id = this.nextGizmoId();\r\n        }\r\n        gizmo.id = id;\r\n        $('.gizmo-wrapper').append(gizmo);\r\n\r\n        // Add to gizmos object, but don't overwrite existing ones\r\n        if (!this.gizmos[id]) {\r\n            this.gizmos[id] = {\r\n                name: 'New one!',\r\n                skillFilter: []\r\n            }\r\n        }\r\n        // set name for DOM\r\n        $(gizmo).find('.department-name').html(this.gizmos[id].name);\r\n\r\n        this.setupInteractions(id);\r\n        return id;\r\n    }\r\n\r\n    this.remove = function(gizmoID) {\r\n        document.getElementById(gizmoID).remove();\r\n        delete this.gizmos[gizmoID];\r\n        this.save();\r\n    }\r\n\r\n    // Which gizmo is currently edited in the skill menu? This function will\r\n    // update that gizmo's attributes.\r\n    this.updateCurrent = function(name, skills) {\r\n        this.gizmos[this.openGizmoId].name        = name;\r\n        this.gizmos[this.openGizmoId].skillFilter = skillStringToArray(skills);\r\n    }\r\n\r\n    // Set up menu interactions for a gizmo with the given ID\r\n    this.setupInteractions = function(id) {\r\n        let gizmo = $('#' + id);\r\n\r\n        // Skills menu\r\n        gizmo.find('.skills-edit-toggle').click(function (event) {\r\n            // Show the modal...\r\n            $('.modal').css('display', 'block');\r\n            // Track currently open menu...\r\n            this.openGizmoId = id;\r\n            // And set modal values to match this gizmo\r\n            $('.modal').find('.gizmo-name').val(this.gizmos[id].name);\r\n            $('.modal').find('.skills').val(this.gizmos[id].skillFilter);\r\n        }.bind(this));\r\n\r\n        // Show/hide queue list\r\n        this.gizmos[id].showQueueList = false;\r\n        gizmo.find('.show-skills-list').click(function (event) {\r\n            gizmo.find('.show-skills-list').toggleClass('selected');\r\n            gizmo.find('.queue-list').toggleClass('hidden');\r\n        }.bind(this));\r\n    }\r\n\r\n    // Get a new ID string in the form 'gizmo-<integer>'\r\n    this.nextGizmoId = function() {\r\n        if (!this.gizmos) return 'gizmo-0';\r\n        let lastId = Math.max(\r\n            ...Object.keys(this.gizmos).map((id) =>\r\n                id.split('-')[1]\r\n            )\r\n        );\r\n        return `gizmo-${lastId + 1}`;\r\n    };\r\n\r\n    // set up modal window for editing skills.\r\n    $('.modal').find('.close, .cancel, .save').click(function closeModal() {\r\n        $('.modal').css('display', 'none')\r\n    });\r\n    $('.modal').find('.remove').click(function deleteGizmo() {\r\n        $('.modal').css('display', 'none');\r\n        this.remove(this.openGizmoId);\r\n    }.bind(this));\r\n    $(window).click(function closeModal(event) {\r\n        if ($(event.target).is('.modal'))\r\n            $('.modal').css('display', 'none');\r\n    }.bind(this));\r\n    // Listen for skill filter updates\r\n    $('.modal .save').click(function updateSkillFilter() {\r\n        const name   = $('.modal .gizmo-name').val();\r\n        const skills = $('.modal .skills').val();\r\n        $('#' + this.openGizmoId).find('.department-name').html(name);\r\n        this.updateCurrent(name, skills);\r\n        this.save();\r\n    }.bind(this));\r\n    // Listen for add-gizmo button\r\n    $('.add-gizmo').click(function addGizmo() {\r\n        let newID = this.build();\r\n        // save current state to local storage\r\n        this.save();\r\n    }.bind(this));\r\n\r\n\r\n    // Save gizmos to local storage\r\n    this.save = function() {\r\n        const data = JSON.stringify(this.gizmos);\r\n        localStorage.setItem('user_gizmos', data);\r\n    }\r\n\r\n    // Load gizmos from local storage on startup\r\n    this.load = async function() {\r\n        let data = localStorage.getItem('user_gizmos');\r\n        if (!data) {\r\n            let skillGroups = await api.getSkillGroups();\r\n            let i = 0;\r\n            this.gizmos = skillGroups.reduce((res, skillGroup) => {\r\n                res[`gizmo-${i++}`] = {\r\n                    name: skillGroup.name,\r\n                    queueList: [],\r\n                    showQueueList: false,\r\n                    skillFilter: skillGroup.skills\r\n                };\r\n                return res;\r\n            }, {});\r\n            console.log('Loading default gizmos:', this.gizmos);\r\n        } else {\r\n            this.gizmos = JSON.parse(data);\r\n            console.log('Loading saved gizmos:', this.gizmos);\r\n        }\r\n        // Build view\r\n        for (const id of Object.keys(this.gizmos)) {\r\n            this.build(id);\r\n        };\r\n    }\r\n}\r\n\r\n// Breaks down \"skill1, skill2 , skill3\" string\r\n//          to ['skill1','skill2','skill3'] array\r\nfunction skillStringToArray(skillString) {\r\n    if (skillString == '') return [];\r\n    return skillString.split(',').map((skill) => skill.trim());\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/gizmo.js","\r\n// Send out an error alert in console and on the page.\r\nexport function error(err, message='') {\r\n    // timestamp\r\n    let newDate = new Date();\r\n    newDate.setTime(Date.now());\r\n    let dateString = newDate.toTimeString();\r\n    console.log(dateString);\r\n\r\n    // Post to page\r\n    $('#message').text(`Whoops! An error occurred. ${err.message} ${message}`);\r\n    console.log('Error log:');\r\n    console.error(err);\r\n}\r\n\r\n// Nicely formatted time\r\nexport function formatAMPM(date) {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    seconds = seconds < 10 ? '0'+seconds : seconds;\r\n    let strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\r\n    return strTime;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/utility.js","import { error } from './utility.js';\r\nimport { API_URL } from './local_settings.js';\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Functions to retrieve and extract data from Five9.\r\n// These functions interact with our server, which houses data\r\n// and formats data originating in Five9 reports.\r\n////////////////////////////////////////////////////////////////\r\n\r\n// Get agent/ACD statistics\r\nexport async function getStatistics(filter) {\r\n    const response = await request(filter, 'statistics');\r\n    return response.json();\r\n}\r\n\r\n// Get real-time stats\r\nexport async function queueStats() {\r\n    return getData({}, 'queue-stats');\r\n}\r\n\r\n/**\r\n * Get CSV string of report results from Five9\r\n * @param  {Object} params\r\n * @param  {String} type   endpoint: `maps` or `service-level`\r\n * @return {Promise -> Object}        JSON data\r\n */\r\nexport function getReportResults(params, type) {\r\n    return getData(params, `reports/${type}`);\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Users\r\n/**\r\n * Return user information from username.\r\n * @param  {String} username if blank, will return currently logged-in user's\r\n *                           data\r\n * @return {Promise -> Object} User's object\r\n */\r\nexport async function getUserInformation(username = '') {\r\n    let path = username ? `users/data/${username}` : `users/data`;\r\n    const response = await request({}, path, 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Set a user's theme preferences.\r\n * @param  {String} username\r\n * @param  {Object} newTheme with theme fields\r\n * @return {Promise -> String} response message\r\n */\r\nexport async function updateUserTheme(username, newTheme) {\r\n    const response = await request(\r\n        { username: username, newTheme: newTheme },\r\n        `users/theme`, 'PATCH'\r\n    );\r\n    return response.text();\r\n}\r\n\r\n// Admin users\r\nexport async function getAdminUsers() {\r\n    let response = await request({}, 'users/admin', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\nexport async function updateAdminUser(user) {\r\n    let response = await request({user: user}, 'users/admin', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\n// Supervisor users\r\nexport async function getSupervisorUsers() {\r\n    let response = await request({}, 'users/supervisor', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\nexport async function updateSupervisorUser(user) {\r\n    let response = await request({user: user}, 'users/supervisor', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Fields\r\n/**\r\n * List of available fields for widgets.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getFieldList() {\r\n    let response = await request({}, 'fields', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a field on server.\r\n * @param  {Object}  field new object\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function updateField(field) {\r\n    let response = await request({field: field}, 'fields', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a field from server.\r\n * @param  {Object}  field object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteField(field) {\r\n    let response = await request({field: field}, 'fields', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Goals\r\n/**\r\n * List of all goals.\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalList() {\r\n    let response = await request({}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * List of goals that apply to the given agent group(s).\r\n * @param  {Array of Strings}   agentGroups\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalsForAgentGroups(agentGroups) {\r\n    let response = await request({agentGroups: agentGroups}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a goal on server.\r\n * @param  {Object}  goal new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a goal from server.\r\n * @param  {Object}  goal object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Datasources' settings\r\n/**\r\n * List of all datasources.\r\n * @return {Promise} resolves to array of datasource objects\r\n */\r\nexport async function getDatasources() {\r\n    let response = await request({}, 'datasources', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a datasource on server.\r\n * @param  {Object}  datasource new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a datasource from server.\r\n * @param  {Object}  datasource object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * Get skill groups with associated names, agentGroups and skills\r\n * @return {Promise -> [Object]} array of objects from SkillGroup table\r\n */\r\nexport async function getSkillGroups() {\r\n    let response = await request({}, 'skill-group', 'GET');\r\n    return response.json();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// 'Helpful Links'\r\n/**\r\n * List of all links.\r\n * @return {Promise} resolves to array of link objects\r\n */\r\nexport async function getLinkList() {\r\n    let response = await request({}, 'links', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a link on server.\r\n * @param  {Object}  link new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateLink(link) {\r\n    let response = await request({link: link}, 'links', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a link from server.\r\n * @param  {Object}  link object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteLink(link) {\r\n    let response = await request({link: link}, 'links', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Skilling jobs\r\n/**\r\n * List of available scheduled skilling jobs.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getSkillJobs() {\r\n    let response = await request({}, 'skill', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a scheduled skilling job on server.\r\n * @param  {Object}  job new object\r\n * @return {Promise} resolves to server's response\r\n */\r\nexport async function updateSkillJob(job) {\r\n    // format data\r\n    const format = (skillStr) => skillStr.split(',').map((sk) => sk.trim());\r\n\r\n    ['addSkills', 'removeSkills'].map((prop) => {\r\n        let skills = job.data[prop];\r\n        if (typeof(skills) == 'string') {\r\n            job.data[prop] = format(skills);\r\n        }\r\n    });\r\n\r\n    let response = await request({job: job, data: job.data}, 'skill', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete the given skilling job object.\r\n * @param  {Object} job\r\n * @return {Promise} resolves to response from server\r\n */\r\nexport async function deleteSkillJob(job) {\r\n    let response = await request({job: job}, 'skill', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Server utilities\r\nexport async function rebootServer() {\r\n    const response = await request({}, 'reboot-server', 'POST');\r\n    return response.text();\r\n}\r\nexport async function reloadData(params) {\r\n    const response = await request(params, 'reload-data', 'POST');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * Upload CSV file to custom data source.\r\n * @param  {Object} params including fields datasourceName and csv\r\n * @return {Promise}       resolves to string (server response message)\r\n */\r\nexport async function uploadData(params) {\r\n    try {\r\n        const response = await request(params, 'upload-data', 'POST');\r\n        return await response.text();\r\n    } catch (err) {\r\n        return err.message;\r\n    }\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Request helpers\r\n///////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n *  Helper function that pulls credentials from DOM, then makes request to server.\r\n * @param  {Object} parameters POSTed to server\r\n * @param  {String} endpoint   at server's API\r\n * @return {Object}            JSON data\r\n */\r\nasync function getData(parameters, endpoint) {\r\n    const response = await request(parameters, endpoint);\r\n    return await response.json();\r\n}\r\n\r\n\r\n/**\r\n * Make a request to server with given parameters.\r\n * @param  {Object} parameters passed as body of request\r\n * @param  {String} [url='statistics'] endpoint on server\r\n * @param  {String} [method='POST'] HTTP action\r\n * @return {Promise} response from server\r\n */\r\nasync function request(parameters, url='statistics', method='POST') {\r\n    const apiURL = API_URL + url; // defined in api_url.js\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    }\r\n    if (method != 'GET') {\r\n        requestOptions.body = JSON.stringify(parameters);\r\n    }\r\n\r\n    return fetch(apiURL, requestOptions)\r\n        .then(async (response) => {\r\n            if (response.status == 504) notifyServer504(parameters, url); // debugging\r\n            if (!response.ok) {\r\n                let bodyText = await response.text();\r\n                throw new Error(`Server responded with ${response.status} ${response.statusText}: ${bodyText}`);\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nasync function notifyServer504() {\r\n    return fetch(API_URL + 'notify-504');\r\n}\r\n\r\n\r\n// Gets the actual returned value/data out of JSON from the server.\r\nfunction jsonToReturnValue(json, type) {\r\n    return json['env:Envelope']['env:Body'][0]['ns2:'+type+'Response'][0]['return'][0];\r\n}\r\n\r\n// takes JSON from server and returns text within 'faultstring' tag (if existant)\r\nfunction getFaultStringFromData(data) {\r\n    try {\r\n        return data['env:Envelope']['env:Body'][0]['env:Fault'][0]['faultstring'];\r\n    } catch (err) {\r\n        return '';\r\n    }\r\n}\r\n\r\n// Given a requestType, returns JSON to submit to server in POST request.\r\n// requestType should match Five9 API command.\r\nexport function getParameters(requestType) {\r\n    let params = {};\r\n    // Initiate session\r\n    if (requestType == 'setSessionParameters') {\r\n        params = {\r\n            'service': 'setSessionParameters',\r\n            'settings': [ {\r\n                'viewSettings': [\r\n                    { 'idleTimeOut': 1800 },\r\n                    { 'statisticsRange': 'CurrentDay' },\r\n                    { 'rollingPeriod': 'Minutes10' }\r\n                ]\r\n            } ]\r\n        }\r\n    }\r\n    // Get real-time call stats\r\n    if (requestType == 'getStatistics') {\r\n        params = {\r\n            'service': 'getStatistics',\r\n            'settings': [ {\r\n                'statisticType': 'ACDStatus'\r\n            } ]\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/api.js","export const API_URL = 'http://localhost:3000/api/';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/local_settings.js","import { error, formatAMPM } from './utility';\r\nimport * as api from './api';\r\nimport GizmoManager from './gizmo';\r\n\r\n// timeout to pause event loop when needed\r\nlet timeout = null;\r\n\r\n// Object to manage the gizmos (queue widgets)\r\nlet gizmo = null;\r\n\r\nasync function startItUp() {\r\n    gizmo = new GizmoManager();\r\n    await gizmo.load();\r\n\r\n    // listen for sign-in button press\r\n    $('.play-pause').click(async (event) => {\r\n        // prevent redirection\r\n        event.preventDefault();\r\n\r\n        // Currently running?\r\n        // stop any current event loops running\r\n        if (timeout != null) {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            $('.play-pause').html('&#9658;'); // show play button\r\n            // Remind user that they're paused\r\n            $('.message').text(`Dashboard paused since ${moment()}.`);\r\n        }\r\n        // Not running? Start it up\r\n        else {\r\n            $('.play-pause').html('&#10074;&#10074;'); // show pause button\r\n            // begin updating data & page every few seconds\r\n            try {\r\n                runQueueDashboard();\r\n            } catch (err) {\r\n                error(err, 'Error occurred while queue dashboard was running.');\r\n            }\r\n        }\r\n    });\r\n\r\n    // Update displayed queue list when user clicks button\r\n    $('.show-skills-list').click(function (event) {\r\n        const id = $(this).closest('.gizmo').attr('id');\r\n        const thisgizmo = gizmo.gizmos[id];\r\n        thisgizmo.showQueueList = !thisgizmo.showQueueList;\r\n        const table = $(this).next('table.queue-list');\r\n        createQueueList(thisgizmo, table);\r\n    });\r\n\r\n    // Trigger \"play\" button to start updating when page is loaded.\r\n    $('.play-pause').trigger('click');\r\n    $('.big-display').click(function(event) {\r\n        if (document.getElementById('big-display').href.slice(-4) != '.css') {\r\n            document.getElementById('big-display').href = `styles/big-display.css`;\r\n        } else {\r\n            document.getElementById('big-display').href = '';\r\n        }\r\n    });\r\n};\r\nwindow.addEventListener('load', startItUp);\r\n\r\n\r\nasync function runQueueDashboard() {\r\n    let lastSlUpdate = null;\r\n    let slData = [];\r\n\r\n    async function eventLoop(interval) {\r\n        // Get the current queue data\r\n        try {\r\n            // Retrieve current queue stats\r\n            let data = await api.queueStats();\r\n\r\n            // Get SL stats\r\n            // Only update SL every 3 minutes\r\n            let currentTime = new Date();\r\n            if ((currentTime - lastSlUpdate) > 180000) {\r\n                try {\r\n                    let time = {\r\n                        start: moment().format('YYYY-MM-DD') + 'T00:00:00',\r\n                        end:   moment().format('YYYY-MM-DD') + 'T23:59:59'\r\n                    };\r\n                    slData = await api.getReportResults(time, 'service-level');\r\n                    lastSlUpdate = currentTime;\r\n                } catch (err) {\r\n                    error(err, `An error occurred when getting service level data: ${err}`);\r\n                    slData = [];\r\n                }\r\n            }\r\n            // Update the view / DOM\r\n            refreshView(data, slData);\r\n\r\n        } catch (err) {\r\n            error(err);\r\n        }\r\n\r\n        // restart loop\r\n        timeout = setTimeout(() => {\r\n            eventLoop(interval);\r\n        }, interval);\r\n    }\r\n\r\n    // Refresh every 20 seconds.\r\n    eventLoop(20000);\r\n}\r\n\r\n\r\n\r\n// Takes nicely formatted data. Updates dashboard view.\r\n// ${data} : ACD stats (current queue info)\r\n// ${serviceLevel} : service level report\r\nfunction refreshView(data, serviceLevelData) {\r\n    // update each gizmo on the screen\r\n    $('.gizmo').each((i, gizmoElement) => {\r\n        const thisGizmo = gizmo.gizmos[gizmoElement.id];\r\n        let name = thisGizmo.name;\r\n        let skills = thisGizmo.skillFilter;\r\n        // Clear old queue list from gizmo\r\n        thisGizmo.queueList = [];\r\n\r\n        // Determine calls and agent stats for this gizmo's skills\r\n        let callsInQueue = 0,\r\n            maxWait = 0,\r\n            agentsLoggedIn = 0,\r\n            agentsNotReady = 0,\r\n            agentsOnCall = 0,\r\n            agentsReady = 0,\r\n            serviceLevel = 0,\r\n            callsOffered = 0,\r\n            abandons = 0;\r\n\r\n        for (let i=0; i < data.length; i++) {\r\n            let queue = data[i];\r\n            // Include skills in gizmo filter, or all skills if none are in filter\r\n            if (skills.includes(queue['SkillName']) || skills.length == 0) {\r\n                // Real-time queue metrics\r\n                callsInQueue += queue['CallsInQueue'];\r\n                maxWait = Math.max(maxWait, queue['CurrentLongestQueueTime']);\r\n                agentsLoggedIn = Math.max(agentsLoggedIn, queue['AgentsLoggedIn'].split(' ')[0]*1);\r\n                agentsNotReady = Math.max(agentsNotReady, queue['AgentsNotReadyForCalls']);\r\n                agentsOnCall = Math.max(agentsOnCall, queue['AgentsOnCall']);\r\n                agentsReady = Math.max(agentsReady, queue['AgentsReadyForCalls']);\r\n\r\n                // Calculate SL and abandon rate\r\n                let metrics = serviceLevelData.reduce((totals, current) => {\r\n                    if (current.skill == queue['SkillName']) {\r\n                        totals.serviceLevel += current.serviceLevel;\r\n                        totals.calls += current.calls;\r\n                        totals.abandons += current.abandons;\r\n                    }\r\n                    return totals;\r\n                }, { serviceLevel: 0, calls: 0, abandons: 0 });\r\n                serviceLevel += metrics.serviceLevel;\r\n                callsOffered += metrics.calls;\r\n                abandons += metrics.abandons;\r\n\r\n                // Add to list of skills in queue\r\n                if (queue['CallsInQueue'] > 0) {\r\n                    thisGizmo.queueList.push({\r\n                        skillName: queue['SkillName'],\r\n                        callsInQueue: queue['CallsInQueue'],\r\n                        maxWait: formatWaitTime(queue['CurrentLongestQueueTime'])\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Format wait time from seconds to MM:SS or HH:MM:SS\r\n        let waitString = formatWaitTime(maxWait);\r\n\r\n        // Update metrics\r\n        let SLpercent = callsOffered == 0\r\n            ? 'N/A'\r\n            : Math.round(100 * serviceLevel / callsOffered) + '%';\r\n        let abandonRate = callsOffered == 0\r\n            ? 'N/A'\r\n            : Math.round(100 * abandons / callsOffered) + '%';\r\n        $(gizmoElement).find('.metric.service-level').text(SLpercent);\r\n        $(gizmoElement).find('.metric.abandon-rate').text(abandonRate);\r\n        $(gizmoElement).find('.calls-in-sl').text(serviceLevel);\r\n        $(gizmoElement).find('.calls-out-of-sl').text(callsOffered - serviceLevel);\r\n\r\n        $(gizmoElement).find('.metric.calls-in-queue').text(callsInQueue);\r\n        $(gizmoElement).find('.metric.max-wait').text(waitString);\r\n        $(gizmoElement).find('.agents-logged-in').text(agentsLoggedIn);\r\n        $(gizmoElement).find('.agents-not-ready-for-calls').text(agentsNotReady);\r\n        $(gizmoElement).find('.agents-on-call').text(agentsOnCall);\r\n        $(gizmoElement).find('.agents-ready-for-calls').text(agentsReady);\r\n\r\n        // Update queue list, if showing\r\n        if (thisGizmo.showQueueList) {\r\n            const table = $(gizmoElement).find('.queue-list');\r\n            createQueueList(thisGizmo, table);\r\n        }\r\n    }); // gizmo.forEach\r\n\r\n    // Clear old messages\r\n    $('#message').text(' ');\r\n\r\n    // Update clock\r\n    $('.clock').text(formatAMPM(new Date()));\r\n}\r\n\r\n\r\n// Update queue list in DOM\r\n// ${gizmo} object to build list on. ${table} element storing list.\r\nfunction createQueueList(thisGizmo, table) {\r\n    table.empty(); // clear old list\r\n\r\n    // anything to list?\r\n    if (thisGizmo.queueList.length == 0) return;\r\n\r\n    // Sort by max wait time\r\n    thisGizmo.queueList.sort((a, b) => a.maxWait > b.maxWait ? -1 : 1);\r\n\r\n    // Add headers\r\n    const thead = document.createElement('thead');\r\n    const th1 = document.createElement('th');\r\n    th1.appendChild(document.createTextNode('Skill Name'));\r\n    th1.className += ' type-text';\r\n    const th2 = document.createElement('th');\r\n    th2.appendChild(document.createTextNode('Calls'));\r\n    th2.className += ' type-number';\r\n    const th3 = document.createElement('th');\r\n    th3.appendChild(document.createTextNode('Max Wait'));\r\n    th3.className += ' type-number';\r\n    thead.appendChild(th1); thead.appendChild(th2); thead.appendChild(th3);\r\n    table.append(thead);\r\n\r\n    // Update DOM from queueList\r\n    thisGizmo.queueList.forEach((queue) => {\r\n        const tr = document.createElement('tr');\r\n        const td1 = document.createElement('td');\r\n        td1.appendChild(document.createTextNode(queue.skillName));\r\n        td1.className += ' type-text';\r\n        const td2 = document.createElement('td');\r\n        td2.appendChild(document.createTextNode(queue.callsInQueue));\r\n        td2.className += ' type-number';\r\n        const td3 = document.createElement('td');\r\n        td3.appendChild(document.createTextNode(queue.maxWait));\r\n        td3.className += ' type-number';\r\n        tr.appendChild(td1); tr.appendChild(td2); tr.appendChild(td3);\r\n        table.append(tr);\r\n    });\r\n}\r\n\r\n// Turns seconds into nicely formatted MM:SS or HH:MM:SS\r\nfunction formatWaitTime(seconds) {\r\n    const wait = new Date(null);\r\n    wait.setSeconds(seconds);\r\n    if (seconds < 3600) { // MM:SS\r\n        return wait.toISOString().substr(14, 5);\r\n    }\r\n    return wait.toISOString().substr(11, 8); // HH:MM:SS\r\n}\r\n\r\n// Return formatted column / key assignments\r\n// Takes JSON generated from original Five9 SOAP API response\r\nfunction jsonToViewData(json,\r\n        includeFields=['Skill Name', 'Calls In Queue',\r\n                        'Current Longest Queue Time', 'Agents Logged In',\r\n                        'Agents Not Ready For Calls', 'Agents On Call',\r\n                        'Agents Ready For Calls']) {\r\n    let columns = json['columns'][0]['values'][0]['data'];\r\n    let rows = json['rows'];\r\n    let data = [];\r\n\r\n    for (let i=0; i < rows.length; i++) {\r\n        let row = rows[i]['values'][0]['data'];\r\n        let newRow = {};\r\n        for (let j=0; j < includeFields.length; j++) {\r\n            let field = includeFields[j];\r\n            newRow[field] = row[columns.indexOf(field)];\r\n            // trim extra 0's to fix time formatting (to seconds)\r\n            if (field == 'Current Longest Queue Time')\r\n                newRow[field] = newRow[field].slice(0, -3);\r\n        }\r\n        data.push(newRow);\r\n    }\r\n    return data;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/queue-dashboard.js"],"sourceRoot":""}
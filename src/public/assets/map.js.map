{"version":3,"sources":["webpack:///webpack/bootstrap 2b6164b41610daa04bfe","webpack:///./src/public/javascript/maps-dashboard.js","webpack:///./src/public/javascript/maps.js","webpack:///./src/public/javascript/api.js","webpack:///./src/public/javascript/utility.js","webpack:///./src/public/javascript/local_settings.js"],"names":["timeout","mapSettings","display","$","document","ready","callMap","click","event","clearTimeout","startUpdatingMap","setupFilterListeners","trigger","children","currentTarget","hasClass","addClass","removeClass","change","val","refreshRate","text","updateMap","moment","format","err","error","setTimeout","params","reportTimeRange","skills","customerData","getCustomerData","callData","data","Object","keys","map","zip","zipCode","calls","filter","d","reduce","sum","customers","missing","getZipsWithoutCustomers","concat","field","keyTitle","formatLegend","d3","filterFn","minCustomers","value","keyFn","substring","rollupFn","x","callsPerCustomer","callsByZip","nest","key","rollup","entries","update","console","log","customerCount","lastUpdated","isBefore","subtract","rawData","object","item","isZipWithoutCustomers","hasOwnProperty","time","start","tz","end","relativeSelector","minutes","isNaN","Error","seconds","CallMap","create","colors","width","height","minValue","min","maxValue","max","scaleLinear","domain","extent","rangeRound","color","scaleThreshold","range","path","geoPath","svg","select","attr","drawKey","queue","defer","json","API_URL","await","usa","zipData","onReady","drawZips","drawStates","g","remove","exit","selectAll","backgroundColor","sorted","features","sort","a","b","isEmptyZip","properties","ZIP","insert","enter","append","get","o","has","invertExtent","Math","abs","call","axisBottom","tickSize","tickFormat","tickValues","getStatistics","response","request","queueStats","getData","getReportResults","type","getLookerData","lookId","getLayout","agentGroups","getLogs","query","getUserInformation","username","updateUserTheme","newTheme","getAdminUsers","users","updateAdminUser","user","getSupervisorUsers","updateSupervisorUser","getUsers","getFieldList","updateField","deleteField","getGoalList","getGoalsForAgentGroups","updateGoal","goal","deleteGoal","getDatasources","updateDatasource","datasource","deleteDatasource","getSkillGroups","getLinkList","updateLink","link","deleteLink","getSkillJobs","updateSkillJob","job","skillStr","split","sk","trim","prop","deleteSkillJob","rebootServer","reloadData","uploadData","message","parameters","endpoint","url","method","apiURL","requestOptions","headers","credentials","body","JSON","stringify","fetch","then","status","notifyServer504","ok","bodyText","statusText","jsonToReturnValue","getFaultStringFromData","getParameters","requestType","newDate","Date","setTime","now","dateString","toTimeString","formatAMPM","date","hours","getHours","getMinutes","getSeconds","ampm","strTime"],"mappings":"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","file":"map.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 113);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2b6164b41610daa04bfe","import { error } from './utility';\r\nimport * as api from './api';\r\nimport CallMap from './maps';\r\n\r\n// General functions to initiate the call map dashboard.\r\n// Uses the CallMap class defined in maps.js to draw the D3 map.\r\n\r\n// timeout to pause event loop when needed\r\nlet timeout = null;\r\nconst mapSettings = {\r\n    display: 'total'\r\n};\r\n\r\n$(document).ready(() => {\r\n    let callMap = new CallMap();\r\n\r\n    // listen for update button presses\r\n    $('.filters-wrapper .update').click(async (event) => {\r\n        // stop any current event loops running\r\n        if (timeout != null) {\r\n            clearTimeout(timeout);\r\n        }\r\n        // Update map every 4 minutes\r\n        startUpdatingMap(callMap, 4*60);\r\n    });\r\n\r\n    // Listen for changes to the filter settings\r\n    setupFilterListeners();\r\n\r\n    // Start updating on page load\r\n    $('.filters-wrapper .update').trigger('click');\r\n});\r\n\r\n\r\nfunction setupFilterListeners() {\r\n    // handle toggle for relative / absolute date filters\r\n    $('.date-type-toggle').children().click((event) => {\r\n        // Relative button was chosen\r\n        if ($(event.currentTarget).hasClass('relative')) {\r\n            // Update toggle buttons to show current selection\r\n            $('.date-type-toggle .relative').addClass('checked');\r\n            $('.date-type-toggle .absolute').removeClass('checked');\r\n            // Display the appropriate date selection\r\n            $('.date-filter-inputs.absolute').addClass('hidden');\r\n            $('.date-filter-inputs.relative').removeClass('hidden');\r\n        // Absolute button was clicked\r\n        } else {\r\n            $('.date-type-toggle .absolute').addClass('checked');\r\n            $('.date-type-toggle .relative').removeClass('checked');\r\n            $('.date-filter-inputs.relative').addClass('hidden');\r\n            $('.date-filter-inputs.absolute').removeClass('hidden');\r\n        }\r\n    })\r\n\r\n    // Handle selection of Today vs Last X Minutes for relative filters\r\n    $('.relative-date-selector').change(() => {\r\n        if ($('.relative-date-selector').val() == 'last-x-minutes') {\r\n            $('.relative-parameters-wrapper').removeClass('hidden');\r\n        } else {\r\n            $('.relative-parameters-wrapper').addClass('hidden');\r\n        }\r\n    });\r\n\r\n    // Alternate between mapping total calls or calls per customer count\r\n    $('.call-display-toggle').children().click((event) => {\r\n        // Was Total button clicked?\r\n        if ($(event.currentTarget).hasClass('total')) {\r\n            mapSettings.display = 'total';\r\n            $('.call-display-toggle .total').addClass('checked');\r\n            $('.call-display-toggle .relative').removeClass('checked');\r\n            // show minimum customer filter\r\n            $('.call-display .minimum-customers-wrapper').addClass('hidden');\r\n        // Relative display was chosen\r\n        } else {\r\n            mapSettings.display = 'relative';\r\n            $('.call-display-toggle .total').removeClass('checked');\r\n            $('.call-display-toggle .relative').addClass('checked');\r\n            $('.call-display .minimum-customers-wrapper').removeClass('hidden');\r\n        }\r\n    });\r\n}\r\n\r\n// Begins a loop of updating the map data every ${refreshRate} seconds\r\nasync function startUpdatingMap(callMap, refreshRate) {\r\n    try {\r\n        $('.message').text(`Updating...`);\r\n        await updateMap(callMap);\r\n        $('.message').text('Last updated ' + moment().format('h:mm:ss A') + '.');\r\n    } catch (err) {\r\n        error(err);\r\n    }\r\n    timeout = setTimeout(() => startUpdatingMap(callMap, refreshRate),\r\n                         refreshRate * 1000);\r\n}\r\n\r\n// Update callMap (d3 map object) based on parameters in page\r\nasync function updateMap(callMap) {\r\n    const params = reportTimeRange();\r\n    params.skills = $('.skills.filter').val();\r\n\r\n    // get all the datas\r\n    let customerData = await getCustomerData();\r\n    const callData = await api.getReportResults(params, 'maps');\r\n\r\n    // build data object off of customerData zip codes\r\n    let data = Object.keys(customerData)\r\n        .map((zip) => ({\r\n            zipCode: zip,\r\n            calls: callData\r\n                    .filter((d) => d.zipCode == zip)\r\n                    .reduce((sum, d) => sum + d.calls, 0),\r\n            customers: customerData[zip]\r\n        }));\r\n\r\n    // if any zips with calls are missing from customerData, add them here\r\n    let missing = getZipsWithoutCustomers(callData, customerData);\r\n    data = data.concat(missing);\r\n\r\n    // Determine the field being mapped -- total calls or per customer\r\n    let field;\r\n    if (mapSettings.display == 'total') {\r\n        field = 'calls';\r\n        callMap.keyTitle = 'Calls offered';\r\n        callMap.formatLegend = d3.format('d');\r\n    } else if (mapSettings.display == 'relative') {\r\n        field = 'callsPerCustomer';\r\n        callMap.keyTitle = 'Calls offered divided by customer base';\r\n        callMap.formatLegend = d3.format('.1%');\r\n    }\r\n\r\n    // If we're in relative display mode, the user can filter areas meeting a\r\n    // minimum customer count\r\n    let filterFn;\r\n    if (mapSettings.display == 'relative') {\r\n        let minCustomers = $('.minimum-customers').val() * 1;\r\n        filterFn = (d) => d.value.customers >= minCustomers;\r\n    } else {\r\n        filterFn = (d) => true;\r\n    }\r\n\r\n    // Key and value extractor functions\r\n    const keyFn = (d) => d.zipCode.substring(0, 3);\r\n    const rollupFn = (d) => {\r\n        let calls = d3.sum(d, (x) => x.calls);\r\n        let customers = d3.sum(d, (x) => x.customers);\r\n        let callsPerCustomer;\r\n        if (customers == 0) callsPerCustomer = 0;\r\n        else callsPerCustomer = calls / customers;\r\n        return {\r\n            'calls': calls,\r\n            'customers': customers,\r\n            'callsPerCustomer': callsPerCustomer\r\n        }\r\n    }\r\n\r\n    // Create the data structure in a D3-friendly way\r\n    let callsByZip = d3.nest()\r\n        .key(keyFn)\r\n        .rollup(rollupFn)\r\n        .entries(data)\r\n        .filter(filterFn)\r\n        .filter((d) => d.key != ''); // remove calls with no zipcode assigned\r\n\r\n    callMap.update(callsByZip, field, keyFn, rollupFn);\r\n\r\n    console.log('Finished updateMap() at ' + moment().format('h:mm:ss A'));\r\n}\r\n\r\n// Object to store customer zipcode data.\r\nconst customerCount = {\r\n    data: [],\r\n    // record time of last update (default to Y2K to force an update)\r\n    lastUpdated: moment('2000-01-01')\r\n};\r\n/**\r\n * Retrieve customer counts by zip code. Updates from the server every 6 hours.\r\n * @return {Object} in format { '<zip code here>': '31415' }\r\n */\r\nasync function getCustomerData() {\r\n    // reload data from server if it's been 6+ hours since the last update\r\n    if (customerCount.lastUpdated.isBefore(moment().subtract(6, 'hours'))) {\r\n        let rawData = await api.getReportResults({}, 'customers');\r\n\r\n        // Convert array of objects to a single object, with zipcode as key\r\n        // and customer count as volue\r\n        customerCount.data = rawData.reduce((object, item) => {\r\n            object[item.zipCode] = item.customerCount;\r\n            return object;\r\n        }, {});\r\n\r\n        customerCount.lastUpdated = moment();\r\n    }\r\n    return customerCount.data;\r\n}\r\n\r\n\r\nfunction getZipsWithoutCustomers(callData, customerData) {\r\n    return callData\r\n        .filter((d) => isZipWithoutCustomers(d.zipCode, customerData))\r\n        .map((d) => ({\r\n            zipCode: d.zipCode,\r\n            calls: d.calls,\r\n            customers: 0\r\n        }));\r\n}\r\n\r\nfunction isZipWithoutCustomers(zip, customerData) {\r\n    return (zip != '' && !customerData.hasOwnProperty(zip));\r\n}\r\n\r\n// Determines start/end times chosen by user\r\n// Return {start:'X',end:'Y'}\r\nfunction reportTimeRange() {\r\n    const time = {};\r\n    // Are we using absolute dates?\r\n    if ($('.date-type-toggle .absolute').hasClass('checked')) {\r\n        time.start = moment($('.filter.start-time').val())\r\n                        .tz('America/Los_Angeles')\r\n                        .format('YYYY-MM-DD[T]HH:mm:ss');\r\n        time.end   = moment($('.filter.end-time'  ).val())\r\n                        .tz('America/Los_Angeles')\r\n                        .format('YYYY-MM-DD[T]HH:mm:ss');\r\n    // Using relative dates\r\n    } else {\r\n        const relativeSelector = $('.relative-date-selector').val();\r\n        if (relativeSelector == 'today') {\r\n            time.start = moment().format('YYYY-MM-DD') + 'T00:00:00';\r\n            time.end   = moment().format('YYYY-MM-DD') + 'T23:59:59';\r\n        // If user specified a certain number of minutes, subtract the minutes,\r\n        // convert to Eastern Time, and round down to nearest 30-minute interval\r\n        } else if (relativeSelector == 'last-x-minutes') {\r\n            const minutes = $('.filter.relative-minutes').val();\r\n            if (isNaN(minutes)) throw new Error(`Relative minute value ${minutes} is not a number.`);\r\n            // Convert to server's timezone\r\n            let start = moment().subtract(minutes, 'm').tz('America/Los_Angeles');\r\n            // round down to nearest interval\r\n            start.subtract(start.minutes() % 30, 'minutes');\r\n            start.seconds(0);\r\n            time.start = start.format('YYYY-MM-DD[T]HH:mm:ss');\r\n            console.log(time.start);\r\n            time.end   = moment().format('YYYY-MM-DD') + 'T23:59:59';\r\n        } else {\r\n            throw new Error('Relative date selector value is ' + relativeSelector +\r\n                            '. Value not recognized.');\r\n        }\r\n    }\r\n    return time;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/maps-dashboard.js","import { API_URL } from './local_settings';\r\n\r\n// Map of U.S. with ZIP3 areas colored by calls offered.\r\n// Offers methods to create/draw the map and update when new data is received.\r\nexport default class CallMap {\r\n    /**\r\n     * Create and draw map on initial run\r\n     * @param  {Object}  data d3.nest data object with zipcode as key and fields as values\r\n     * @param  {String}  field to map (calls or callsPerCustomer)\r\n     * @return {Promise} resolves when complete\r\n     */\r\n    create(data, field) {\r\n        // Taken from d3.schemeBlues[9]\r\n        this.colors = [\"#f7fbff\", \"#deebf7\", \"#c6dbef\", \"#9ecae1\", \"#6baed6\", \"#4292c6\", \"#2171b5\", \"#08519c\", \"#08306b\"];\r\n\r\n        let width = 960,\r\n            height = 500;\r\n\r\n        this.calls = d3.map(data, (d) => d.key);\r\n        let minValue = d3.min(data, (d) => d.value[field]);\r\n        let maxValue = d3.max(data, (d) => d.value[field]);\r\n\r\n        this.x = d3.scaleLinear()\r\n            .domain(d3.extent(data, (d) => d.value[field]))\r\n            .rangeRound([600, 860]);\r\n\r\n        this.color = d3.scaleThreshold()\r\n            .domain(d3.range(0, maxValue, maxValue / 9))\r\n            .range(this.colors);\r\n\r\n        this.path = d3.geoPath();\r\n\r\n        this.svg = d3.select('svg')\r\n            .attr('width', width)\r\n            .attr('height', height);\r\n\r\n        // Key / legend\r\n        this.keyTitle = 'Calls offered';\r\n        this.drawKey(this.x, this.color);\r\n\r\n        return d3.queue()\r\n            .defer(d3.json, API_URL + 'states')\r\n            .defer(d3.json, API_URL + 'zip3-data')\r\n            .await((err, usa, zipData) => this.onReady(err, usa, zipData, field));\r\n    }\r\n\r\n    // Assign initial variables when map is first created and topographic\r\n    // data is first loaded\r\n    onReady(err, usa, zipData, field) {\r\n        this.zipData = zipData;\r\n        this.usa = usa;\r\n        this.drawZips(zipData, field);\r\n        this.drawStates(usa);\r\n    }\r\n\r\n    // Update map with new data\r\n    async update(data, field) {\r\n        // Check if this chart already exists. If not, create it.\r\n        if (!this.svg) return this.create(data, field);\r\n\r\n        // match calls to keys (zip codes)\r\n        this.calls = d3.map(data, (d) => d.key);\r\n\r\n        // update domain and range\r\n        let max = d3.max(data, (d) => d.value[field]);\r\n        this.x.domain(d3.extent(data, (d) => d.value[field]));\r\n        this.color.domain(d3.range(0, max, max / 9));\r\n\r\n        // Key / legend\r\n        // remove then redraw the color key\r\n        this.g.remove().exit();\r\n        this.drawKey(this.x, this.color);\r\n\r\n        // data - paint the state lines and zip codes\r\n        // clear old states and zips\r\n        this.svg.selectAll('.zips, .states').remove().exit();\r\n        // then rebuild them\r\n        this.drawZips(this.zipData, field);\r\n        this.drawStates(this.usa);\r\n    }\r\n\r\n    // Draw ZIP3 areas, colored by number of calls\r\n    // ${zipData} is GeoJSON describing the topography\r\n    drawZips(zipData, field) {\r\n        let backgroundColor = '#feffff';\r\n        // Sort so that areas with call data are drawn last and end up on top\r\n        let sorted = zipData.features.sort((a, b) => {\r\n            if (this.isEmptyZip(a.properties.ZIP, field)) return -1;\r\n            return 1;\r\n        });\r\n\r\n        this.svg.insert('g', '.key')\r\n            .attr('class', 'zips')\r\n          .selectAll('path')\r\n          .data(sorted)\r\n          .enter().append('path')\r\n            .attr('d', this.path)\r\n            .attr('fill', (d) => {\r\n                let zip = d.properties.ZIP;\r\n                if (this.isEmptyZip(zip, field)) return backgroundColor;\r\n                return this.color(this.calls.get(zip).value[field]);\r\n            })\r\n            .attr('stroke', (d) => {\r\n                let zip = d.properties.ZIP;\r\n                if (this.isEmptyZip(zip, field)) return backgroundColor;\r\n                return 'hsla(208, 30%, 60%, 0.5)';\r\n            })\r\n          .append('title')\r\n            .text((d) => {\r\n                let zip = d.properties.ZIP;\r\n                let o = { calls: 0, customers: 0, callsPerCustomer: 0 };\r\n                if (this.calls.has(zip)) {\r\n                    o = this.calls.get(zip).value;\r\n                }\r\n                return `ZIP3: ${zip}\\nCalls: ${o.calls}\\nCustomers: ${o.customers}\\nCalls divided by customer count: ${d3.format(\".2%\")(o.callsPerCustomer)}`;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns true if the zip code is not in the data or has a value equal to 0\r\n     * @param  {String}  zip   zip code\r\n     * @param  {String}  field to check in this.calls.value\r\n     * @return {Boolean}\r\n     */\r\n    isEmptyZip(zip, field) {\r\n        return (!this.calls.has(zip) || this.calls.get(zip).value[field] == 0);\r\n    }\r\n\r\n    // Draw the state outlines\r\n    drawStates(usa) {\r\n        this.svg.insert('g', '.key')\r\n            .attr('class', 'states')\r\n          .selectAll('path')\r\n          .data(usa.features)\r\n          .enter().append('path')\r\n            .attr('d', this.path);\r\n    }\r\n\r\n    // Draw the key/legend\r\n    drawKey(x, color) {\r\n        this.g = this.svg.append('g')\r\n            .attr('class', 'key')\r\n            .attr('transform', 'translate(0,40)');\r\n        this.g.selectAll('rect')\r\n            .data(color.range().map((d) => {\r\n                d = color.invertExtent(d);\r\n                if (d[0] == null) d[0] = x.domain()[0];\r\n                if (d[1] == null) d[1] = x.domain()[1];\r\n                return d;\r\n            }))\r\n            .enter().append('rect')\r\n              .attr('height', 8)\r\n              .attr('x', (d) => x(d[0]))\r\n              .attr('width', (d) => {\r\n                  return Math.abs(x(d[1]) - x(d[0]));\r\n              } )\r\n              .attr('fill', (d) => color(d[0]));\r\n\r\n        this.g.append('text')\r\n            .attr('class', 'caption')\r\n            .attr('x', x.range()[0])\r\n            .attr('y', -6)\r\n            .attr('fill', '#444')\r\n            .attr('text-anchor', 'start')\r\n            .attr('font-weight', 'bold')\r\n            .text(this.keyTitle);\r\n          this.g.call(d3.axisBottom(x)\r\n            .tickSize(13)\r\n            .tickFormat(this.formatLegend)\r\n            .tickValues(color.domain()))\r\n          .select('.domain')\r\n            .remove();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/maps.js","import { error } from './utility.js';\r\nimport { API_URL } from './local_settings.js';\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Functions to retrieve and extract data from Five9.\r\n// These functions interact with our server, which houses data\r\n// and formats data originating in Five9 reports.\r\n////////////////////////////////////////////////////////////////\r\n\r\n// Get agent/ACD statistics\r\nexport async function getStatistics(filter) {\r\n    const response = await request(filter, 'statistics');\r\n    return response.json();\r\n}\r\n\r\n// Get real-time stats\r\nexport async function queueStats() {\r\n    return getData({}, 'queue-stats');\r\n}\r\n\r\n/**\r\n * Get CSV string of report results from Five9\r\n * @param  {Object} params\r\n * @param  {String} type   endpoint: `maps` or `service-level`\r\n * @return {Promise -> Object}        JSON data\r\n */\r\nexport function getReportResults(params, type) {\r\n    return getData(params, `reports/${type}`);\r\n}\r\n\r\n/**\r\n * Pull Looker data from given Look\r\n * @param  {String} lookId\r\n * @return {Object} JSON data\r\n */\r\nexport async function getLookerData(lookId) {\r\n    let response = await request({lookId: lookId}, 'looker');\r\n    return await response.json();\r\n}\r\n\r\n/**\r\n * Get scorecard JSON layout.\r\n * @param  {Array of Strings} agentGroups user's agent groups\r\n * @param  {String} type either team or individual layout\r\n * @return {Object}\r\n */\r\nexport async function getLayout(agentGroups, type) {\r\n    let response = await request({agentGroups: agentGroups, type: type}, 'layout');\r\n    return await response.json();\r\n}\r\n\r\nexport async function getLogs(query) {\r\n    let response = await request({query: query}, 'logs');\r\n    return await response.json();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Users\r\n/**\r\n * Return user information from username.\r\n * @param  {String} username if blank, will return currently logged-in user's\r\n *                           data\r\n * @return {Promise -> Object} User's object\r\n */\r\nexport async function getUserInformation(username = '') {\r\n    let path = username ? `users/data/${username}` : `users/data`;\r\n    const response = await request({}, path, 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Set a user's theme preferences.\r\n * @param  {String} username\r\n * @param  {Object} newTheme with theme fields\r\n * @return {Promise -> String} response message\r\n */\r\nexport async function updateUserTheme(username, newTheme) {\r\n    const response = await request(\r\n        { username: username, newTheme: newTheme },\r\n        `users/theme`, 'PATCH'\r\n    );\r\n    return response.text();\r\n}\r\n\r\n// Admin users\r\nexport async function getAdminUsers() {\r\n    let response = await request({}, 'users/admin', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\nexport async function updateAdminUser(user) {\r\n    let response = await request({user: user}, 'users/admin', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\n// Supervisor users\r\nexport async function getSupervisorUsers() {\r\n    let response = await request({}, 'users/supervisor', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\nexport async function updateSupervisorUser(user) {\r\n    let response = await request({user: user}, 'users/supervisor', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\n// Get list of all users\r\nexport async function getUsers() {\r\n    let response = await request({}, 'users', 'GET');\r\n    return response.json();\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Fields\r\n/**\r\n * List of available fields for widgets.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getFieldList() {\r\n    let response = await request({}, 'fields', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a field on server.\r\n * @param  {Object}  field new object\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function updateField(field) {\r\n    let response = await request({field: field}, 'fields', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a field from server.\r\n * @param  {Object}  field object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteField(field) {\r\n    let response = await request({field: field}, 'fields', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Goals\r\n/**\r\n * List of all goals.\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalList() {\r\n    let response = await request({}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * List of goals that apply to the given agent group(s).\r\n * @param  {Array of Strings}   agentGroups\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalsForAgentGroups(agentGroups) {\r\n    let response = await request({agentGroups: agentGroups}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a goal on server.\r\n * @param  {Object}  goal new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a goal from server.\r\n * @param  {Object}  goal object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Datasources' settings\r\n/**\r\n * List of all datasources.\r\n * @return {Promise} resolves to array of datasource objects\r\n */\r\nexport async function getDatasources() {\r\n    let response = await request({}, 'datasources', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a datasource on server.\r\n * @param  {Object}  datasource new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a datasource from server.\r\n * @param  {Object}  datasource object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * Get skill groups with associated names, agentGroups and skills\r\n * @return {Promise -> [Object]} array of objects from SkillGroup table\r\n */\r\nexport async function getSkillGroups() {\r\n    let response = await request({}, 'skill-group', 'GET');\r\n    return response.json();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// 'Helpful Links'\r\n/**\r\n * List of all links.\r\n * @return {Promise} resolves to array of link objects\r\n */\r\nexport async function getLinkList() {\r\n    let response = await request({}, 'links', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a link on server.\r\n * @param  {Object}  link new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateLink(link) {\r\n    let response = await request({link: link}, 'links', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a link from server.\r\n * @param  {Object}  link object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteLink(link) {\r\n    let response = await request({link: link}, 'links', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Skilling jobs\r\n/**\r\n * List of available scheduled skilling jobs.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getSkillJobs() {\r\n    let response = await request({}, 'skill', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a scheduled skilling job on server.\r\n * @param  {Object}  job new object\r\n * @return {Promise} resolves to server's response\r\n */\r\nexport async function updateSkillJob(job) {\r\n    // format data\r\n    const format = (skillStr) => skillStr.split(',').map((sk) => sk.trim());\r\n\r\n    ['addSkills', 'removeSkills'].map((prop) => {\r\n        let skills = job.data[prop];\r\n        if (typeof(skills) == 'string') {\r\n            job.data[prop] = format(skills);\r\n        }\r\n    });\r\n\r\n    let response = await request({job: job, data: job.data}, 'skill', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete the given skilling job object.\r\n * @param  {Object} job\r\n * @return {Promise} resolves to response from server\r\n */\r\nexport async function deleteSkillJob(job) {\r\n    let response = await request({job: job}, 'skill', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Server utilities\r\nexport async function rebootServer() {\r\n    const response = await request({}, 'reboot-server', 'POST');\r\n    return response.text();\r\n}\r\nexport async function reloadData(params) {\r\n    const response = await request(params, 'reload-data', 'POST');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * Upload CSV file to custom data source.\r\n * @param  {Object} params including fields datasourceName and csv\r\n * @return {Promise}       resolves to string (server response message)\r\n */\r\nexport async function uploadData(params) {\r\n    try {\r\n        const response = await request(params, 'upload-data', 'POST');\r\n        return await response.text();\r\n    } catch (err) {\r\n        return err.message;\r\n    }\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Request helpers\r\n///////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n *  Helper function that pulls credentials from DOM, then makes request to server.\r\n * @param  {Object} parameters POSTed to server\r\n * @param  {String} endpoint   at server's API\r\n * @return {Object}            JSON data\r\n */\r\nasync function getData(parameters, endpoint) {\r\n    const response = await request(parameters, endpoint);\r\n    return await response.json();\r\n}\r\n\r\n\r\n/**\r\n * Make a request to server with given parameters.\r\n * @param  {Object} parameters passed as body of request\r\n * @param  {String} [url='statistics'] endpoint on server\r\n * @param  {String} [method='POST'] HTTP action\r\n * @return {Promise} response from server\r\n */\r\nasync function request(parameters, url='statistics', method='POST') {\r\n    const apiURL = API_URL + url; // defined in api_url.js\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    }\r\n    if (method != 'GET') {\r\n        requestOptions.body = JSON.stringify(parameters);\r\n    }\r\n\r\n    return fetch(apiURL, requestOptions)\r\n        .then(async (response) => {\r\n            if (response.status == 504) notifyServer504(parameters, url); // debugging\r\n            if (!response.ok) {\r\n                let bodyText = await response.text();\r\n                throw new Error(`Server responded with ${response.status} ${response.statusText}: ${bodyText}`);\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nasync function notifyServer504() {\r\n    return fetch(API_URL + 'notify-504');\r\n}\r\n\r\n\r\n// Gets the actual returned value/data out of JSON from the server.\r\nfunction jsonToReturnValue(json, type) {\r\n    return json['env:Envelope']['env:Body'][0]['ns2:'+type+'Response'][0]['return'][0];\r\n}\r\n\r\n// takes JSON from server and returns text within 'faultstring' tag (if existant)\r\nfunction getFaultStringFromData(data) {\r\n    try {\r\n        return data['env:Envelope']['env:Body'][0]['env:Fault'][0]['faultstring'];\r\n    } catch (err) {\r\n        return '';\r\n    }\r\n}\r\n\r\n// Given a requestType, returns JSON to submit to server in POST request.\r\n// requestType should match Five9 API command.\r\nexport function getParameters(requestType) {\r\n    let params = {};\r\n    // Initiate session\r\n    if (requestType == 'setSessionParameters') {\r\n        params = {\r\n            'service': 'setSessionParameters',\r\n            'settings': [ {\r\n                'viewSettings': [\r\n                    { 'idleTimeOut': 1800 },\r\n                    { 'statisticsRange': 'CurrentDay' },\r\n                    { 'rollingPeriod': 'Minutes10' }\r\n                ]\r\n            } ]\r\n        }\r\n    }\r\n    // Get real-time call stats\r\n    if (requestType == 'getStatistics') {\r\n        params = {\r\n            'service': 'getStatistics',\r\n            'settings': [ {\r\n                'statisticType': 'ACDStatus'\r\n            } ]\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/api.js","\r\n// Send out an error alert in console and on the page.\r\nexport function error(err, message='') {\r\n    // timestamp\r\n    let newDate = new Date();\r\n    newDate.setTime(Date.now());\r\n    let dateString = newDate.toTimeString();\r\n    console.log(dateString);\r\n\r\n    // Post to page\r\n    $('#message').text(`Whoops! An error occurred. ${err.message} ${message}`);\r\n    console.log('Error log:');\r\n    console.error(err);\r\n}\r\n\r\n// Nicely formatted time\r\nexport function formatAMPM(date) {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    seconds = seconds < 10 ? '0'+seconds : seconds;\r\n    let strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\r\n    return strTime;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/utility.js","export const API_URL = 'http://localhost:3000/api/';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/local_settings.js"],"sourceRoot":""}
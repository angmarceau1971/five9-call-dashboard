{"version":3,"sources":["webpack:///webpack/bootstrap 4acc83b9df9c6caa76d9","webpack:///./src/public/javascript/queue-dashboard.js","webpack:///./src/public/javascript/gizmo.js","webpack:///./src/public/javascript/api.js","webpack:///./src/public/javascript/utility.js","webpack:///./src/public/javascript/local_settings.js"],"names":["timeout","gizmo","startItUp","load","$","click","event","preventDefault","clearTimeout","html","text","moment","runQueueDashboard","err","error","id","closest","attr","thisgizmo","gizmos","showQueueList","table","next","createQueueList","trigger","document","getElementById","href","slice","window","addEventListener","lastSlUpdate","slData","eventLoop","interval","data","currentTime","Date","time","start","format","end","refreshView","setTimeout","serviceLevelData","each","i","gizmoElement","thisGizmo","name","skills","skillFilter","queueList","callsInQueue","maxWait","agentsLoggedIn","agentsNotReady","agentsOnCall","agentsReady","serviceLevel","callsOffered","abandons","length","queue","includes","Math","max","split","metrics","reduce","totals","current","skill","calls","push","skillName","formatWaitTime","waitString","SLpercent","round","abandonRate","find","formatAMPM","empty","sort","a","b","thead","createElement","th1","appendChild","createTextNode","className","th2","th3","append","forEach","tr","td1","td2","td3","seconds","wait","setSeconds","toISOString","substr","jsonToViewData","json","includeFields","columns","rows","row","newRow","j","field","indexOf","GizmoManager","openGizmoId","build","template","cloneNode","classList","remove","add","nextGizmoId","setupInteractions","gizmoID","save","updateCurrent","skillStringToArray","css","val","bind","toggleClass","lastId","Object","keys","map","closeModal","deleteGizmo","target","is","updateSkillFilter","addGizmo","newID","JSON","stringify","localStorage","setItem","getItem","skillGroups","res","skillGroup","console","log","parse","skillString","trim","getStatistics","filter","response","request","queueStats","getData","getReportResults","params","type","getLookerData","lookId","getLogs","query","getUserInformation","username","path","updateUserTheme","newTheme","getAdminUsers","users","updateAdminUser","user","getSupervisorUsers","updateSupervisorUser","getUsers","getActiveUsers","sendMessage","message","getMessages","getSentMessages","getUnreadMessages","hasRead","markMessageRead","_id","getFieldList","updateField","deleteField","getGoalList","getGoalsForAgentGroups","agentGroups","updateGoal","goal","deleteGoal","getLayout","getLayoutList","updateLayout","layout","deleteLayout","getDatasources","updateDatasource","datasource","deleteDatasource","getSkillGroups","getLinkList","updateLink","link","deleteLink","getSkillJobs","updateSkillJob","job","skillStr","sk","prop","deleteSkillJob","rebootServer","reloadData","uploadData","parameters","endpoint","url","method","apiURL","API_URL","requestOptions","headers","credentials","body","fetch","then","status","notifyServer504","ok","bodyText","Error","statusText","jsonToReturnValue","getFaultStringFromData","getParameters","requestType","newDate","setTime","now","dateString","toTimeString","date","hours","getHours","minutes","getMinutes","getSeconds","ampm","strTime"],"mappings":"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","file":"queues.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 120);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4acc83b9df9c6caa76d9","import { error, formatAMPM } from './utility';\r\nimport * as api from './api';\r\nimport GizmoManager from './gizmo';\r\n\r\n// timeout to pause event loop when needed\r\nlet timeout = null;\r\n\r\n// Object to manage the gizmos (queue widgets)\r\nlet gizmo = null;\r\n\r\nasync function startItUp() {\r\n    gizmo = new GizmoManager();\r\n    await gizmo.load();\r\n\r\n    // listen for sign-in button press\r\n    $('.play-pause').click(async (event) => {\r\n        // prevent redirection\r\n        event.preventDefault();\r\n\r\n        // Currently running?\r\n        // stop any current event loops running\r\n        if (timeout != null) {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            $('.play-pause').html('&#9658;'); // show play button\r\n            // Remind user that they're paused\r\n            $('.message').text(`Dashboard paused since ${moment()}.`);\r\n        }\r\n        // Not running? Start it up\r\n        else {\r\n            $('.play-pause').html('&#10074;&#10074;'); // show pause button\r\n            // begin updating data & page every few seconds\r\n            try {\r\n                runQueueDashboard();\r\n            } catch (err) {\r\n                error(err, 'Error occurred while queue dashboard was running.');\r\n            }\r\n        }\r\n    });\r\n\r\n    // Update displayed queue list when user clicks button\r\n    $('.show-skills-list').click(function (event) {\r\n        const id = $(this).closest('.gizmo').attr('id');\r\n        const thisgizmo = gizmo.gizmos[id];\r\n        thisgizmo.showQueueList = !thisgizmo.showQueueList;\r\n        const table = $(this).next('table.queue-list');\r\n        createQueueList(thisgizmo, table);\r\n    });\r\n\r\n    // Trigger \"play\" button to start updating when page is loaded.\r\n    $('.play-pause').trigger('click');\r\n    $('.big-display').click(function(event) {\r\n        if (document.getElementById('big-display').href.slice(-4) != '.css') {\r\n            document.getElementById('big-display').href = `styles/big-display.css`;\r\n        } else {\r\n            document.getElementById('big-display').href = '';\r\n        }\r\n    });\r\n};\r\nwindow.addEventListener('load', startItUp);\r\n\r\n\r\nasync function runQueueDashboard() {\r\n    let lastSlUpdate = null;\r\n    let slData = [];\r\n\r\n    async function eventLoop(interval) {\r\n        // Get the current queue data\r\n        try {\r\n            // Retrieve current queue stats\r\n            let data = await api.queueStats();\r\n\r\n            // Get SL stats\r\n            // Only update SL every 3 minutes\r\n            let currentTime = new Date();\r\n            if ((currentTime - lastSlUpdate) > 180000) {\r\n                try {\r\n                    let time = {\r\n                        start: moment().format('YYYY-MM-DD') + 'T00:00:00',\r\n                        end:   moment().format('YYYY-MM-DD') + 'T23:59:59'\r\n                    };\r\n                    slData = await api.getReportResults(time, 'service-level');\r\n                    lastSlUpdate = currentTime;\r\n                } catch (err) {\r\n                    error(err, `An error occurred when getting service level data: ${err}`);\r\n                    slData = [];\r\n                }\r\n            }\r\n            // Update the view / DOM\r\n            refreshView(data, slData);\r\n\r\n        } catch (err) {\r\n            error(err);\r\n        }\r\n\r\n        // restart loop\r\n        timeout = setTimeout(() => {\r\n            eventLoop(interval);\r\n        }, interval);\r\n    }\r\n\r\n    // Refresh every 20 seconds.\r\n    eventLoop(20000);\r\n}\r\n\r\n\r\n\r\n// Takes nicely formatted data. Updates dashboard view.\r\n// ${data} : ACD stats (current queue info)\r\n// ${serviceLevel} : service level report\r\nfunction refreshView(data, serviceLevelData) {\r\n    // update each gizmo on the screen\r\n    $('.gizmo').each((i, gizmoElement) => {\r\n        const thisGizmo = gizmo.gizmos[gizmoElement.id];\r\n        let name = thisGizmo.name;\r\n        let skills = thisGizmo.skillFilter;\r\n        // Clear old queue list from gizmo\r\n        thisGizmo.queueList = [];\r\n\r\n        // Determine calls and agent stats for this gizmo's skills\r\n        let callsInQueue = 0,\r\n            maxWait = 0,\r\n            agentsLoggedIn = 0,\r\n            agentsNotReady = 0,\r\n            agentsOnCall = 0,\r\n            agentsReady = 0,\r\n            serviceLevel = 0,\r\n            callsOffered = 0,\r\n            abandons = 0;\r\n\r\n        for (let i=0; i < data.length; i++) {\r\n            let queue = data[i];\r\n            // Include skills in gizmo filter, or all skills if none are in filter\r\n            if (skills.includes(queue['SkillName']) || skills.length == 0) {\r\n                // Real-time queue metrics\r\n                callsInQueue += queue['CallsInQueue'];\r\n                maxWait = Math.max(maxWait, queue['CurrentLongestQueueTime']);\r\n                agentsLoggedIn = Math.max(agentsLoggedIn, queue['AgentsLoggedIn'].split(' ')[0]*1);\r\n                agentsNotReady = Math.max(agentsNotReady, queue['AgentsNotReadyForCalls']);\r\n                agentsOnCall = Math.max(agentsOnCall, queue['AgentsOnCall']);\r\n                agentsReady = Math.max(agentsReady, queue['AgentsReadyForCalls']);\r\n\r\n                // Calculate SL and abandon rate\r\n                let metrics = serviceLevelData.reduce((totals, current) => {\r\n                    if (current.skill == queue['SkillName']) {\r\n                        totals.serviceLevel += current.serviceLevel;\r\n                        totals.calls += current.calls;\r\n                        totals.abandons += current.abandons;\r\n                    }\r\n                    return totals;\r\n                }, { serviceLevel: 0, calls: 0, abandons: 0 });\r\n                serviceLevel += metrics.serviceLevel;\r\n                callsOffered += metrics.calls;\r\n                abandons += metrics.abandons;\r\n\r\n                // Add to list of skills in queue\r\n                if (queue['CallsInQueue'] > 0) {\r\n                    thisGizmo.queueList.push({\r\n                        skillName: queue['SkillName'],\r\n                        callsInQueue: queue['CallsInQueue'],\r\n                        maxWait: formatWaitTime(queue['CurrentLongestQueueTime'])\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Format wait time from seconds to MM:SS or HH:MM:SS\r\n        let waitString = formatWaitTime(maxWait);\r\n\r\n        // Update metrics\r\n        let SLpercent = callsOffered == 0\r\n            ? 'N/A'\r\n            : Math.round(100 * serviceLevel / callsOffered) + '%';\r\n        let abandonRate = callsOffered == 0\r\n            ? 'N/A'\r\n            : Math.round(100 * abandons / callsOffered) + '%';\r\n        $(gizmoElement).find('.metric.service-level').text(SLpercent);\r\n        $(gizmoElement).find('.metric.abandon-rate').text(abandonRate);\r\n        $(gizmoElement).find('.calls-in-sl').text(serviceLevel);\r\n        $(gizmoElement).find('.calls-out-of-sl').text(callsOffered - serviceLevel);\r\n\r\n        $(gizmoElement).find('.metric.calls-in-queue').text(callsInQueue);\r\n        $(gizmoElement).find('.metric.max-wait').text(waitString);\r\n        $(gizmoElement).find('.agents-logged-in').text(agentsLoggedIn);\r\n        $(gizmoElement).find('.agents-not-ready-for-calls').text(agentsNotReady);\r\n        $(gizmoElement).find('.agents-on-call').text(agentsOnCall);\r\n        $(gizmoElement).find('.agents-ready-for-calls').text(agentsReady);\r\n\r\n        // Update queue list, if showing\r\n        if (thisGizmo.showQueueList) {\r\n            const table = $(gizmoElement).find('.queue-list');\r\n            createQueueList(thisGizmo, table);\r\n        }\r\n    }); // gizmo.forEach\r\n\r\n    // Clear old messages\r\n    $('#message').text(' ');\r\n\r\n    // Update clock\r\n    $('.clock').text(formatAMPM(new Date()));\r\n}\r\n\r\n\r\n// Update queue list in DOM\r\n// ${gizmo} object to build list on. ${table} element storing list.\r\nfunction createQueueList(thisGizmo, table) {\r\n    table.empty(); // clear old list\r\n\r\n    // anything to list?\r\n    if (thisGizmo.queueList.length == 0) return;\r\n\r\n    // Sort by max wait time\r\n    thisGizmo.queueList.sort((a, b) => a.maxWait > b.maxWait ? -1 : 1);\r\n\r\n    // Add headers\r\n    const thead = document.createElement('thead');\r\n    const th1 = document.createElement('th');\r\n    th1.appendChild(document.createTextNode('Skill Name'));\r\n    th1.className += ' type-text';\r\n    const th2 = document.createElement('th');\r\n    th2.appendChild(document.createTextNode('Calls'));\r\n    th2.className += ' type-number';\r\n    const th3 = document.createElement('th');\r\n    th3.appendChild(document.createTextNode('Max Wait'));\r\n    th3.className += ' type-number';\r\n    thead.appendChild(th1); thead.appendChild(th2); thead.appendChild(th3);\r\n    table.append(thead);\r\n\r\n    // Update DOM from queueList\r\n    thisGizmo.queueList.forEach((queue) => {\r\n        const tr = document.createElement('tr');\r\n        const td1 = document.createElement('td');\r\n        td1.appendChild(document.createTextNode(queue.skillName));\r\n        td1.className += ' type-text';\r\n        const td2 = document.createElement('td');\r\n        td2.appendChild(document.createTextNode(queue.callsInQueue));\r\n        td2.className += ' type-number';\r\n        const td3 = document.createElement('td');\r\n        td3.appendChild(document.createTextNode(queue.maxWait));\r\n        td3.className += ' type-number';\r\n        tr.appendChild(td1); tr.appendChild(td2); tr.appendChild(td3);\r\n        table.append(tr);\r\n    });\r\n}\r\n\r\n// Turns seconds into nicely formatted MM:SS or HH:MM:SS\r\nfunction formatWaitTime(seconds) {\r\n    const wait = new Date(null);\r\n    wait.setSeconds(seconds);\r\n    if (seconds < 3600) { // MM:SS\r\n        return wait.toISOString().substr(14, 5);\r\n    }\r\n    return wait.toISOString().substr(11, 8); // HH:MM:SS\r\n}\r\n\r\n// Return formatted column / key assignments\r\n// Takes JSON generated from original Five9 SOAP API response\r\nfunction jsonToViewData(json,\r\n        includeFields=['Skill Name', 'Calls In Queue',\r\n                        'Current Longest Queue Time', 'Agents Logged In',\r\n                        'Agents Not Ready For Calls', 'Agents On Call',\r\n                        'Agents Ready For Calls']) {\r\n    let columns = json['columns'][0]['values'][0]['data'];\r\n    let rows = json['rows'];\r\n    let data = [];\r\n\r\n    for (let i=0; i < rows.length; i++) {\r\n        let row = rows[i]['values'][0]['data'];\r\n        let newRow = {};\r\n        for (let j=0; j < includeFields.length; j++) {\r\n            let field = includeFields[j];\r\n            newRow[field] = row[columns.indexOf(field)];\r\n            // trim extra 0's to fix time formatting (to seconds)\r\n            if (field == 'Current Longest Queue Time')\r\n                newRow[field] = newRow[field].slice(0, -3);\r\n        }\r\n        data.push(newRow);\r\n    }\r\n    return data;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/queue-dashboard.js","import * as api from './api';\r\n\r\n// Handling of queue gizmo widgets.\r\n// Manages state and DOM (modals to edit skills & name).\r\nexport default function GizmoManager() {\r\n    // Object storing info on filters & names for each gizmo-widget\r\n    this.gizmos = null;\r\n    // which gizmo has a menu open?\r\n    this.openGizmoId = null;\r\n\r\n    this.build = function(id=null) {\r\n        let template = document.getElementById('gizmo-template');\r\n        let gizmo = template.cloneNode(true);\r\n\r\n        // update classes to those of a live, wild gizmo\r\n        gizmo.classList.remove('template');\r\n        gizmo.classList.add('gizmo');\r\n\r\n        // Create an ID and append to DOM\r\n        if (id == null) {\r\n            id = this.nextGizmoId();\r\n        }\r\n        gizmo.id = id;\r\n        $('.gizmo-wrapper').append(gizmo);\r\n\r\n        // Add to gizmos object, but don't overwrite existing ones\r\n        if (!this.gizmos[id]) {\r\n            this.gizmos[id] = {\r\n                name: 'New one!',\r\n                skillFilter: []\r\n            }\r\n        }\r\n        // set name for DOM\r\n        $(gizmo).find('.department-name').html(this.gizmos[id].name);\r\n\r\n        this.setupInteractions(id);\r\n        return id;\r\n    }\r\n\r\n    this.remove = function(gizmoID) {\r\n        document.getElementById(gizmoID).remove();\r\n        delete this.gizmos[gizmoID];\r\n        this.save();\r\n    }\r\n\r\n    // Which gizmo is currently edited in the skill menu? This function will\r\n    // update that gizmo's attributes.\r\n    this.updateCurrent = function(name, skills) {\r\n        this.gizmos[this.openGizmoId].name        = name;\r\n        this.gizmos[this.openGizmoId].skillFilter = skillStringToArray(skills);\r\n    }\r\n\r\n    // Set up menu interactions for a gizmo with the given ID\r\n    this.setupInteractions = function(id) {\r\n        let gizmo = $('#' + id);\r\n\r\n        // Skills menu\r\n        gizmo.find('.skills-edit-toggle').click(function (event) {\r\n            // Show the modal...\r\n            $('.modal').css('display', 'block');\r\n            // Track currently open menu...\r\n            this.openGizmoId = id;\r\n            // And set modal values to match this gizmo\r\n            $('.modal').find('.gizmo-name').val(this.gizmos[id].name);\r\n            $('.modal').find('.skills').val(this.gizmos[id].skillFilter);\r\n        }.bind(this));\r\n\r\n        // Show/hide queue list\r\n        this.gizmos[id].showQueueList = false;\r\n        gizmo.find('.show-skills-list').click(function (event) {\r\n            gizmo.find('.show-skills-list').toggleClass('selected');\r\n            gizmo.find('.queue-list').toggleClass('hidden');\r\n        }.bind(this));\r\n    }\r\n\r\n    // Get a new ID string in the form 'gizmo-<integer>'\r\n    this.nextGizmoId = function() {\r\n        if (!this.gizmos) return 'gizmo-0';\r\n        let lastId = Math.max(\r\n            ...Object.keys(this.gizmos).map((id) =>\r\n                id.split('-')[1]\r\n            )\r\n        );\r\n        return `gizmo-${lastId + 1}`;\r\n    };\r\n\r\n    // set up modal window for editing skills.\r\n    $('.modal').find('.close, .cancel, .save').click(function closeModal() {\r\n        $('.modal').css('display', 'none')\r\n    });\r\n    $('.modal').find('.remove').click(function deleteGizmo() {\r\n        $('.modal').css('display', 'none');\r\n        this.remove(this.openGizmoId);\r\n    }.bind(this));\r\n    $(window).click(function closeModal(event) {\r\n        if ($(event.target).is('.modal'))\r\n            $('.modal').css('display', 'none');\r\n    }.bind(this));\r\n    // Listen for skill filter updates\r\n    $('.modal .save').click(function updateSkillFilter() {\r\n        const name   = $('.modal .gizmo-name').val();\r\n        const skills = $('.modal .skills').val();\r\n        $('#' + this.openGizmoId).find('.department-name').html(name);\r\n        this.updateCurrent(name, skills);\r\n        this.save();\r\n    }.bind(this));\r\n    // Listen for add-gizmo button\r\n    $('.add-gizmo').click(function addGizmo() {\r\n        let newID = this.build();\r\n        // save current state to local storage\r\n        this.save();\r\n    }.bind(this));\r\n\r\n\r\n    // Save gizmos to local storage\r\n    this.save = function() {\r\n        const data = JSON.stringify(this.gizmos);\r\n        localStorage.setItem('user_gizmos', data);\r\n    }\r\n\r\n    // Load gizmos from local storage on startup\r\n    this.load = async function() {\r\n        let data = localStorage.getItem('user_gizmos');\r\n        if (!data) {\r\n            let skillGroups = await api.getSkillGroups();\r\n            let i = 0;\r\n            this.gizmos = skillGroups.reduce((res, skillGroup) => {\r\n                res[`gizmo-${i++}`] = {\r\n                    name: skillGroup.name,\r\n                    queueList: [],\r\n                    showQueueList: false,\r\n                    skillFilter: skillGroup.skills\r\n                };\r\n                return res;\r\n            }, {});\r\n            console.log('Loading default gizmos:', this.gizmos);\r\n        } else {\r\n            this.gizmos = JSON.parse(data);\r\n            console.log('Loading saved gizmos:', this.gizmos);\r\n        }\r\n        // Build view\r\n        for (const id of Object.keys(this.gizmos)) {\r\n            this.build(id);\r\n        };\r\n    }\r\n}\r\n\r\n// Breaks down \"skill1, skill2 , skill3\" string\r\n//          to ['skill1','skill2','skill3'] array\r\nfunction skillStringToArray(skillString) {\r\n    if (skillString == '') return [];\r\n    return skillString.split(',').map((skill) => skill.trim());\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/gizmo.js","import { error } from './utility.js';\r\nimport { API_URL } from './local_settings.js';\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Functions to retrieve and extract data from Five9.\r\n// These functions interact with our server, which houses data\r\n// and formats data originating in Five9 reports.\r\n////////////////////////////////////////////////////////////////\r\n\r\n// Get agent/ACD statistics\r\nexport async function getStatistics(filter) {\r\n    const response = await request(filter, 'statistics');\r\n    return response.json();\r\n}\r\n\r\n// Get real-time stats\r\nexport async function queueStats() {\r\n    return getData({}, 'queue-stats');\r\n}\r\n\r\n/**\r\n * Get CSV string of report results from Five9\r\n * @param  {Object} params\r\n * @param  {String} type   endpoint: `maps` or `service-level`\r\n * @return {Promise -> Object}        JSON data\r\n */\r\nexport function getReportResults(params, type) {\r\n    return getData(params, `reports/${type}`);\r\n}\r\n\r\n/**\r\n * Pull Looker data from given Look\r\n * @param  {String} lookId\r\n * @return {Object} JSON data\r\n */\r\nexport async function getLookerData(lookId) {\r\n    let response = await request({lookId: lookId}, 'looker');\r\n    return await response.json();\r\n}\r\n\r\nexport async function getLogs(query) {\r\n    let response = await request({query: query}, 'logs');\r\n    return await response.json();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Users\r\n/**\r\n * Return user information from username.\r\n * @param  {String} username if blank, will return currently logged-in user's\r\n *                           data\r\n * @return {Promise -> Object} User's object\r\n */\r\nexport async function getUserInformation(username = '') {\r\n    let path = username ? `users/data/${username}` : `users/data`;\r\n    const response = await request({}, path, 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Set a user's theme preferences.\r\n * @param  {String} username\r\n * @param  {Object} newTheme with theme fields\r\n * @return {Promise -> String} response message\r\n */\r\nexport async function updateUserTheme(username, newTheme) {\r\n    const response = await request(\r\n        { username: username, newTheme: newTheme },\r\n        `users/theme`, 'PATCH'\r\n    );\r\n    return response.text();\r\n}\r\n\r\n// Admin users\r\nexport async function getAdminUsers() {\r\n    let response = await request({}, 'users/admin', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\nexport async function updateAdminUser(user) {\r\n    let response = await request({user: user}, 'users/admin', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\n// Supervisor users\r\nexport async function getSupervisorUsers() {\r\n    let response = await request({}, 'users/supervisor', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\nexport async function updateSupervisorUser(user) {\r\n    let response = await request({user: user}, 'users/supervisor', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\n// Get list of all users\r\nexport async function getUsers() {\r\n    let response = await request({}, 'users', 'GET');\r\n    return response.json();\r\n}\r\n\r\n/**\r\n * Get list of users who have been active within last @param interval seconds\r\n * @param  {Number} interval in seconds\r\n * @return {[Object]} promise resolving to array of user objects\r\n */\r\nexport async function getActiveUsers(interval) {\r\n    let response = await request({}, `users/active/${interval}`, 'GET');\r\n    return response.json();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Messages\r\n/**\r\n * Send a message\r\n * @param  {Object} message with fields to, subject, and body\r\n * @return {String} response from server\r\n */\r\nexport async function sendMessage(message) {\r\n    let response = await request(\r\n        { message: message },\r\n        'message/send', 'POST'\r\n    );\r\n    return response.text();\r\n}\r\n/**\r\n * Return current user's messages\r\n * @return {[Object]} array of message objects\r\n */\r\nexport async function getMessages() {\r\n    let response = await request({}, 'message', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n* Return messages sent by current user\r\n* @return {[Object]} array of message objects\r\n */\r\nexport async function getSentMessages() {\r\n    let response = await request({}, 'message/sent', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Return current user's unread messages\r\n * @return {[Object]} array of message objects\r\n */\r\nexport async function getUnreadMessages() {\r\n    let response = await request({hasRead: false}, 'message', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Flag a message as \"read\"\r\n * @return {String} success message\r\n */\r\nexport async function markMessageRead(message, hasRead=true) {\r\n    let response = await request(\r\n        {id: message._id, hasRead: true},\r\n        'message/mark-read', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Fields\r\n/**\r\n * List of available fields for widgets.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getFieldList() {\r\n    let response = await request({}, 'fields', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a field on server.\r\n * @param  {Object}  field new object\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function updateField(field) {\r\n    let response = await request({field: field}, 'fields', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a field from server.\r\n * @param  {Object}  field object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteField(field) {\r\n    let response = await request({field: field}, 'fields', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Goals\r\n/**\r\n * List of all goals.\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalList() {\r\n    let response = await request({}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * List of goals that apply to the given agent group(s).\r\n * @param  {Array of Strings}   agentGroups\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalsForAgentGroups(agentGroups) {\r\n    let response = await request({agentGroups: agentGroups}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a goal on server.\r\n * @param  {Object}  goal new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a goal from server.\r\n * @param  {Object}  goal object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Layouts\r\n/**\r\n * Get scorecard JSON layout for given agent group(s) and type.\r\n * @param  {Array of Strings} agentGroups user's agent groups\r\n * @param  {String} type either team or individual layout\r\n * @return {Object}\r\n */\r\nexport async function getLayout(agentGroups, type) {\r\n    let response = await request({agentGroups: agentGroups, type: type}, 'layout');\r\n    return await response.json();\r\n}\r\n/**\r\n * List of all layouts.\r\n * @return {Promise} resolves to array of layout objects\r\n */\r\nexport async function getLayoutList() {\r\n    let response = await request({}, 'layouts', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a layout on server.\r\n * @param  {Object}  layout new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateLayout(layout) {\r\n    let response = await request({layout: layout}, 'layouts', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a layout from server.\r\n * @param  {Object}  layout object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteLayout(layout) {\r\n    let response = await request({layout: layout}, 'layouts', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Datasources' settings\r\n/**\r\n * List of all datasources.\r\n * @return {Promise} resolves to array of datasource objects\r\n */\r\nexport async function getDatasources() {\r\n    let response = await request({}, 'datasources', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a datasource on server.\r\n * @param  {Object}  datasource new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a datasource from server.\r\n * @param  {Object}  datasource object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * Get skill groups with associated names, agentGroups and skills\r\n * @return {Promise -> [Object]} array of objects from SkillGroup table\r\n */\r\nexport async function getSkillGroups() {\r\n    let response = await request({}, 'skill-group', 'GET');\r\n    return response.json();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// 'Helpful Links'\r\n/**\r\n * List of all links.\r\n * @return {Promise} resolves to array of link objects\r\n */\r\nexport async function getLinkList() {\r\n    let response = await request({}, 'links', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a link on server.\r\n * @param  {Object}  link new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateLink(link) {\r\n    let response = await request({link: link}, 'links', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a link from server.\r\n * @param  {Object}  link object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteLink(link) {\r\n    let response = await request({link: link}, 'links', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Skilling jobs\r\n/**\r\n * List of available scheduled skilling jobs.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getSkillJobs() {\r\n    let response = await request({}, 'skill', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a scheduled skilling job on server.\r\n * @param  {Object}  job new object\r\n * @return {Promise} resolves to server's response\r\n */\r\nexport async function updateSkillJob(job) {\r\n    // format data\r\n    const format = (skillStr) => skillStr.split(',').map((sk) => sk.trim());\r\n\r\n    ['addSkills', 'removeSkills'].map((prop) => {\r\n        let skills = job.data[prop];\r\n        if (typeof(skills) == 'string') {\r\n            job.data[prop] = format(skills);\r\n        }\r\n    });\r\n\r\n    let response = await request({job: job, data: job.data}, 'skill', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete the given skilling job object.\r\n * @param  {Object} job\r\n * @return {Promise} resolves to response from server\r\n */\r\nexport async function deleteSkillJob(job) {\r\n    let response = await request({job: job}, 'skill', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Server utilities\r\nexport async function rebootServer() {\r\n    const response = await request({}, 'reboot-server', 'POST');\r\n    return response.text();\r\n}\r\nexport async function reloadData(params) {\r\n    const response = await request(params, 'reload-data', 'POST');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * Upload CSV file to custom data source.\r\n * @param  {Object} params including fields datasourceName and csv\r\n * @return {Promise}       resolves to string (server response message)\r\n */\r\nexport async function uploadData(params) {\r\n    try {\r\n        const response = await request(params, 'upload-data', 'POST');\r\n        return await response.text();\r\n    } catch (err) {\r\n        return err.message;\r\n    }\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// Request helpers\r\n///////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n *  Helper function that pulls credentials from DOM, then makes request to server.\r\n * @param  {Object} parameters POSTed to server\r\n * @param  {String} endpoint   at server's API\r\n * @return {Object}            JSON data\r\n */\r\nasync function getData(parameters, endpoint) {\r\n    const response = await request(parameters, endpoint);\r\n    return await response.json();\r\n}\r\n\r\n\r\n/**\r\n * Make a request to server with given parameters.\r\n * @param  {Object} parameters passed as body of request\r\n * @param  {String} [url='statistics'] endpoint on server\r\n * @param  {String} [method='POST'] HTTP action\r\n * @return {Promise} response from server\r\n */\r\nasync function request(parameters, url='statistics', method='POST') {\r\n    const apiURL = API_URL + url; // defined in api_url.js\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    }\r\n    if (method != 'GET') {\r\n        requestOptions.body = JSON.stringify(parameters);\r\n    }\r\n\r\n    return fetch(apiURL, requestOptions)\r\n        .then(async (response) => {\r\n            if (response.status == 504) notifyServer504(parameters, url); // debugging\r\n            if (!response.ok) {\r\n                let bodyText = await response.text();\r\n                throw new Error(`Server responded with ${response.status} ${response.statusText}: ${bodyText}`);\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nasync function notifyServer504() {\r\n    return fetch(API_URL + 'notify-504');\r\n}\r\n\r\n\r\n// Gets the actual returned value/data out of JSON from the server.\r\nfunction jsonToReturnValue(json, type) {\r\n    return json['env:Envelope']['env:Body'][0]['ns2:'+type+'Response'][0]['return'][0];\r\n}\r\n\r\n// takes JSON from server and returns text within 'faultstring' tag (if existant)\r\nfunction getFaultStringFromData(data) {\r\n    try {\r\n        return data['env:Envelope']['env:Body'][0]['env:Fault'][0]['faultstring'];\r\n    } catch (err) {\r\n        return '';\r\n    }\r\n}\r\n\r\n// Given a requestType, returns JSON to submit to server in POST request.\r\n// requestType should match Five9 API command.\r\nexport function getParameters(requestType) {\r\n    let params = {};\r\n    // Initiate session\r\n    if (requestType == 'setSessionParameters') {\r\n        params = {\r\n            'service': 'setSessionParameters',\r\n            'settings': [ {\r\n                'viewSettings': [\r\n                    { 'idleTimeOut': 1800 },\r\n                    { 'statisticsRange': 'CurrentDay' },\r\n                    { 'rollingPeriod': 'Minutes10' }\r\n                ]\r\n            } ]\r\n        }\r\n    }\r\n    // Get real-time call stats\r\n    if (requestType == 'getStatistics') {\r\n        params = {\r\n            'service': 'getStatistics',\r\n            'settings': [ {\r\n                'statisticType': 'ACDStatus'\r\n            } ]\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/api.js","\r\n// Send out an error alert in console and on the page.\r\nexport function error(err, message='') {\r\n    // timestamp\r\n    let newDate = new Date();\r\n    newDate.setTime(Date.now());\r\n    let dateString = newDate.toTimeString();\r\n    console.log(dateString);\r\n\r\n    // Post to page\r\n    $('#message').text(`Whoops! An error occurred. ${err.message} ${message}`);\r\n    console.log('Error log:');\r\n    console.error(err);\r\n}\r\n\r\n// Nicely formatted time\r\nexport function formatAMPM(date) {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    seconds = seconds < 10 ? '0'+seconds : seconds;\r\n    let strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\r\n    return strTime;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/utility.js","export const API_URL = 'http://localhost:3000/api/';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/local_settings.js"],"sourceRoot":""}
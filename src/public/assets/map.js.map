{"version":3,"sources":["webpack:///webpack/bootstrap 142e9ce688b25f283e1f","webpack:///./src/public/javascript/utility.js","webpack:///./src/public/javascript/maps.js","webpack:///./src/public/javascript/api.js","webpack:///./src/public/javascript/local_settings.js","webpack:///./src/public/javascript/maps-dashboard.js"],"names":["error","err","message","newDate","Date","setTime","now","dateString","toTimeString","console","log","$","text","formatAMPM","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","strTime","CallMap","create","data","field","colors","width","height","calls","d3","map","d","key","minValue","min","value","maxValue","max","x","scaleLinear","domain","extent","rangeRound","color","scaleThreshold","range","path","geoPath","svg","select","attr","keyTitle","drawKey","queue","defer","json","API_URL","await","usa","zipData","onReady","drawZips","drawStates","update","g","remove","exit","selectAll","backgroundColor","sorted","features","sort","a","b","isEmptyZip","properties","ZIP","insert","enter","append","zip","get","o","customers","callsPerCustomer","has","format","invertExtent","Math","abs","call","axisBottom","tickSize","tickFormat","formatLegend","tickValues","getStatistics","filter","response","request","queueStats","getData","getReportResults","params","type","getUserInformation","username","updateUserTheme","newTheme","getFieldList","updateField","getGoalList","getGoalsForAgentGroups","agentGroups","updateGoal","goal","deleteGoal","getSkillGroups","getLinkList","updateLink","link","deleteLink","getSkillJobs","updateSkillJob","job","skillStr","split","sk","trim","prop","skills","deleteSkillJob","getAdminUsers","users","updateAdminUser","user","rebootServer","reloadData","uploadData","parameters","endpoint","url","method","apiURL","requestOptions","headers","credentials","body","JSON","stringify","fetch","then","status","notifyServer504","ok","bodyText","Error","statusText","jsonToReturnValue","getFaultStringFromData","getParameters","requestType","timeout","mapSettings","display","document","ready","callMap","click","event","clearTimeout","startUpdatingMap","setupFilterListeners","trigger","children","currentTarget","hasClass","addClass","removeClass","change","val","refreshRate","updateMap","moment","setTimeout","reportTimeRange","customerData","getCustomerData","callData","Object","keys","zipCode","reduce","sum","missing","getZipsWithoutCustomers","concat","filterFn","minCustomers","keyFn","substring","rollupFn","callsByZip","nest","rollup","entries","customerCount","lastUpdated","isBefore","subtract","rawData","object","item","isZipWithoutCustomers","hasOwnProperty","time","start","tz","end","relativeSelector","isNaN"],"mappings":"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","file":"map.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 98);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 142e9ce688b25f283e1f","\n// Send out an error alert in console and on the page.\nexport function error(err, message='') {\n    // timestamp\n    let newDate = new Date();\n    newDate.setTime(Date.now());\n    let dateString = newDate.toTimeString();\n    console.log(dateString);\n\n    // Post to page\n    $('#message').text(`Whoops! An error occurred. ${err.message} ${message}`);\n    console.log('Error log:');\n    console.error(err);\n}\n\n// Nicely formatted time\nexport function formatAMPM(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    seconds = seconds < 10 ? '0'+seconds : seconds;\n    let strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    return strTime;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/utility.js","import { API_URL } from './local_settings';\n\n// Map of U.S. with ZIP3 areas colored by calls offered.\n// Offers methods to create/draw the map and update when new data is received.\nexport default class CallMap {\n    /**\n     * Create and draw map on initial run\n     * @param  {Object}  data d3.nest data object with zipcode as key and fields as values\n     * @param  {String}  field to map (calls or callsPerCustomer)\n     * @return {Promise} resolves when complete\n     */\n    create(data, field) {\n        // Taken from d3.schemeBlues[9]\n        this.colors = [\"#f7fbff\", \"#deebf7\", \"#c6dbef\", \"#9ecae1\", \"#6baed6\", \"#4292c6\", \"#2171b5\", \"#08519c\", \"#08306b\"];\n\n        let width = 960,\n            height = 500;\n\n        this.calls = d3.map(data, (d) => d.key);\n        let minValue = d3.min(data, (d) => d.value[field]);\n        let maxValue = d3.max(data, (d) => d.value[field]);\n\n        this.x = d3.scaleLinear()\n            .domain(d3.extent(data, (d) => d.value[field]))\n            .rangeRound([600, 860]);\n\n        this.color = d3.scaleThreshold()\n            .domain(d3.range(0, maxValue, maxValue / 9))\n            .range(this.colors);\n\n        this.path = d3.geoPath();\n\n        this.svg = d3.select('svg')\n            .attr('width', width)\n            .attr('height', height);\n\n        // Key / legend\n        this.keyTitle = 'Calls offered';\n        this.drawKey(this.x, this.color);\n\n        return d3.queue()\n            .defer(d3.json, API_URL + 'states')\n            .defer(d3.json, API_URL + 'zip3-data')\n            .await((err, usa, zipData) => this.onReady(err, usa, zipData, field));\n    }\n\n    // Assign initial variables when map is first created and topographic\n    // data is first loaded\n    onReady(err, usa, zipData, field) {\n        this.zipData = zipData;\n        this.usa = usa;\n        this.drawZips(zipData, field);\n        this.drawStates(usa);\n    }\n\n    // Update map with new data\n    async update(data, field) {\n        // Check if this chart already exists. If not, create it.\n        if (!this.svg) return this.create(data, field);\n\n        // match calls to keys (zip codes)\n        this.calls = d3.map(data, (d) => d.key);\n\n        // update domain and range\n        let max = d3.max(data, (d) => d.value[field]);\n        this.x.domain(d3.extent(data, (d) => d.value[field]));\n        this.color.domain(d3.range(0, max, max / 9));\n\n        // Key / legend\n        // remove then redraw the color key\n        this.g.remove().exit();\n        this.drawKey(this.x, this.color);\n\n        // data - paint the state lines and zip codes\n        // clear old states and zips\n        this.svg.selectAll('.zips, .states').remove().exit();\n        // then rebuild them\n        this.drawZips(this.zipData, field);\n        this.drawStates(this.usa);\n    }\n\n    // Draw ZIP3 areas, colored by number of calls\n    // ${zipData} is GeoJSON describing the topography\n    drawZips(zipData, field) {\n        let backgroundColor = '#feffff';\n        // Sort so that areas with call data are drawn last and end up on top\n        let sorted = zipData.features.sort((a, b) => {\n            if (this.isEmptyZip(a.properties.ZIP, field)) return -1;\n            return 1;\n        });\n\n        this.svg.insert('g', '.key')\n            .attr('class', 'zips')\n          .selectAll('path')\n          .data(sorted)\n          .enter().append('path')\n            .attr('d', this.path)\n            .attr('fill', (d) => {\n                let zip = d.properties.ZIP;\n                if (this.isEmptyZip(zip, field)) return backgroundColor;\n                return this.color(this.calls.get(zip).value[field]);\n            })\n            .attr('stroke', (d) => {\n                let zip = d.properties.ZIP;\n                if (this.isEmptyZip(zip, field)) return backgroundColor;\n                return 'hsla(208, 30%, 60%, 0.5)';\n            })\n          .append('title')\n            .text((d) => {\n                let zip = d.properties.ZIP;\n                let o = { calls: 0, customers: 0, callsPerCustomer: 0 };\n                if (this.calls.has(zip)) {\n                    o = this.calls.get(zip).value;\n                }\n                return `ZIP3: ${zip}\\nCalls: ${o.calls}\\nCustomers: ${o.customers}\\nCalls divided by customer count: ${d3.format(\".2%\")(o.callsPerCustomer)}`;\n            });\n    }\n\n    /**\n     * Returns true if the zip code is not in the data or has a value equal to 0\n     * @param  {String}  zip   zip code\n     * @param  {String}  field to check in this.calls.value\n     * @return {Boolean}\n     */\n    isEmptyZip(zip, field) {\n        return (!this.calls.has(zip) || this.calls.get(zip).value[field] == 0);\n    }\n\n    // Draw the state outlines\n    drawStates(usa) {\n        this.svg.insert('g', '.key')\n            .attr('class', 'states')\n          .selectAll('path')\n          .data(usa.features)\n          .enter().append('path')\n            .attr('d', this.path);\n    }\n\n    // Draw the key/legend\n    drawKey(x, color) {\n        this.g = this.svg.append('g')\n            .attr('class', 'key')\n            .attr('transform', 'translate(0,40)');\n        this.g.selectAll('rect')\n            .data(color.range().map((d) => {\n                d = color.invertExtent(d);\n                if (d[0] == null) d[0] = x.domain()[0];\n                if (d[1] == null) d[1] = x.domain()[1];\n                return d;\n            }))\n            .enter().append('rect')\n              .attr('height', 8)\n              .attr('x', (d) => x(d[0]))\n              .attr('width', (d) => {\n                  return Math.abs(x(d[1]) - x(d[0]));\n              } )\n              .attr('fill', (d) => color(d[0]));\n\n        this.g.append('text')\n            .attr('class', 'caption')\n            .attr('x', x.range()[0])\n            .attr('y', -6)\n            .attr('fill', '#444')\n            .attr('text-anchor', 'start')\n            .attr('font-weight', 'bold')\n            .text(this.keyTitle);\n          this.g.call(d3.axisBottom(x)\n            .tickSize(13)\n            .tickFormat(this.formatLegend)\n            .tickValues(color.domain()))\n          .select('.domain')\n            .remove();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/maps.js","import { error } from './utility.js';\nimport { API_URL } from './local_settings.js';\n\n////////////////////////////////////////////////////////////////\n// Functions to retrieve and extract data from Five9.\n// These functions interact with our server, which houses data\n// and formats data originating in Five9 reports.\n////////////////////////////////////////////////////////////////\n\n\n// Get agent/ACD statistics\nexport async function getStatistics(filter) {\n    const response = await request(filter, 'statistics');\n    return response.json();\n}\n\n// Get real-time stats\nexport async function queueStats() {\n    return getData({}, 'queue-stats');\n}\n\n/**\n * Get CSV string of report results from Five9\n * @param  {Object} params\n * @param  {String} type   endpoint: `maps` or `service-level`\n * @return {Promise -> Object}        JSON data\n */\nexport function getReportResults(params, type) {\n    return getData(params, `reports/${type}`);\n}\n\n/**\n * Return user information from username.\n * @param  {String} username if blank, will return currently logged-in user's\n *                           data\n * @return {Promise -> Object} User's object\n */\nexport async function getUserInformation(username = '') {\n    let path = username ? `users/data/${username}` : `users/data`;\n    const response = await request({}, path, 'GET');\n    return response.json();\n}\n\n/**\n * Set a user's theme preferences.\n * @param  {String} username\n * @param  {Object} newTheme with theme fields\n * @return {Promise -> String} response message\n */\nexport async function updateUserTheme(username, newTheme) {\n    const response = await request(\n        { username: username, newTheme: newTheme },\n        `users/theme`, 'PATCH'\n    );\n    return response.text();\n}\n\n\n/**\n * List of available fields for widgets.\n * @return {Promise} resolves to array of field objects\n */\nexport async function getFieldList() {\n    let response = await request({}, 'fields', 'GET');\n    return response.json();\n}\n/**\n * Updates a field on server.\n * @param  {Object}  field new object\n * @return {Promise} resolves to array of field objects\n */\nexport async function updateField(field) {\n    let response = await request({field: field}, 'fields', 'PUT');\n    return response.text();\n}\n\n\n/**\n * List of all links.\n * @return {Promise} resolves to array of goal objects\n */\nexport async function getGoalList() {\n    let response = await request({}, 'goals', 'POST');\n    return response.json();\n}\n/**\n * List of goals that apply to the given agent group(s).\n * @param  {Array of Strings}   agentGroups\n * @return {Promise} resolves to array of goal objects\n */\nexport async function getGoalsForAgentGroups(agentGroups) {\n    let response = await request({agentGroups: agentGroups}, 'goals', 'POST');\n    return response.json();\n}\n/**\n * Updates a goal on server.\n * @param  {Object}  goal new object\n * @return {Promise} resolves to response message\n */\nexport async function updateGoal(goal) {\n    let response = await request({goal: goal}, 'goals', 'PUT');\n    return response.text();\n}\n/**\n * Delete a goal from server.\n * @param  {Object}  goal object to remove\n * @return {Promise} resolves to response message\n */\nexport async function deleteGoal(goal) {\n    let response = await request({goal: goal}, 'goals', 'DELETE');\n    return response.text();\n}\n\n/**\n * Get skill groups with associated names, agentGroups and skills\n * @return {Promise -> [Object]} array of objects from SkillGroup table\n */\nexport async function getSkillGroups() {\n    let response = await request({}, 'skill-group', 'GET');\n    return response.json();\n}\n\n/**\n * List of all links.\n * @return {Promise} resolves to array of link objects\n */\nexport async function getLinkList() {\n    let response = await request({}, 'links', 'POST');\n    return response.json();\n}\n/**\n * Updates a link on server.\n * @param  {Object}  link new object\n * @return {Promise} resolves to response message\n */\nexport async function updateLink(link) {\n    let response = await request({link: link}, 'links', 'PUT');\n    return response.text();\n}\n/**\n * Delete a link from server.\n * @param  {Object}  link object to remove\n * @return {Promise} resolves to response message\n */\nexport async function deleteLink(link) {\n    let response = await request({link: link}, 'links', 'DELETE');\n    return response.text();\n}\n\n/**\n * List of available scheduled skilling jobs.\n * @return {Promise} resolves to array of field objects\n */\nexport async function getSkillJobs() {\n    let response = await request({}, 'skill', 'GET');\n    return response.json();\n}\n/**\n * Updates a scheduled skilling job on server.\n * @param  {Object}  job new object\n * @return {Promise} resolves to server's response\n */\nexport async function updateSkillJob(job) {\n    // format data\n    const format = (skillStr) => skillStr.split(',').map((sk) => sk.trim());\n\n    ['addSkills', 'removeSkills'].map((prop) => {\n        let skills = job.data[prop];\n        if (typeof(skills) == 'string') {\n            job.data[prop] = format(skills);\n        }\n    });\n\n    let response = await request({job: job, data: job.data}, 'skill', 'PUT');\n    return response.text();\n}\n/**\n * Delete the given skilling job object.\n * @param  {Object} job\n * @return {Promise} resolves to response from server\n */\nexport async function deleteSkillJob(job) {\n    let response = await request({job: job}, 'skill', 'DELETE');\n    return response.text();\n}\n\nexport async function getAdminUsers() {\n    let response = await request({}, 'users/admin', 'GET');\n    let users = await response.json();\n    console.log(users)\n    return users;\n}\n\nexport async function updateAdminUser(user) {\n    let response = await request({user: user}, 'users/admin', 'PATCH');\n    return response.text();\n}\n\nexport async function rebootServer() {\n    const response = await request({}, 'reboot-server', 'POST');\n    return response.text();\n}\nexport async function reloadData(params) {\n    const response = await request(params, 'reload-data', 'POST');\n    return response.text();\n}\n\n/**\n * [uploadData description]\n * @param  {Object} params including fields tableName, csv, and\n *                          confirmedChanges (optional)\n * @return {Promise}       resolves to string (server response message)\n */\nexport async function uploadData(params) {\n    try {\n        const response = await request(params, 'upload-data', 'POST');\n        return await response.text();\n    } catch (err) {\n        return err.message;\n    }\n}\n\n/**\n *  Helper function that pulls credentials from DOM, then makes request to server.\n * @param  {Object} parameters POSTed to server\n * @param  {String} endpoint   at server's API\n * @return {Object}            JSON data\n */\nasync function getData(parameters, endpoint) {\n    const response = await request(parameters, endpoint);\n    return await response.json();\n}\n\n\n\n\n/**\n * Make a request to server with given parameters.\n * @param  {Object} parameters passed as body of request\n * @param  {String} [url='statistics'] endpoint on server\n * @param  {String} [method='POST'] HTTP action\n * @return {Promise} response from server\n */\nasync function request(parameters, url='statistics', method='POST') {\n    const apiURL = API_URL + url; // defined in api_url.js\n\n    const requestOptions = {\n        method: method,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n    }\n    if (method != 'GET') {\n        requestOptions.body = JSON.stringify(parameters);\n    }\n\n    return fetch(apiURL, requestOptions)\n        .then(async (response) => {\n            if (response.status == 504) notifyServer504(parameters, url); // debugging\n            if (!response.ok) {\n                let bodyText = await response.text();\n                throw new Error(`Server responded with ${response.status} ${response.statusText}: ${bodyText}`);\n            }\n            return response;\n        });\n}\n\nasync function notifyServer504() {\n    return fetch(API_URL + 'notify-504');\n}\n\n\n// Gets the actual returned value/data out of JSON from the server.\nfunction jsonToReturnValue(json, type) {\n    return json['env:Envelope']['env:Body'][0]['ns2:'+type+'Response'][0]['return'][0];\n}\n\n// takes JSON from server and returns text within 'faultstring' tag (if existant)\nfunction getFaultStringFromData(data) {\n    try {\n        return data['env:Envelope']['env:Body'][0]['env:Fault'][0]['faultstring'];\n    } catch (err) {\n        return '';\n    }\n}\n\n// Given a requestType, returns JSON to submit to server in POST request.\n// requestType should match Five9 API command.\nexport function getParameters(requestType) {\n    let params = {};\n    // Initiate session\n    if (requestType == 'setSessionParameters') {\n        params = {\n            'service': 'setSessionParameters',\n            'settings': [ {\n                'viewSettings': [\n                    { 'idleTimeOut': 1800 },\n                    { 'statisticsRange': 'CurrentDay' },\n                    { 'rollingPeriod': 'Minutes10' }\n                ]\n            } ]\n        }\n    }\n    // Get real-time call stats\n    if (requestType == 'getStatistics') {\n        params = {\n            'service': 'getStatistics',\n            'settings': [ {\n                'statisticType': 'ACDStatus'\n            } ]\n        }\n    }\n\n    return params;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/api.js","export const API_URL = 'https://nathanclonts.com/dashboard/api/';\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/local_settings.js","import { error } from './utility';\nimport * as api from './api';\nimport CallMap from './maps';\n\n// General functions to initiate the call map dashboard.\n// Uses the CallMap class defined in maps.js to draw the D3 map.\n\n// timeout to pause event loop when needed\nlet timeout = null;\nconst mapSettings = {\n    display: 'total'\n};\n\n$(document).ready(() => {\n    let callMap = new CallMap();\n\n    // listen for update button presses\n    $('.filters-wrapper .update').click(async (event) => {\n        // stop any current event loops running\n        if (timeout != null) {\n            clearTimeout(timeout);\n        }\n        // Update map every 4 minutes\n        startUpdatingMap(callMap, 4*60);\n    });\n\n    // Listen for changes to the filter settings\n    setupFilterListeners();\n\n    // Start updating on page load\n    $('.filters-wrapper .update').trigger('click');\n});\n\n\nfunction setupFilterListeners() {\n    // handle toggle for relative / absolute date filters\n    $('.date-type-toggle').children().click((event) => {\n        // Relative button was chosen\n        if ($(event.currentTarget).hasClass('relative')) {\n            // Update toggle buttons to show current selection\n            $('.date-type-toggle .relative').addClass('checked');\n            $('.date-type-toggle .absolute').removeClass('checked');\n            // Display the appropriate date selection\n            $('.date-filter-inputs.absolute').addClass('hidden');\n            $('.date-filter-inputs.relative').removeClass('hidden');\n        // Absolute button was clicked\n        } else {\n            $('.date-type-toggle .absolute').addClass('checked');\n            $('.date-type-toggle .relative').removeClass('checked');\n            $('.date-filter-inputs.relative').addClass('hidden');\n            $('.date-filter-inputs.absolute').removeClass('hidden');\n        }\n    })\n\n    // Handle selection of Today vs Last X Minutes for relative filters\n    $('.relative-date-selector').change(() => {\n        if ($('.relative-date-selector').val() == 'last-x-minutes') {\n            $('.relative-parameters-wrapper').removeClass('hidden');\n        } else {\n            $('.relative-parameters-wrapper').addClass('hidden');\n        }\n    });\n\n    // Alternate between mapping total calls or calls per customer count\n    $('.call-display-toggle').children().click((event) => {\n        // Was Total button clicked?\n        if ($(event.currentTarget).hasClass('total')) {\n            mapSettings.display = 'total';\n            $('.call-display-toggle .total').addClass('checked');\n            $('.call-display-toggle .relative').removeClass('checked');\n            // show minimum customer filter\n            $('.call-display .minimum-customers-wrapper').addClass('hidden');\n        // Relative display was chosen\n        } else {\n            mapSettings.display = 'relative';\n            $('.call-display-toggle .total').removeClass('checked');\n            $('.call-display-toggle .relative').addClass('checked');\n            $('.call-display .minimum-customers-wrapper').removeClass('hidden');\n        }\n    });\n}\n\n// Begins a loop of updating the map data every ${refreshRate} seconds\nasync function startUpdatingMap(callMap, refreshRate) {\n    try {\n        $('.message').text(`Updating...`);\n        await updateMap(callMap);\n        $('.message').text('Last updated ' + moment().format('h:mm:ss A') + '.');\n    } catch (err) {\n        error(err);\n    }\n    timeout = setTimeout(() => startUpdatingMap(callMap, refreshRate),\n                         refreshRate * 1000);\n}\n\n// Update callMap (d3 map object) based on parameters in page\nasync function updateMap(callMap) {\n    const params = reportTimeRange();\n    params.skills = $('.skills.filter').val();\n\n    // get all the datas\n    let customerData = await getCustomerData();\n    const callData = await api.getReportResults(params, 'maps');\n\n    // build data object off of customerData zip codes\n    let data = Object.keys(customerData)\n        .map((zip) => ({\n            zipCode: zip,\n            calls: callData\n                    .filter((d) => d.zipCode == zip)\n                    .reduce((sum, d) => sum + d.calls, 0),\n            customers: customerData[zip]\n        }));\n\n    // if any zips with calls are missing from customerData, add them here\n    let missing = getZipsWithoutCustomers(callData, customerData);\n    data.concat(missing);\n\n    // Determine the field being mapped -- total calls or per customer\n    let field;\n    if (mapSettings.display == 'total') {\n        field = 'calls';\n        callMap.keyTitle = 'Calls offered';\n        callMap.formatLegend = d3.format('d');\n    } else if (mapSettings.display == 'relative') {\n        field = 'callsPerCustomer';\n        callMap.keyTitle = 'Calls offered divided by customer base';\n        callMap.formatLegend = d3.format('.1%');\n    }\n\n    // If we're in relative display mode, the user can filter areas meeting a\n    // minimum customer count\n    let filterFn;\n    if (mapSettings.display == 'relative') {\n        let minCustomers = $('.minimum-customers').val() * 1;\n        filterFn = (d) => d.value.customers >= minCustomers;\n    } else {\n        filterFn = (d) => true;\n    }\n\n    // Key and value extractor functions\n    const keyFn = (d) => d.zipCode.substring(0, 3);\n    const rollupFn = (d) => {\n        let calls = d3.sum(d, (x) => x.calls);\n        let customers = d3.sum(d, (x) => x.customers);\n        let callsPerCustomer;\n        if (customers == 0) callsPerCustomer = 0;\n        else callsPerCustomer = calls / customers;\n        return {\n            'calls': calls,\n            'customers': customers,\n            'callsPerCustomer': callsPerCustomer\n        }\n    }\n\n    // Create the data structure in a D3-friendly way\n    let callsByZip = d3.nest()\n        .key(keyFn)\n        .rollup(rollupFn)\n        .entries(data)\n        .filter(filterFn)\n        .filter((d) => d.key != ''); // remove calls with no zipcode assigned\n\n    callMap.update(callsByZip, field, keyFn, rollupFn);\n\n    console.log('Finished updateMap() at ' + moment().format('h:mm:ss A'));\n}\n\n// Object to store customer zipcode data.\nconst customerCount = {\n    data: [],\n    // record time of last update (default to Y2K to force an update)\n    lastUpdated: moment('2000-01-01')\n};\n/**\n * Retrieve customer counts by zip code. Updates from the server every 6 hours.\n * @return {Object} in format { '<zip code here>': '31415' }\n */\nasync function getCustomerData() {\n    // reload data from server if it's been 6+ hours since the last update\n    if (customerCount.lastUpdated.isBefore(moment().subtract(6, 'hours'))) {\n        let rawData = await api.getReportResults({}, 'customers');\n\n        // Convert array of objects to a single object, with zipcode as key\n        // and customer count as volue\n        customerCount.data = rawData.reduce((object, item) => {\n            object[item.zipCode] = item.customerCount;\n            return object;\n        }, {});\n\n        customerCount.lastUpdated = moment();\n    }\n    return customerCount.data;\n}\n\n\nfunction getZipsWithoutCustomers(callData, customerData) {\n    callData\n        .filter((d) => isZipWithoutCustomers(d.zipCode, customerData))\n        .map((d) => ({\n            zipCode: d.zipCode,\n            calls: d.calls,\n            customers: 0\n        }));\n}\n\nfunction isZipWithoutCustomers(zip, customerData) {\n    return (zip != '' && !customerData.hasOwnProperty(zip));\n}\n\n// Determines start/end times chosen by user\n// Return {start:'X',end:'Y'}\nfunction reportTimeRange() {\n    const time = {};\n    // Are we using absolute dates?\n    if ($('.date-type-toggle .absolute').hasClass('checked')) {\n        time.start = moment($('.filter.start-time').val())\n                        .tz('America/Los_Angeles')\n                        .format('YYYY-MM-DD[T]HH:mm:ss');\n        time.end   = moment($('.filter.end-time'  ).val())\n                        .tz('America/Los_Angeles')\n                        .format('YYYY-MM-DD[T]HH:mm:ss');\n    // Using relative dates\n    } else {\n        const relativeSelector = $('.relative-date-selector').val();\n        if (relativeSelector == 'today') {\n            time.start = moment().format('YYYY-MM-DD') + 'T00:00:00';\n            time.end   = moment().format('YYYY-MM-DD') + 'T23:59:59';\n        // If user specified a certain number of minutes, subtract the minutes,\n        // convert to Eastern Time, and round down to nearest 30-minute interval\n        } else if (relativeSelector == 'last-x-minutes') {\n            const minutes = $('.filter.relative-minutes').val();\n            if (isNaN(minutes)) throw new Error(`Relative minute value ${minutes} is not a number.`);\n            // Convert to server's timezone\n            let start = moment().subtract(minutes, 'm').tz('America/Los_Angeles');\n            // round down to nearest interval\n            start.subtract(start.minutes() % 30, 'minutes');\n            start.seconds(0);\n            time.start = start.format('YYYY-MM-DD[T]HH:mm:ss');\n            console.log(time.start);\n            time.end   = moment().format('YYYY-MM-DD') + 'T23:59:59';\n        } else {\n            throw new Error('Relative date selector value is ' + relativeSelector +\n                            '. Value not recognized.');\n        }\n    }\n    return time;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/maps-dashboard.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap 196d9e1c335f6d4ee1a3","webpack:///./src/public/javascript/utility.js","webpack:///./src/public/javascript/upload.js","webpack:///./src/public/javascript/local_settings.js","webpack:///./src/public/javascript/api.js"],"names":["error","err","message","newDate","Date","setTime","now","dateString","toTimeString","console","log","$","text","formatAMPM","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","strTime","vm","Vue","el","components","data","selectedTableName","methods","updateMessage","msg","uploadFile","event","file","target","files","reader","FileReader","onload","e","params","csv","result","tableName","confirmedChanges","response","$refs","value","bind","readAsText","API_URL","getStatistics","filter","request","json","queueStats","getData","getReportResults","type","getUserInformation","username","updateUserTheme","newTheme","getFieldList","updateField","field","getGoalList","getGoalsForAgentGroups","agentGroups","updateGoal","goal","deleteGoal","getSkillJobs","updateSkillJob","job","format","skillStr","split","map","sk","trim","prop","skills","deleteSkillJob","getAdminUsers","users","updateAdminUser","user","rebootServer","reloadData","uploadData","parameters","endpoint","url","method","apiURL","requestOptions","headers","credentials","body","JSON","stringify","fetch","then","status","notifyServer504","ok","bodyText","Error","statusText","jsonToReturnValue","getFaultStringFromData","getParameters","requestType"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC5DA;AAAA;AACO,SAASA,KAAT,CAAeC,GAAf,EAAoBC,UAAQ,EAA5B,EAAgC;AACnC;AACA,MAAIC,UAAU,IAAIC,IAAJ,EAAd;AACAD,UAAQE,OAAR,CAAgBD,KAAKE,GAAL,EAAhB;AACA,MAAIC,aAAaJ,QAAQK,YAAR,EAAjB;AACAC,UAAQC,GAAR,CAAYH,UAAZ,EALmC,CAOnC;;AACAI,IAAE,UAAF,EAAcC,IAAd,CAAoB,8BAA6BX,IAAIC,OAAQ,IAAGA,OAAQ,EAAxE;AACAO,UAAQC,GAAR,CAAY,YAAZ;AACAD,UAAQT,KAAR,CAAcC,GAAd;AACH,C,CAED;;AACO,SAASY,UAAT,CAAoBC,IAApB,EAA0B;AAC7B,MAAIC,QAAQD,KAAKE,QAAL,EAAZ;AACA,MAAIC,UAAUH,KAAKI,UAAL,EAAd;AACA,MAAIC,UAAUL,KAAKM,UAAL,EAAd;AACA,MAAIC,OAAON,SAAS,EAAT,GAAc,IAAd,GAAqB,IAAhC;AACAA,UAAQA,QAAQ,EAAhB;AACAA,UAAQA,QAAQA,KAAR,GAAgB,EAAxB,CAN6B,CAMD;;AAC5BE,YAAUA,UAAU,EAAV,GAAe,MAAIA,OAAnB,GAA6BA,OAAvC;AACAE,YAAUA,UAAU,EAAV,GAAe,MAAIA,OAAnB,GAA6BA,OAAvC;AACA,MAAIG,UAAUP,QAAQ,GAAR,GAAcE,OAAd,GAAwB,GAAxB,GAA8BE,OAA9B,GAAwC,GAAxC,GAA8CE,IAA5D;AACA,SAAOC,OAAP;AACH,C;;;;;;;;;;;;;;;;;;AC3BD;AAEA,MAAMC,KAAK,IAAIC,GAAJ,CAAQ;AACfC,MAAI,aADW;AAGfC,cAAY,EAHG;AAMfC,QAAM;AACFzB,aAAS,EADP;AAEF0B,uBAAmB;AAFjB,GANS;AAWfC,WAAS;AACLC,mBAAe,UAASC,GAAT,EAAc;AACzB,WAAK7B,OAAL,GAAe6B,GAAf;AACH,KAHI;AAILC,gBAAY,gBAAeC,KAAf,EAAsB;AAC9B,YAAMC,OAAOD,MAAME,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AACA,UAAI,CAACF,IAAL,EAAW;AACP,aAAKJ,aAAL,CAAmB,mBAAnB;AACA;AACH;;AACD,YAAMO,SAAS,IAAIC,UAAJ,EAAf;;AACAD,aAAOE,MAAP,GAAgB,gBAAeC,CAAf,EAAkB;AAC9B,cAAMC,SAAS;AACXC,eAAKF,EAAEL,MAAF,CAASQ,MADH;AAEXC,qBAAW,KAAKhB,iBAFL;AAGXiB,4BAAkB;AAHP,SAAf;AAKA,cAAMC,WAAW,MAAM,4DAAeL,MAAf,CAAvB;AACA,aAAKX,aAAL,CAAmBgB,QAAnB,EAP8B,CAQ9B;;AACA,aAAKC,KAAL,CAAW,WAAX,EAAwBC,KAAxB,GAAgC,EAAhC;AACH,OAVe,CAUdC,IAVc,CAUT,IAVS,CAAhB;;AAWAZ,aAAOa,UAAP,CAAkBhB,IAAlB;AACH;AAvBI;AAXM,CAAR,CAAX,C;;;;;;;;ACFO,MAAMiB,UAAU,4BAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAP;CAGA;AACA;AACA;AACA;AACA;AAGA;;AACO,eAAeC,aAAf,CAA6BC,MAA7B,EAAqC;AACxC,QAAMP,WAAW,MAAMQ,QAAQD,MAAR,EAAgB,YAAhB,CAAvB;AACA,SAAOP,SAASS,IAAT,EAAP;AACH,C,CAED;;AACO,eAAeC,UAAf,GAA4B;AAC/B,SAAOC,QAAQ,EAAR,EAAY,aAAZ,CAAP;AACH;AAED;;;;;;;AAMO,SAASC,gBAAT,CAA0BjB,MAA1B,EAAkCkB,IAAlC,EAAwC;AAC3C,SAAOF,QAAQhB,MAAR,EAAiB,WAAUkB,IAAK,EAAhC,CAAP;AACH;AAED;;;;;;AAKO,eAAeC,kBAAf,CAAkCC,QAAlC,EAA4C;AAC/C,QAAMf,WAAW,MAAMQ,QAAQ,EAAR,EAAa,cAAaO,QAAS,EAAnC,EAAsC,KAAtC,CAAvB;AACA,SAAOf,SAASS,IAAT,EAAP;AACH;AAED;;;;;;;AAMO,eAAeO,eAAf,CAA+BD,QAA/B,EAAyCE,QAAzC,EAAmD;AACtD,QAAMjB,WAAW,MAAMQ,QAAQ;AAAES,cAAUA;AAAZ,GAAR,EAAiC,aAAjC,EAA+C,OAA/C,CAAvB;AACA,SAAOjB,SAASS,IAAT,EAAP;AACH;AAGD;;;;;AAIO,eAAeS,YAAf,GAA8B;AACjC,MAAIlB,WAAW,MAAMQ,QAAQ,EAAR,EAAY,QAAZ,EAAsB,KAAtB,CAArB;AACA,SAAOR,SAASS,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAeU,WAAf,CAA2BC,KAA3B,EAAkC;AACrC,MAAIpB,WAAW,MAAMQ,QAAQ;AAACY,WAAOA;AAAR,GAAR,EAAwB,QAAxB,EAAkC,KAAlC,CAArB;AACA,SAAOpB,SAASlC,IAAT,EAAP;AACH;AAGD;;;;;AAIO,eAAeuD,WAAf,GAA6B;AAChC,MAAIrB,WAAW,MAAMQ,QAAQ,EAAR,EAAY,OAAZ,EAAqB,MAArB,CAArB;AACA,SAAOR,SAASS,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAea,sBAAf,CAAsCC,WAAtC,EAAmD;AACtD,MAAIvB,WAAW,MAAMQ,QAAQ;AAACe,iBAAaA;AAAd,GAAR,EAAoC,OAApC,EAA6C,MAA7C,CAArB;AACA,SAAOvB,SAASS,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAee,UAAf,CAA0BC,IAA1B,EAAgC;AACnC,MAAIzB,WAAW,MAAMQ,QAAQ;AAACiB,UAAMA;AAAP,GAAR,EAAsB,OAAtB,EAA+B,KAA/B,CAArB;AACA,SAAOzB,SAASlC,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAe4D,UAAf,CAA0BD,IAA1B,EAAgC;AACnC,MAAIzB,WAAW,MAAMQ,QAAQ;AAACiB,UAAMA;AAAP,GAAR,EAAsB,OAAtB,EAA+B,QAA/B,CAArB;AACA,SAAOzB,SAASlC,IAAT,EAAP;AACH;AAED;;;;;AAIO,eAAe6D,YAAf,GAA8B;AACjC,MAAI3B,WAAW,MAAMQ,QAAQ,EAAR,EAAY,OAAZ,EAAqB,KAArB,CAArB;AACA,SAAOR,SAASS,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAemB,cAAf,CAA8BC,GAA9B,EAAmC;AACtC;AACA,QAAMC,SAAUC,QAAD,IAAcA,SAASC,KAAT,CAAe,GAAf,EAAoBC,GAApB,CAAyBC,EAAD,IAAQA,GAAGC,IAAH,EAAhC,CAA7B;;AAEA,GAAC,WAAD,EAAc,cAAd,EAA8BF,GAA9B,CAAmCG,IAAD,IAAU;AACxC,QAAIC,SAASR,IAAIhD,IAAJ,CAASuD,IAAT,CAAb;;AACA,QAAI,OAAOC,MAAP,IAAkB,QAAtB,EAAgC;AAC5BR,UAAIhD,IAAJ,CAASuD,IAAT,IAAiBN,OAAOO,MAAP,CAAjB;AACH;AACJ,GALD;AAOA,MAAIrC,WAAW,MAAMQ,QAAQ;AAACqB,SAAKA,GAAN;AAAWhD,UAAMgD,IAAIhD;AAArB,GAAR,EAAoC,OAApC,EAA6C,KAA7C,CAArB;AACA,SAAOmB,SAASlC,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAewE,cAAf,CAA8BT,GAA9B,EAAmC;AACtC,MAAI7B,WAAW,MAAMQ,QAAQ;AAACqB,SAAKA;AAAN,GAAR,EAAoB,OAApB,EAA6B,QAA7B,CAArB;AACA,SAAO7B,SAASlC,IAAT,EAAP;AACH;AAEM,eAAeyE,aAAf,GAA+B;AAClC,MAAIvC,WAAW,MAAMQ,QAAQ,EAAR,EAAY,aAAZ,EAA2B,KAA3B,CAArB;AACA,MAAIgC,QAAQ,MAAMxC,SAASS,IAAT,EAAlB;AACA9C,UAAQC,GAAR,CAAY4E,KAAZ;AACA,SAAOA,KAAP;AACH;AAEM,eAAeC,eAAf,CAA+BC,IAA/B,EAAqC;AACxC,MAAI1C,WAAW,MAAMQ,QAAQ;AAACkC,UAAMA;AAAP,GAAR,EAAsB,aAAtB,EAAqC,OAArC,CAArB;AACA,SAAO1C,SAASlC,IAAT,EAAP;AACH;AAEM,eAAe6E,YAAf,GAA8B;AACjC,QAAM3C,WAAW,MAAMQ,QAAQ,EAAR,EAAY,eAAZ,EAA6B,MAA7B,CAAvB;AACA,SAAOR,SAASlC,IAAT,EAAP;AACH;AACM,eAAe8E,UAAf,CAA0BjD,MAA1B,EAAkC;AACrC,QAAMK,WAAW,MAAMQ,QAAQb,MAAR,EAAgB,aAAhB,EAA+B,MAA/B,CAAvB;AACA,SAAOK,SAASlC,IAAT,EAAP;AACH;AAED;;;;;;;AAMO,eAAe+E,UAAf,CAA0BlD,MAA1B,EAAkC;AACrC,MAAI;AACA,UAAMK,WAAW,MAAMQ,QAAQb,MAAR,EAAgB,aAAhB,EAA+B,MAA/B,CAAvB;AACA,WAAO,MAAMK,SAASlC,IAAT,EAAb;AACH,GAHD,CAGE,OAAOX,GAAP,EAAY;AACV,WAAOA,IAAIC,OAAX;AACH;AACJ;AAED;;;;;;;AAMA,eAAeuD,OAAf,CAAuBmC,UAAvB,EAAmCC,QAAnC,EAA6C;AACzC,QAAM/C,WAAW,MAAMQ,QAAQsC,UAAR,EAAoBC,QAApB,CAAvB;AACA,SAAO,MAAM/C,SAASS,IAAT,EAAb;AACH;AAKD;;;;;;;;;AAOA,eAAeD,OAAf,CAAuBsC,UAAvB,EAAmCE,MAAI,YAAvC,EAAqDC,SAAO,MAA5D,EAAoE;AAChE,QAAMC,SAAS,mEAAA7C,GAAU2C,GAAzB,CADgE,CAClC;;AAE9B,QAAMG,iBAAiB;AACnBF,YAAQA,MADW;AAEnBG,aAAS;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFU;AAMnBC,iBAAa;AANM,GAAvB;;AAQA,MAAIJ,UAAU,KAAd,EAAqB;AACjBE,mBAAeG,IAAf,GAAsBC,KAAKC,SAAL,CAAeV,UAAf,CAAtB;AACH;;AAED,SAAOW,MAAMP,MAAN,EAAcC,cAAd,EACFO,IADE,CACG,MAAO1D,QAAP,IAAoB;AACtB,QAAIA,SAAS2D,MAAT,IAAmB,GAAvB,EAA4BC,gBAAgBd,UAAhB,EAA4BE,GAA5B,EADN,CACwC;;AAC9D,QAAI,CAAChD,SAAS6D,EAAd,EAAkB;AACd,UAAIC,WAAW,MAAM9D,SAASlC,IAAT,EAArB;AACA,YAAM,IAAIiG,KAAJ,CAAW,yBAAwB/D,SAAS2D,MAAO,IAAG3D,SAASgE,UAAW,KAAIF,QAAS,EAAvF,CAAN;AACH;;AACD,WAAO9D,QAAP;AACH,GARE,CAAP;AASH;;AAED,eAAe4D,eAAf,GAAiC;AAC7B,SAAOH,MAAM,mEAAApD,GAAU,YAAhB,CAAP;AACH,C,CAGD;;;AACA,SAAS4D,iBAAT,CAA2BxD,IAA3B,EAAiCI,IAAjC,EAAuC;AACnC,SAAOJ,KAAK,cAAL,EAAqB,UAArB,EAAiC,CAAjC,EAAoC,SAAOI,IAAP,GAAY,UAAhD,EAA4D,CAA5D,EAA+D,QAA/D,EAAyE,CAAzE,CAAP;AACH,C,CAED;;;AACA,SAASqD,sBAAT,CAAgCrF,IAAhC,EAAsC;AAClC,MAAI;AACA,WAAOA,KAAK,cAAL,EAAqB,UAArB,EAAiC,CAAjC,EAAoC,WAApC,EAAiD,CAAjD,EAAoD,aAApD,CAAP;AACH,GAFD,CAEE,OAAO1B,GAAP,EAAY;AACV,WAAO,EAAP;AACH;AACJ,C,CAED;AACA;;;AACO,SAASgH,aAAT,CAAuBC,WAAvB,EAAoC;AACvC,MAAIzE,SAAS,EAAb,CADuC,CAEvC;;AACA,MAAIyE,eAAe,sBAAnB,EAA2C;AACvCzE,aAAS;AACL,iBAAW,sBADN;AAEL,kBAAY,CAAE;AACV,wBAAgB,CACZ;AAAE,yBAAe;AAAjB,SADY,EAEZ;AAAE,6BAAmB;AAArB,SAFY,EAGZ;AAAE,2BAAiB;AAAnB,SAHY;AADN,OAAF;AAFP,KAAT;AAUH,GAdsC,CAevC;;;AACA,MAAIyE,eAAe,eAAnB,EAAoC;AAChCzE,aAAS;AACL,iBAAW,eADN;AAEL,kBAAY,CAAE;AACV,yBAAiB;AADP,OAAF;AAFP,KAAT;AAMH;;AAED,SAAOA,MAAP;AACH,C","file":"upload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 103);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 196d9e1c335f6d4ee1a3","\r\n// Send out an error alert in console and on the page.\r\nexport function error(err, message='') {\r\n    // timestamp\r\n    let newDate = new Date();\r\n    newDate.setTime(Date.now());\r\n    let dateString = newDate.toTimeString();\r\n    console.log(dateString);\r\n\r\n    // Post to page\r\n    $('#message').text(`Whoops! An error occurred. ${err.message} ${message}`);\r\n    console.log('Error log:');\r\n    console.error(err);\r\n}\r\n\r\n// Nicely formatted time\r\nexport function formatAMPM(date) {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    seconds = seconds < 10 ? '0'+seconds : seconds;\r\n    let strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\r\n    return strTime;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/utility.js","import * as api from './api.js';\r\n\r\nconst vm = new Vue({\r\n    el: '#upload-app',\r\n\r\n    components: {\r\n    },\r\n\r\n    data: {\r\n        message: '',\r\n        selectedTableName: 'SkillGroup'\r\n    },\r\n\r\n    methods: {\r\n        updateMessage: function(msg) {\r\n            this.message = msg;\r\n        },\r\n        uploadFile: async function(event) {\r\n            const file = event.target.files[0];\r\n            if (!file) {\r\n                this.updateMessage('No file selected.')\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = async function(e) {\r\n                const params = {\r\n                    csv: e.target.result,\r\n                    tableName: this.selectedTableName,\r\n                    confirmedChanges: false\r\n                };\r\n                const response = await api.uploadData(params);\r\n                this.updateMessage(response);\r\n                // clear input file\r\n                this.$refs['fileInput'].value = '';\r\n            }.bind(this);\r\n            reader.readAsText(file);\r\n        }\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/upload.js","export const API_URL = 'http://localhost:3000/api/';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/local_settings.js","import { error } from './utility.js';\r\nimport { API_URL } from './local_settings.js';\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Functions to retrieve and extract data from Five9.\r\n// These functions interact with our server, which houses data\r\n// and formats data originating in Five9 reports.\r\n////////////////////////////////////////////////////////////////\r\n\r\n\r\n// Get agent/ACD statistics\r\nexport async function getStatistics(filter) {\r\n    const response = await request(filter, 'statistics');\r\n    return response.json();\r\n}\r\n\r\n// Get real-time stats\r\nexport async function queueStats() {\r\n    return getData({}, 'queue-stats');\r\n}\r\n\r\n/**\r\n * Get CSV string of report results from Five9\r\n * @param  {Object} params\r\n * @param  {String} type   endpoint: `maps` or `service-level`\r\n * @return {Promise -> Object}        JSON data\r\n */\r\nexport function getReportResults(params, type) {\r\n    return getData(params, `reports/${type}`);\r\n}\r\n\r\n/**\r\n * Return user information from username.\r\n * @param  {String} username\r\n * @return {Promise -> Object} User's object\r\n */\r\nexport async function getUserInformation(username) {\r\n    const response = await request({}, `users/data/${username}`, 'GET');\r\n    return response.json();\r\n}\r\n\r\n/**\r\n * Set a user's theme preferences.\r\n * @param  {String} username\r\n * @param  {Object} newTheme with theme fields\r\n * @return {Promise -> String} response message\r\n */\r\nexport async function updateUserTheme(username, newTheme) {\r\n    const response = await request({ newTheme: newTheme }, `users/theme`, 'PATCH');\r\n    return response.json();\r\n}\r\n\r\n\r\n/**\r\n * List of available fields for widgets.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getFieldList() {\r\n    let response = await request({}, 'fields', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a field on server.\r\n * @param  {Object}  field new object\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function updateField(field) {\r\n    let response = await request({field: field}, 'fields', 'PUT');\r\n    return response.text();\r\n}\r\n\r\n\r\n/**\r\n * List of all goals.\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalList() {\r\n    let response = await request({}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * List of goals that apply to the given agent group(s).\r\n * @param  {Array of Strings}   agentGroups\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalsForAgentGroups(agentGroups) {\r\n    let response = await request({agentGroups: agentGroups}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a goal on server.\r\n * @param  {Object}  goal new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a goal from server.\r\n * @param  {Object}  goal object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * List of available scheduled skilling jobs.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getSkillJobs() {\r\n    let response = await request({}, 'skill', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a scheduled skilling job on server.\r\n * @param  {Object}  job new object\r\n * @return {Promise} resolves to server's response\r\n */\r\nexport async function updateSkillJob(job) {\r\n    // format data\r\n    const format = (skillStr) => skillStr.split(',').map((sk) => sk.trim());\r\n\r\n    ['addSkills', 'removeSkills'].map((prop) => {\r\n        let skills = job.data[prop];\r\n        if (typeof(skills) == 'string') {\r\n            job.data[prop] = format(skills);\r\n        }\r\n    });\r\n\r\n    let response = await request({job: job, data: job.data}, 'skill', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete the given skilling job object.\r\n * @param  {Object} job\r\n * @return {Promise} resolves to response from server\r\n */\r\nexport async function deleteSkillJob(job) {\r\n    let response = await request({job: job}, 'skill', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\nexport async function getAdminUsers() {\r\n    let response = await request({}, 'users/admin', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\n\r\nexport async function updateAdminUser(user) {\r\n    let response = await request({user: user}, 'users/admin', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\nexport async function rebootServer() {\r\n    const response = await request({}, 'reboot-server', 'POST');\r\n    return response.text();\r\n}\r\nexport async function reloadData(params) {\r\n    const response = await request(params, 'reload-data', 'POST');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * [uploadData description]\r\n * @param  {Object} params including fields tableName, csv, and\r\n *                          confirmedChanges (optional)\r\n * @return {Promise}       resolves to string (server response message)\r\n */\r\nexport async function uploadData(params) {\r\n    try {\r\n        const response = await request(params, 'upload-data', 'POST');\r\n        return await response.text();\r\n    } catch (err) {\r\n        return err.message;\r\n    }\r\n}\r\n\r\n/**\r\n *  Helper function that pulls credentials from DOM, then makes request to server.\r\n * @param  {Object} parameters POSTed to server\r\n * @param  {String} endpoint   at server's API\r\n * @return {Object}            JSON data\r\n */\r\nasync function getData(parameters, endpoint) {\r\n    const response = await request(parameters, endpoint);\r\n    return await response.json();\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Make a request to server with given parameters.\r\n * @param  {Object} parameters passed as body of request\r\n * @param  {String} [url='statistics'] endpoint on server\r\n * @param  {String} [method='POST'] HTTP action\r\n * @return {Promise} response from server\r\n */\r\nasync function request(parameters, url='statistics', method='POST') {\r\n    const apiURL = API_URL + url; // defined in api_url.js\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    }\r\n    if (method != 'GET') {\r\n        requestOptions.body = JSON.stringify(parameters);\r\n    }\r\n\r\n    return fetch(apiURL, requestOptions)\r\n        .then(async (response) => {\r\n            if (response.status == 504) notifyServer504(parameters, url); // debugging\r\n            if (!response.ok) {\r\n                let bodyText = await response.text();\r\n                throw new Error(`Server responded with ${response.status} ${response.statusText}: ${bodyText}`);\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nasync function notifyServer504() {\r\n    return fetch(API_URL + 'notify-504');\r\n}\r\n\r\n\r\n// Gets the actual returned value/data out of JSON from the server.\r\nfunction jsonToReturnValue(json, type) {\r\n    return json['env:Envelope']['env:Body'][0]['ns2:'+type+'Response'][0]['return'][0];\r\n}\r\n\r\n// takes JSON from server and returns text within 'faultstring' tag (if existant)\r\nfunction getFaultStringFromData(data) {\r\n    try {\r\n        return data['env:Envelope']['env:Body'][0]['env:Fault'][0]['faultstring'];\r\n    } catch (err) {\r\n        return '';\r\n    }\r\n}\r\n\r\n// Given a requestType, returns JSON to submit to server in POST request.\r\n// requestType should match Five9 API command.\r\nexport function getParameters(requestType) {\r\n    let params = {};\r\n    // Initiate session\r\n    if (requestType == 'setSessionParameters') {\r\n        params = {\r\n            'service': 'setSessionParameters',\r\n            'settings': [ {\r\n                'viewSettings': [\r\n                    { 'idleTimeOut': 1800 },\r\n                    { 'statisticsRange': 'CurrentDay' },\r\n                    { 'rollingPeriod': 'Minutes10' }\r\n                ]\r\n            } ]\r\n        }\r\n    }\r\n    // Get real-time call stats\r\n    if (requestType == 'getStatistics') {\r\n        params = {\r\n            'service': 'getStatistics',\r\n            'settings': [ {\r\n                'statisticType': 'ACDStatus'\r\n            } ]\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/api.js"],"sourceRoot":""}
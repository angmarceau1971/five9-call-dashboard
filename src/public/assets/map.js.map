{"version":3,"sources":["webpack:///webpack/bootstrap 6ed0f1c007097449fa4f","webpack:///./src/public/javascript/maps.js","webpack:///./src/public/javascript/utility.js","webpack:///./src/public/javascript/api.js","webpack:///./src/public/javascript/local_settings.js","webpack:///./src/public/javascript/maps-dashboard.js"],"names":["CallMap","create","data","field","colors","width","height","calls","d3","map","d","key","minValue","min","value","maxValue","max","x","scaleLinear","domain","extent","rangeRound","color","scaleThreshold","range","path","geoPath","svg","select","attr","keyTitle","drawKey","queue","defer","json","API_URL","await","err","usa","zipData","onReady","drawZips","drawStates","update","g","remove","exit","selectAll","backgroundColor","sorted","features","sort","a","b","isEmptyZip","properties","ZIP","insert","enter","append","zip","get","text","o","customers","callsPerCustomer","has","format","invertExtent","Math","abs","call","axisBottom","tickSize","tickFormat","formatLegend","tickValues","error","message","newDate","Date","setTime","now","dateString","toTimeString","console","log","$","formatAMPM","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","strTime","getStatistics","filter","response","request","queueStats","getData","getReportResults","params","type","getUserInformation","username","updateUserTheme","newTheme","getFieldList","updateField","deleteField","getGoalList","getGoalsForAgentGroups","agentGroups","updateGoal","goal","deleteGoal","getDatasources","updateDatasource","datasource","deleteDatasource","getSkillGroups","getLinkList","updateLink","link","deleteLink","getSkillJobs","updateSkillJob","job","skillStr","split","sk","trim","prop","skills","deleteSkillJob","getAdminUsers","users","updateAdminUser","user","rebootServer","reloadData","uploadData","parameters","endpoint","url","method","apiURL","requestOptions","headers","credentials","body","JSON","stringify","fetch","then","status","notifyServer504","ok","bodyText","Error","statusText","jsonToReturnValue","getFaultStringFromData","getParameters","requestType","timeout","mapSettings","display","document","ready","callMap","click","event","clearTimeout","startUpdatingMap","setupFilterListeners","trigger","children","currentTarget","hasClass","addClass","removeClass","change","val","refreshRate","updateMap","moment","setTimeout","reportTimeRange","customerData","getCustomerData","callData","Object","keys","zipCode","reduce","sum","missing","getZipsWithoutCustomers","concat","filterFn","minCustomers","keyFn","substring","rollupFn","callsByZip","nest","rollup","entries","customerCount","lastUpdated","isBefore","subtract","rawData","object","item","isZipWithoutCustomers","hasOwnProperty","time","start","tz","end","relativeSelector","isNaN"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;CC3DA;AACA;;AACe,MAAMA,OAAN,CAAc;AACzB;;;;;;AAMAC,SAAOC,IAAP,EAAaC,KAAb,EAAoB;AAChB;AACA,SAAKC,MAAL,GAAc,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAAd;AAEA,QAAIC,QAAQ,GAAZ;AAAA,QACIC,SAAS,GADb;AAGA,SAAKC,KAAL,GAAaC,GAAGC,GAAH,CAAOP,IAAP,EAAcQ,CAAD,IAAOA,EAAEC,GAAtB,CAAb;AACA,QAAIC,WAAWJ,GAAGK,GAAH,CAAOX,IAAP,EAAcQ,CAAD,IAAOA,EAAEI,KAAF,CAAQX,KAAR,CAApB,CAAf;AACA,QAAIY,WAAWP,GAAGQ,GAAH,CAAOd,IAAP,EAAcQ,CAAD,IAAOA,EAAEI,KAAF,CAAQX,KAAR,CAApB,CAAf;AAEA,SAAKc,CAAL,GAAST,GAAGU,WAAH,GACJC,MADI,CACGX,GAAGY,MAAH,CAAUlB,IAAV,EAAiBQ,CAAD,IAAOA,EAAEI,KAAF,CAAQX,KAAR,CAAvB,CADH,EAEJkB,UAFI,CAEO,CAAC,GAAD,EAAM,GAAN,CAFP,CAAT;AAIA,SAAKC,KAAL,GAAad,GAAGe,cAAH,GACRJ,MADQ,CACDX,GAAGgB,KAAH,CAAS,CAAT,EAAYT,QAAZ,EAAsBA,WAAW,CAAjC,CADC,EAERS,KAFQ,CAEF,KAAKpB,MAFH,CAAb;AAIA,SAAKqB,IAAL,GAAYjB,GAAGkB,OAAH,EAAZ;AAEA,SAAKC,GAAL,GAAWnB,GAAGoB,MAAH,CAAU,KAAV,EACNC,IADM,CACD,OADC,EACQxB,KADR,EAENwB,IAFM,CAED,QAFC,EAESvB,MAFT,CAAX,CArBgB,CAyBhB;;AACA,SAAKwB,QAAL,GAAgB,eAAhB;AACA,SAAKC,OAAL,CAAa,KAAKd,CAAlB,EAAqB,KAAKK,KAA1B;AAEA,WAAOd,GAAGwB,KAAH,GACFC,KADE,CACIzB,GAAG0B,IADP,EACa,gEAAAC,GAAU,QADvB,EAEFF,KAFE,CAEIzB,GAAG0B,IAFP,EAEa,gEAAAC,GAAU,WAFvB,EAGFC,KAHE,CAGI,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,KAAuB,KAAKC,OAAL,CAAaH,GAAb,EAAkBC,GAAlB,EAAuBC,OAAvB,EAAgCpC,KAAhC,CAH3B,CAAP;AAIH,GAxCwB,CA0CzB;AACA;;;AACAqC,UAAQH,GAAR,EAAaC,GAAb,EAAkBC,OAAlB,EAA2BpC,KAA3B,EAAkC;AAC9B,SAAKoC,OAAL,GAAeA,OAAf;AACA,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKG,QAAL,CAAcF,OAAd,EAAuBpC,KAAvB;AACA,SAAKuC,UAAL,CAAgBJ,GAAhB;AACH,GAjDwB,CAmDzB;;;AACA,QAAMK,MAAN,CAAazC,IAAb,EAAmBC,KAAnB,EAA0B;AACtB;AACA,QAAI,CAAC,KAAKwB,GAAV,EAAe,OAAO,KAAK1B,MAAL,CAAYC,IAAZ,EAAkBC,KAAlB,CAAP,CAFO,CAItB;;AACA,SAAKI,KAAL,GAAaC,GAAGC,GAAH,CAAOP,IAAP,EAAcQ,CAAD,IAAOA,EAAEC,GAAtB,CAAb,CALsB,CAOtB;;AACA,QAAIK,MAAMR,GAAGQ,GAAH,CAAOd,IAAP,EAAcQ,CAAD,IAAOA,EAAEI,KAAF,CAAQX,KAAR,CAApB,CAAV;AACA,SAAKc,CAAL,CAAOE,MAAP,CAAcX,GAAGY,MAAH,CAAUlB,IAAV,EAAiBQ,CAAD,IAAOA,EAAEI,KAAF,CAAQX,KAAR,CAAvB,CAAd;AACA,SAAKmB,KAAL,CAAWH,MAAX,CAAkBX,GAAGgB,KAAH,CAAS,CAAT,EAAYR,GAAZ,EAAiBA,MAAM,CAAvB,CAAlB,EAVsB,CAYtB;AACA;;AACA,SAAK4B,CAAL,CAAOC,MAAP,GAAgBC,IAAhB;AACA,SAAKf,OAAL,CAAa,KAAKd,CAAlB,EAAqB,KAAKK,KAA1B,EAfsB,CAiBtB;AACA;;AACA,SAAKK,GAAL,CAASoB,SAAT,CAAmB,gBAAnB,EAAqCF,MAArC,GAA8CC,IAA9C,GAnBsB,CAoBtB;;AACA,SAAKL,QAAL,CAAc,KAAKF,OAAnB,EAA4BpC,KAA5B;AACA,SAAKuC,UAAL,CAAgB,KAAKJ,GAArB;AACH,GA3EwB,CA6EzB;AACA;;;AACAG,WAASF,OAAT,EAAkBpC,KAAlB,EAAyB;AACrB,QAAI6C,kBAAkB,SAAtB,CADqB,CAErB;;AACA,QAAIC,SAASV,QAAQW,QAAR,CAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzC,UAAI,KAAKC,UAAL,CAAgBF,EAAEG,UAAF,CAAaC,GAA7B,EAAkCrD,KAAlC,CAAJ,EAA8C,OAAO,CAAC,CAAR;AAC9C,aAAO,CAAP;AACH,KAHY,CAAb;AAKA,SAAKwB,GAAL,CAAS8B,MAAT,CAAgB,GAAhB,EAAqB,MAArB,EACK5B,IADL,CACU,OADV,EACmB,MADnB,EAEGkB,SAFH,CAEa,MAFb,EAGG7C,IAHH,CAGQ+C,MAHR,EAIGS,KAJH,GAIWC,MAJX,CAIkB,MAJlB,EAKK9B,IALL,CAKU,GALV,EAKe,KAAKJ,IALpB,EAMKI,IANL,CAMU,MANV,EAMmBnB,CAAD,IAAO;AACjB,UAAIkD,MAAMlD,EAAE6C,UAAF,CAAaC,GAAvB;AACA,UAAI,KAAKF,UAAL,CAAgBM,GAAhB,EAAqBzD,KAArB,CAAJ,EAAiC,OAAO6C,eAAP;AACjC,aAAO,KAAK1B,KAAL,CAAW,KAAKf,KAAL,CAAWsD,GAAX,CAAeD,GAAf,EAAoB9C,KAApB,CAA0BX,KAA1B,CAAX,CAAP;AACH,KAVL,EAWK0B,IAXL,CAWU,QAXV,EAWqBnB,CAAD,IAAO;AACnB,UAAIkD,MAAMlD,EAAE6C,UAAF,CAAaC,GAAvB;AACA,UAAI,KAAKF,UAAL,CAAgBM,GAAhB,EAAqBzD,KAArB,CAAJ,EAAiC,OAAO6C,eAAP;AACjC,aAAO,0BAAP;AACH,KAfL,EAgBGW,MAhBH,CAgBU,OAhBV,EAiBKG,IAjBL,CAiBWpD,CAAD,IAAO;AACT,UAAIkD,MAAMlD,EAAE6C,UAAF,CAAaC,GAAvB;AACA,UAAIO,IAAI;AAAExD,eAAO,CAAT;AAAYyD,mBAAW,CAAvB;AAA0BC,0BAAkB;AAA5C,OAAR;;AACA,UAAI,KAAK1D,KAAL,CAAW2D,GAAX,CAAeN,GAAf,CAAJ,EAAyB;AACrBG,YAAI,KAAKxD,KAAL,CAAWsD,GAAX,CAAeD,GAAf,EAAoB9C,KAAxB;AACH;;AACD,aAAQ,SAAQ8C,GAAI,YAAWG,EAAExD,KAAM,gBAAewD,EAAEC,SAAU,sCAAqCxD,GAAG2D,MAAH,CAAU,KAAV,EAAiBJ,EAAEE,gBAAnB,CAAqC,EAA5I;AACH,KAxBL;AAyBH;AAED;;;;;;;;AAMAX,aAAWM,GAAX,EAAgBzD,KAAhB,EAAuB;AACnB,WAAQ,CAAC,KAAKI,KAAL,CAAW2D,GAAX,CAAeN,GAAf,CAAD,IAAwB,KAAKrD,KAAL,CAAWsD,GAAX,CAAeD,GAAf,EAAoB9C,KAApB,CAA0BX,KAA1B,KAAoC,CAApE;AACH,GA1HwB,CA4HzB;;;AACAuC,aAAWJ,GAAX,EAAgB;AACZ,SAAKX,GAAL,CAAS8B,MAAT,CAAgB,GAAhB,EAAqB,MAArB,EACK5B,IADL,CACU,OADV,EACmB,QADnB,EAEGkB,SAFH,CAEa,MAFb,EAGG7C,IAHH,CAGQoC,IAAIY,QAHZ,EAIGQ,KAJH,GAIWC,MAJX,CAIkB,MAJlB,EAKK9B,IALL,CAKU,GALV,EAKe,KAAKJ,IALpB;AAMH,GApIwB,CAsIzB;;;AACAM,UAAQd,CAAR,EAAWK,KAAX,EAAkB;AACd,SAAKsB,CAAL,GAAS,KAAKjB,GAAL,CAASgC,MAAT,CAAgB,GAAhB,EACJ9B,IADI,CACC,OADD,EACU,KADV,EAEJA,IAFI,CAEC,WAFD,EAEc,iBAFd,CAAT;AAGA,SAAKe,CAAL,CAAOG,SAAP,CAAiB,MAAjB,EACK7C,IADL,CACUoB,MAAME,KAAN,GAAcf,GAAd,CAAmBC,CAAD,IAAO;AAC3BA,UAAIY,MAAM8C,YAAN,CAAmB1D,CAAnB,CAAJ;AACA,UAAIA,EAAE,CAAF,KAAQ,IAAZ,EAAkBA,EAAE,CAAF,IAAOO,EAAEE,MAAF,GAAW,CAAX,CAAP;AAClB,UAAIT,EAAE,CAAF,KAAQ,IAAZ,EAAkBA,EAAE,CAAF,IAAOO,EAAEE,MAAF,GAAW,CAAX,CAAP;AAClB,aAAOT,CAAP;AACH,KALK,CADV,EAOKgD,KAPL,GAOaC,MAPb,CAOoB,MAPpB,EAQO9B,IARP,CAQY,QARZ,EAQsB,CARtB,EASOA,IATP,CASY,GATZ,EASkBnB,CAAD,IAAOO,EAAEP,EAAE,CAAF,CAAF,CATxB,EAUOmB,IAVP,CAUY,OAVZ,EAUsBnB,CAAD,IAAO;AAClB,aAAO2D,KAAKC,GAAL,CAASrD,EAAEP,EAAE,CAAF,CAAF,IAAUO,EAAEP,EAAE,CAAF,CAAF,CAAnB,CAAP;AACH,KAZP,EAaOmB,IAbP,CAaY,MAbZ,EAaqBnB,CAAD,IAAOY,MAAMZ,EAAE,CAAF,CAAN,CAb3B;AAeA,SAAKkC,CAAL,CAAOe,MAAP,CAAc,MAAd,EACK9B,IADL,CACU,OADV,EACmB,SADnB,EAEKA,IAFL,CAEU,GAFV,EAEeZ,EAAEO,KAAF,GAAU,CAAV,CAFf,EAGKK,IAHL,CAGU,GAHV,EAGe,CAAC,CAHhB,EAIKA,IAJL,CAIU,MAJV,EAIkB,MAJlB,EAKKA,IALL,CAKU,aALV,EAKyB,OALzB,EAMKA,IANL,CAMU,aANV,EAMyB,MANzB,EAOKiC,IAPL,CAOU,KAAKhC,QAPf;AAQE,SAAKc,CAAL,CAAO2B,IAAP,CAAY/D,GAAGgE,UAAH,CAAcvD,CAAd,EACTwD,QADS,CACA,EADA,EAETC,UAFS,CAEE,KAAKC,YAFP,EAGTC,UAHS,CAGEtD,MAAMH,MAAN,EAHF,CAAZ,EAICS,MAJD,CAIQ,SAJR,EAKGiB,MALH;AAML;;AAxKwB,C;;;;;;;;;;;ACH7B;AAAA;AACO,SAASgC,KAAT,CAAexC,GAAf,EAAoByC,UAAQ,EAA5B,EAAgC;AACnC;AACA,MAAIC,UAAU,IAAIC,IAAJ,EAAd;AACAD,UAAQE,OAAR,CAAgBD,KAAKE,GAAL,EAAhB;AACA,MAAIC,aAAaJ,QAAQK,YAAR,EAAjB;AACAC,UAAQC,GAAR,CAAYH,UAAZ,EALmC,CAOnC;;AACAI,IAAE,UAAF,EAAczB,IAAd,CAAoB,8BAA6BzB,IAAIyC,OAAQ,IAAGA,OAAQ,EAAxE;AACAO,UAAQC,GAAR,CAAY,YAAZ;AACAD,UAAQR,KAAR,CAAcxC,GAAd;AACH,C,CAED;;AACO,SAASmD,UAAT,CAAoBC,IAApB,EAA0B;AAC7B,MAAIC,QAAQD,KAAKE,QAAL,EAAZ;AACA,MAAIC,UAAUH,KAAKI,UAAL,EAAd;AACA,MAAIC,UAAUL,KAAKM,UAAL,EAAd;AACA,MAAIC,OAAON,SAAS,EAAT,GAAc,IAAd,GAAqB,IAAhC;AACAA,UAAQA,QAAQ,EAAhB;AACAA,UAAQA,QAAQA,KAAR,GAAgB,EAAxB,CAN6B,CAMD;;AAC5BE,YAAUA,UAAU,EAAV,GAAe,MAAIA,OAAnB,GAA6BA,OAAvC;AACAE,YAAUA,UAAU,EAAV,GAAe,MAAIA,OAAnB,GAA6BA,OAAvC;AACA,MAAIG,UAAUP,QAAQ,GAAR,GAAcE,OAAd,GAAwB,GAAxB,GAA8BE,OAA9B,GAAwC,GAAxC,GAA8CE,IAA5D;AACA,SAAOC,OAAP;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BD;CAGA;AACA;AACA;AACA;AACA;AAGA;;AACO,eAAeC,aAAf,CAA6BC,MAA7B,EAAqC;AACxC,QAAMC,WAAW,MAAMC,QAAQF,MAAR,EAAgB,YAAhB,CAAvB;AACA,SAAOC,SAASlE,IAAT,EAAP;AACH,C,CAED;;AACO,eAAeoE,UAAf,GAA4B;AAC/B,SAAOC,QAAQ,EAAR,EAAY,aAAZ,CAAP;AACH;AAED;;;;;;;AAMO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;AAC3C,SAAOH,QAAQE,MAAR,EAAiB,WAAUC,IAAK,EAAhC,CAAP;AACH;AAED;;;;;;;AAMO,eAAeC,kBAAf,CAAkCC,WAAW,EAA7C,EAAiD;AACpD,MAAInF,OAAOmF,WAAY,cAAaA,QAAS,EAAlC,GAAuC,YAAlD;AACA,QAAMR,WAAW,MAAMC,QAAQ,EAAR,EAAY5E,IAAZ,EAAkB,KAAlB,CAAvB;AACA,SAAO2E,SAASlE,IAAT,EAAP;AACH;AAED;;;;;;;AAMO,eAAe2E,eAAf,CAA+BD,QAA/B,EAAyCE,QAAzC,EAAmD;AACtD,QAAMV,WAAW,MAAMC,QACnB;AAAEO,cAAUA,QAAZ;AAAsBE,cAAUA;AAAhC,GADmB,EAElB,aAFkB,EAEJ,OAFI,CAAvB;AAIA,SAAOV,SAAStC,IAAT,EAAP;AACH;AAGD;;;;;AAIO,eAAeiD,YAAf,GAA8B;AACjC,MAAIX,WAAW,MAAMC,QAAQ,EAAR,EAAY,QAAZ,EAAsB,KAAtB,CAArB;AACA,SAAOD,SAASlE,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAe8E,WAAf,CAA2B7G,KAA3B,EAAkC;AACrC,MAAIiG,WAAW,MAAMC,QAAQ;AAAClG,WAAOA;AAAR,GAAR,EAAwB,QAAxB,EAAkC,KAAlC,CAArB;AACA,SAAOiG,SAAStC,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAemD,WAAf,CAA2B9G,KAA3B,EAAkC;AACrC,MAAIiG,WAAW,MAAMC,QAAQ;AAAClG,WAAOA;AAAR,GAAR,EAAwB,QAAxB,EAAkC,QAAlC,CAArB;AACA,SAAOiG,SAAStC,IAAT,EAAP;AACH;AAGD;;;;;AAIO,eAAeoD,WAAf,GAA6B;AAChC,MAAId,WAAW,MAAMC,QAAQ,EAAR,EAAY,OAAZ,EAAqB,MAArB,CAArB;AACA,SAAOD,SAASlE,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAeiF,sBAAf,CAAsCC,WAAtC,EAAmD;AACtD,MAAIhB,WAAW,MAAMC,QAAQ;AAACe,iBAAaA;AAAd,GAAR,EAAoC,OAApC,EAA6C,MAA7C,CAArB;AACA,SAAOhB,SAASlE,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAemF,UAAf,CAA0BC,IAA1B,EAAgC;AACnC,MAAIlB,WAAW,MAAMC,QAAQ;AAACiB,UAAMA;AAAP,GAAR,EAAsB,OAAtB,EAA+B,KAA/B,CAArB;AACA,SAAOlB,SAAStC,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAeyD,UAAf,CAA0BD,IAA1B,EAAgC;AACnC,MAAIlB,WAAW,MAAMC,QAAQ;AAACiB,UAAMA;AAAP,GAAR,EAAsB,OAAtB,EAA+B,QAA/B,CAArB;AACA,SAAOlB,SAAStC,IAAT,EAAP;AACH;AAED;;;;;AAIO,eAAe0D,cAAf,GAAgC;AACnC,MAAIpB,WAAW,MAAMC,QAAQ,EAAR,EAAY,aAAZ,EAA2B,KAA3B,CAArB;AACA,SAAOD,SAASlE,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAeuF,gBAAf,CAAgCC,UAAhC,EAA4C;AAC/C,MAAItB,WAAW,MAAMC,QAAQ;AAACqB,gBAAYA;AAAb,GAAR,EAAkC,aAAlC,EAAiD,KAAjD,CAArB;AACA,SAAOtB,SAAStC,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAe6D,gBAAf,CAAgCD,UAAhC,EAA4C;AAC/C,MAAItB,WAAW,MAAMC,QAAQ;AAACqB,gBAAYA;AAAb,GAAR,EAAkC,aAAlC,EAAiD,QAAjD,CAArB;AACA,SAAOtB,SAAStC,IAAT,EAAP;AACH;AAED;;;;;AAIO,eAAe8D,cAAf,GAAgC;AACnC,MAAIxB,WAAW,MAAMC,QAAQ,EAAR,EAAY,aAAZ,EAA2B,KAA3B,CAArB;AACA,SAAOD,SAASlE,IAAT,EAAP;AACH;AAED;;;;;AAIO,eAAe2F,WAAf,GAA6B;AAChC,MAAIzB,WAAW,MAAMC,QAAQ,EAAR,EAAY,OAAZ,EAAqB,MAArB,CAArB;AACA,SAAOD,SAASlE,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAe4F,UAAf,CAA0BC,IAA1B,EAAgC;AACnC,MAAI3B,WAAW,MAAMC,QAAQ;AAAC0B,UAAMA;AAAP,GAAR,EAAsB,OAAtB,EAA+B,KAA/B,CAArB;AACA,SAAO3B,SAAStC,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAekE,UAAf,CAA0BD,IAA1B,EAAgC;AACnC,MAAI3B,WAAW,MAAMC,QAAQ;AAAC0B,UAAMA;AAAP,GAAR,EAAsB,OAAtB,EAA+B,QAA/B,CAArB;AACA,SAAO3B,SAAStC,IAAT,EAAP;AACH;AAED;;;;;AAIO,eAAemE,YAAf,GAA8B;AACjC,MAAI7B,WAAW,MAAMC,QAAQ,EAAR,EAAY,OAAZ,EAAqB,KAArB,CAArB;AACA,SAAOD,SAASlE,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAegG,cAAf,CAA8BC,GAA9B,EAAmC;AACtC;AACA,QAAMhE,SAAUiE,QAAD,IAAcA,SAASC,KAAT,CAAe,GAAf,EAAoB5H,GAApB,CAAyB6H,EAAD,IAAQA,GAAGC,IAAH,EAAhC,CAA7B;;AAEA,GAAC,WAAD,EAAc,cAAd,EAA8B9H,GAA9B,CAAmC+H,IAAD,IAAU;AACxC,QAAIC,SAASN,IAAIjI,IAAJ,CAASsI,IAAT,CAAb;;AACA,QAAI,OAAOC,MAAP,IAAkB,QAAtB,EAAgC;AAC5BN,UAAIjI,IAAJ,CAASsI,IAAT,IAAiBrE,OAAOsE,MAAP,CAAjB;AACH;AACJ,GALD;AAOA,MAAIrC,WAAW,MAAMC,QAAQ;AAAC8B,SAAKA,GAAN;AAAWjI,UAAMiI,IAAIjI;AAArB,GAAR,EAAoC,OAApC,EAA6C,KAA7C,CAArB;AACA,SAAOkG,SAAStC,IAAT,EAAP;AACH;AACD;;;;;;AAKO,eAAe4E,cAAf,CAA8BP,GAA9B,EAAmC;AACtC,MAAI/B,WAAW,MAAMC,QAAQ;AAAC8B,SAAKA;AAAN,GAAR,EAAoB,OAApB,EAA6B,QAA7B,CAArB;AACA,SAAO/B,SAAStC,IAAT,EAAP;AACH;AAEM,eAAe6E,aAAf,GAA+B;AAClC,MAAIvC,WAAW,MAAMC,QAAQ,EAAR,EAAY,aAAZ,EAA2B,KAA3B,CAArB;AACA,MAAIuC,QAAQ,MAAMxC,SAASlE,IAAT,EAAlB;AACAmD,UAAQC,GAAR,CAAYsD,KAAZ;AACA,SAAOA,KAAP;AACH;AAEM,eAAeC,eAAf,CAA+BC,IAA/B,EAAqC;AACxC,MAAI1C,WAAW,MAAMC,QAAQ;AAACyC,UAAMA;AAAP,GAAR,EAAsB,aAAtB,EAAqC,OAArC,CAArB;AACA,SAAO1C,SAAStC,IAAT,EAAP;AACH;AAEM,eAAeiF,YAAf,GAA8B;AACjC,QAAM3C,WAAW,MAAMC,QAAQ,EAAR,EAAY,eAAZ,EAA6B,MAA7B,CAAvB;AACA,SAAOD,SAAStC,IAAT,EAAP;AACH;AACM,eAAekF,UAAf,CAA0BvC,MAA1B,EAAkC;AACrC,QAAML,WAAW,MAAMC,QAAQI,MAAR,EAAgB,aAAhB,EAA+B,MAA/B,CAAvB;AACA,SAAOL,SAAStC,IAAT,EAAP;AACH;AAED;;;;;;AAKO,eAAemF,UAAf,CAA0BxC,MAA1B,EAAkC;AACrC,MAAI;AACA,UAAML,WAAW,MAAMC,QAAQI,MAAR,EAAgB,aAAhB,EAA+B,MAA/B,CAAvB;AACA,WAAO,MAAML,SAAStC,IAAT,EAAb;AACH,GAHD,CAGE,OAAOzB,GAAP,EAAY;AACV,WAAOA,IAAIyC,OAAX;AACH;AACJ;AAED;;;;;;;AAMA,eAAeyB,OAAf,CAAuB2C,UAAvB,EAAmCC,QAAnC,EAA6C;AACzC,QAAM/C,WAAW,MAAMC,QAAQ6C,UAAR,EAAoBC,QAApB,CAAvB;AACA,SAAO,MAAM/C,SAASlE,IAAT,EAAb;AACH;AAKD;;;;;;;;;AAOA,eAAemE,OAAf,CAAuB6C,UAAvB,EAAmCE,MAAI,YAAvC,EAAqDC,SAAO,MAA5D,EAAoE;AAChE,QAAMC,SAAS,mEAAAnH,GAAUiH,GAAzB,CADgE,CAClC;;AAE9B,QAAMG,iBAAiB;AACnBF,YAAQA,MADW;AAEnBG,aAAS;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFU;AAMnBC,iBAAa;AANM,GAAvB;;AAQA,MAAIJ,UAAU,KAAd,EAAqB;AACjBE,mBAAeG,IAAf,GAAsBC,KAAKC,SAAL,CAAeV,UAAf,CAAtB;AACH;;AAED,SAAOW,MAAMP,MAAN,EAAcC,cAAd,EACFO,IADE,CACG,MAAO1D,QAAP,IAAoB;AACtB,QAAIA,SAAS2D,MAAT,IAAmB,GAAvB,EAA4BC,gBAAgBd,UAAhB,EAA4BE,GAA5B,EADN,CACwC;;AAC9D,QAAI,CAAChD,SAAS6D,EAAd,EAAkB;AACd,UAAIC,WAAW,MAAM9D,SAAStC,IAAT,EAArB;AACA,YAAM,IAAIqG,KAAJ,CAAW,yBAAwB/D,SAAS2D,MAAO,IAAG3D,SAASgE,UAAW,KAAIF,QAAS,EAAvF,CAAN;AACH;;AACD,WAAO9D,QAAP;AACH,GARE,CAAP;AASH;;AAED,eAAe4D,eAAf,GAAiC;AAC7B,SAAOH,MAAM,mEAAA1H,GAAU,YAAhB,CAAP;AACH,C,CAGD;;;AACA,SAASkI,iBAAT,CAA2BnI,IAA3B,EAAiCwE,IAAjC,EAAuC;AACnC,SAAOxE,KAAK,cAAL,EAAqB,UAArB,EAAiC,CAAjC,EAAoC,SAAOwE,IAAP,GAAY,UAAhD,EAA4D,CAA5D,EAA+D,QAA/D,EAAyE,CAAzE,CAAP;AACH,C,CAED;;;AACA,SAAS4D,sBAAT,CAAgCpK,IAAhC,EAAsC;AAClC,MAAI;AACA,WAAOA,KAAK,cAAL,EAAqB,UAArB,EAAiC,CAAjC,EAAoC,WAApC,EAAiD,CAAjD,EAAoD,aAApD,CAAP;AACH,GAFD,CAEE,OAAOmC,GAAP,EAAY;AACV,WAAO,EAAP;AACH;AACJ,C,CAED;AACA;;;AACO,SAASkI,aAAT,CAAuBC,WAAvB,EAAoC;AACvC,MAAI/D,SAAS,EAAb,CADuC,CAEvC;;AACA,MAAI+D,eAAe,sBAAnB,EAA2C;AACvC/D,aAAS;AACL,iBAAW,sBADN;AAEL,kBAAY,CAAE;AACV,wBAAgB,CACZ;AAAE,yBAAe;AAAjB,SADY,EAEZ;AAAE,6BAAmB;AAArB,SAFY,EAGZ;AAAE,2BAAiB;AAAnB,SAHY;AADN,OAAF;AAFP,KAAT;AAUH,GAdsC,CAevC;;;AACA,MAAI+D,eAAe,eAAnB,EAAoC;AAChC/D,aAAS;AACL,iBAAW,eADN;AAEL,kBAAY,CAAE;AACV,yBAAiB;AADP,OAAF;AAFP,KAAT;AAMH;;AAED,SAAOA,MAAP;AACH,C;;;;;;;;AC/VM,MAAMtE,UAAU,4BAAhB,C;;;;;;;;;;;;;;;;;;;;;;ACAP;AACA;CAGA;AACA;AAEA;;AACA,IAAIsI,UAAU,IAAd;AACA,MAAMC,cAAc;AAChBC,WAAS;AADO,CAApB;AAIApF,EAAEqF,QAAF,EAAYC,KAAZ,CAAkB,MAAM;AACpB,MAAIC,UAAU,IAAI,sDAAJ,EAAd,CADoB,CAGpB;;AACAvF,IAAE,0BAAF,EAA8BwF,KAA9B,CAAoC,MAAOC,KAAP,IAAiB;AACjD;AACA,QAAIP,WAAW,IAAf,EAAqB;AACjBQ,mBAAaR,OAAb;AACH,KAJgD,CAKjD;;;AACAS,qBAAiBJ,OAAjB,EAA0B,IAAE,EAA5B;AACH,GAPD,EAJoB,CAapB;;AACAK,yBAdoB,CAgBpB;;AACA5F,IAAE,0BAAF,EAA8B6F,OAA9B,CAAsC,OAAtC;AACH,CAlBD;;AAqBA,SAASD,oBAAT,GAAgC;AAC5B;AACA5F,IAAE,mBAAF,EAAuB8F,QAAvB,GAAkCN,KAAlC,CAAyCC,KAAD,IAAW;AAC/C;AACA,QAAIzF,EAAEyF,MAAMM,aAAR,EAAuBC,QAAvB,CAAgC,UAAhC,CAAJ,EAAiD;AAC7C;AACAhG,QAAE,6BAAF,EAAiCiG,QAAjC,CAA0C,SAA1C;AACAjG,QAAE,6BAAF,EAAiCkG,WAAjC,CAA6C,SAA7C,EAH6C,CAI7C;;AACAlG,QAAE,8BAAF,EAAkCiG,QAAlC,CAA2C,QAA3C;AACAjG,QAAE,8BAAF,EAAkCkG,WAAlC,CAA8C,QAA9C,EAN6C,CAOjD;AACC,KARD,MAQO;AACHlG,QAAE,6BAAF,EAAiCiG,QAAjC,CAA0C,SAA1C;AACAjG,QAAE,6BAAF,EAAiCkG,WAAjC,CAA6C,SAA7C;AACAlG,QAAE,8BAAF,EAAkCiG,QAAlC,CAA2C,QAA3C;AACAjG,QAAE,8BAAF,EAAkCkG,WAAlC,CAA8C,QAA9C;AACH;AACJ,GAhBD,EAF4B,CAoB5B;;AACAlG,IAAE,yBAAF,EAA6BmG,MAA7B,CAAoC,MAAM;AACtC,QAAInG,EAAE,yBAAF,EAA6BoG,GAA7B,MAAsC,gBAA1C,EAA4D;AACxDpG,QAAE,8BAAF,EAAkCkG,WAAlC,CAA8C,QAA9C;AACH,KAFD,MAEO;AACHlG,QAAE,8BAAF,EAAkCiG,QAAlC,CAA2C,QAA3C;AACH;AACJ,GAND,EArB4B,CA6B5B;;AACAjG,IAAE,sBAAF,EAA0B8F,QAA1B,GAAqCN,KAArC,CAA4CC,KAAD,IAAW;AAClD;AACA,QAAIzF,EAAEyF,MAAMM,aAAR,EAAuBC,QAAvB,CAAgC,OAAhC,CAAJ,EAA8C;AAC1Cb,kBAAYC,OAAZ,GAAsB,OAAtB;AACApF,QAAE,6BAAF,EAAiCiG,QAAjC,CAA0C,SAA1C;AACAjG,QAAE,gCAAF,EAAoCkG,WAApC,CAAgD,SAAhD,EAH0C,CAI1C;;AACAlG,QAAE,0CAAF,EAA8CiG,QAA9C,CAAuD,QAAvD,EAL0C,CAM9C;AACC,KAPD,MAOO;AACHd,kBAAYC,OAAZ,GAAsB,UAAtB;AACApF,QAAE,6BAAF,EAAiCkG,WAAjC,CAA6C,SAA7C;AACAlG,QAAE,gCAAF,EAAoCiG,QAApC,CAA6C,SAA7C;AACAjG,QAAE,0CAAF,EAA8CkG,WAA9C,CAA0D,QAA1D;AACH;AACJ,GAfD;AAgBH,C,CAED;;;AACA,eAAeP,gBAAf,CAAgCJ,OAAhC,EAAyCc,WAAzC,EAAsD;AAClD,MAAI;AACArG,MAAE,UAAF,EAAczB,IAAd,CAAoB,aAApB;AACA,UAAM+H,UAAUf,OAAV,CAAN;AACAvF,MAAE,UAAF,EAAczB,IAAd,CAAmB,kBAAkBgI,SAAS3H,MAAT,CAAgB,WAAhB,CAAlB,GAAiD,GAApE;AACH,GAJD,CAIE,OAAO9B,GAAP,EAAY;AACVwC,IAAA,+DAAAA,CAAMxC,GAAN;AACH;;AACDoI,YAAUsB,WAAW,MAAMb,iBAAiBJ,OAAjB,EAA0Bc,WAA1B,CAAjB,EACWA,cAAc,IADzB,CAAV;AAEH,C,CAED;;;AACA,eAAeC,SAAf,CAAyBf,OAAzB,EAAkC;AAC9B,QAAMrE,SAASuF,iBAAf;AACAvF,SAAOgC,MAAP,GAAgBlD,EAAE,gBAAF,EAAoBoG,GAApB,EAAhB,CAF8B,CAI9B;;AACA,MAAIM,eAAe,MAAMC,iBAAzB;AACA,QAAMC,WAAW,MAAM,+DAAqB1F,MAArB,EAA6B,MAA7B,CAAvB,CAN8B,CAQ9B;;AACA,MAAIvG,OAAOkM,OAAOC,IAAP,CAAYJ,YAAZ,EACNxL,GADM,CACDmD,GAAD,KAAU;AACX0I,aAAS1I,GADE;AAEXrD,WAAO4L,SACEhG,MADF,CACUzF,CAAD,IAAOA,EAAE4L,OAAF,IAAa1I,GAD7B,EAEE2I,MAFF,CAES,CAACC,GAAD,EAAM9L,CAAN,KAAY8L,MAAM9L,EAAEH,KAF7B,EAEoC,CAFpC,CAFI;AAKXyD,eAAWiI,aAAarI,GAAb;AALA,GAAV,CADE,CAAX,CAT8B,CAkB9B;;AACA,MAAI6I,UAAUC,wBAAwBP,QAAxB,EAAkCF,YAAlC,CAAd;AACA/L,SAAOA,KAAKyM,MAAL,CAAYF,OAAZ,CAAP,CApB8B,CAsB9B;;AACA,MAAItM,KAAJ;;AACA,MAAIuK,YAAYC,OAAZ,IAAuB,OAA3B,EAAoC;AAChCxK,YAAQ,OAAR;AACA2K,YAAQhJ,QAAR,GAAmB,eAAnB;AACAgJ,YAAQnG,YAAR,GAAuBnE,GAAG2D,MAAH,CAAU,GAAV,CAAvB;AACH,GAJD,MAIO,IAAIuG,YAAYC,OAAZ,IAAuB,UAA3B,EAAuC;AAC1CxK,YAAQ,kBAAR;AACA2K,YAAQhJ,QAAR,GAAmB,wCAAnB;AACAgJ,YAAQnG,YAAR,GAAuBnE,GAAG2D,MAAH,CAAU,KAAV,CAAvB;AACH,GAhC6B,CAkC9B;AACA;;;AACA,MAAIyI,QAAJ;;AACA,MAAIlC,YAAYC,OAAZ,IAAuB,UAA3B,EAAuC;AACnC,QAAIkC,eAAetH,EAAE,oBAAF,EAAwBoG,GAAxB,KAAgC,CAAnD;;AACAiB,eAAYlM,CAAD,IAAOA,EAAEI,KAAF,CAAQkD,SAAR,IAAqB6I,YAAvC;AACH,GAHD,MAGO;AACHD,eAAYlM,CAAD,IAAO,IAAlB;AACH,GA1C6B,CA4C9B;;;AACA,QAAMoM,QAASpM,CAAD,IAAOA,EAAE4L,OAAF,CAAUS,SAAV,CAAoB,CAApB,EAAuB,CAAvB,CAArB;;AACA,QAAMC,WAAYtM,CAAD,IAAO;AACpB,QAAIH,QAAQC,GAAGgM,GAAH,CAAO9L,CAAP,EAAWO,CAAD,IAAOA,EAAEV,KAAnB,CAAZ;AACA,QAAIyD,YAAYxD,GAAGgM,GAAH,CAAO9L,CAAP,EAAWO,CAAD,IAAOA,EAAE+C,SAAnB,CAAhB;AACA,QAAIC,gBAAJ;AACA,QAAID,aAAa,CAAjB,EAAoBC,mBAAmB,CAAnB,CAApB,KACKA,mBAAmB1D,QAAQyD,SAA3B;AACL,WAAO;AACH,eAASzD,KADN;AAEH,mBAAayD,SAFV;AAGH,0BAAoBC;AAHjB,KAAP;AAKH,GAXD,CA9C8B,CA2D9B;;;AACA,MAAIgJ,aAAazM,GAAG0M,IAAH,GACZvM,GADY,CACRmM,KADQ,EAEZK,MAFY,CAELH,QAFK,EAGZI,OAHY,CAGJlN,IAHI,EAIZiG,MAJY,CAILyG,QAJK,EAKZzG,MALY,CAKJzF,CAAD,IAAOA,EAAEC,GAAF,IAAS,EALX,CAAjB,CA5D8B,CAiEG;;AAEjCmK,UAAQnI,MAAR,CAAesK,UAAf,EAA2B9M,KAA3B,EAAkC2M,KAAlC,EAAyCE,QAAzC;AAEA3H,UAAQC,GAAR,CAAY,6BAA6BwG,SAAS3H,MAAT,CAAgB,WAAhB,CAAzC;AACH,C,CAED;;;AACA,MAAMkJ,gBAAgB;AAClBnN,QAAM,EADY;AAElB;AACAoN,eAAaxB,OAAO,YAAP;AAHK,CAAtB;AAKA;;;;;AAIA,eAAeI,eAAf,GAAiC;AAC7B;AACA,MAAImB,cAAcC,WAAd,CAA0BC,QAA1B,CAAmCzB,SAAS0B,QAAT,CAAkB,CAAlB,EAAqB,OAArB,CAAnC,CAAJ,EAAuE;AACnE,QAAIC,UAAU,MAAM,+DAAqB,EAArB,EAAyB,WAAzB,CAApB,CADmE,CAGnE;AACA;;AACAJ,kBAAcnN,IAAd,GAAqBuN,QAAQlB,MAAR,CAAe,CAACmB,MAAD,EAASC,IAAT,KAAkB;AAClDD,aAAOC,KAAKrB,OAAZ,IAAuBqB,KAAKN,aAA5B;AACA,aAAOK,MAAP;AACH,KAHoB,EAGlB,EAHkB,CAArB;AAKAL,kBAAcC,WAAd,GAA4BxB,QAA5B;AACH;;AACD,SAAOuB,cAAcnN,IAArB;AACH;;AAGD,SAASwM,uBAAT,CAAiCP,QAAjC,EAA2CF,YAA3C,EAAyD;AACrD,SAAOE,SACFhG,MADE,CACMzF,CAAD,IAAOkN,sBAAsBlN,EAAE4L,OAAxB,EAAiCL,YAAjC,CADZ,EAEFxL,GAFE,CAEGC,CAAD,KAAQ;AACT4L,aAAS5L,EAAE4L,OADF;AAET/L,WAAOG,EAAEH,KAFA;AAGTyD,eAAW;AAHF,GAAR,CAFF,CAAP;AAOH;;AAED,SAAS4J,qBAAT,CAA+BhK,GAA/B,EAAoCqI,YAApC,EAAkD;AAC9C,SAAQrI,OAAO,EAAP,IAAa,CAACqI,aAAa4B,cAAb,CAA4BjK,GAA5B,CAAtB;AACH,C,CAED;AACA;;;AACA,SAASoI,eAAT,GAA2B;AACvB,QAAM8B,OAAO,EAAb,CADuB,CAEvB;;AACA,MAAIvI,EAAE,6BAAF,EAAiCgG,QAAjC,CAA0C,SAA1C,CAAJ,EAA0D;AACtDuC,SAAKC,KAAL,GAAajC,OAAOvG,EAAE,oBAAF,EAAwBoG,GAAxB,EAAP,EACIqC,EADJ,CACO,qBADP,EAEI7J,MAFJ,CAEW,uBAFX,CAAb;AAGA2J,SAAKG,GAAL,GAAanC,OAAOvG,EAAE,kBAAF,EAAwBoG,GAAxB,EAAP,EACIqC,EADJ,CACO,qBADP,EAEI7J,MAFJ,CAEW,uBAFX,CAAb,CAJsD,CAO1D;AACC,GARD,MAQO;AACH,UAAM+J,mBAAmB3I,EAAE,yBAAF,EAA6BoG,GAA7B,EAAzB;;AACA,QAAIuC,oBAAoB,OAAxB,EAAiC;AAC7BJ,WAAKC,KAAL,GAAajC,SAAS3H,MAAT,CAAgB,YAAhB,IAAgC,WAA7C;AACA2J,WAAKG,GAAL,GAAanC,SAAS3H,MAAT,CAAgB,YAAhB,IAAgC,WAA7C,CAF6B,CAGjC;AACA;AACC,KALD,MAKO,IAAI+J,oBAAoB,gBAAxB,EAA0C;AAC7C,YAAMtI,UAAUL,EAAE,0BAAF,EAA8BoG,GAA9B,EAAhB;AACA,UAAIwC,MAAMvI,OAAN,CAAJ,EAAoB,MAAM,IAAIuE,KAAJ,CAAW,yBAAwBvE,OAAQ,mBAA3C,CAAN,CAFyB,CAG7C;;AACA,UAAImI,QAAQjC,SAAS0B,QAAT,CAAkB5H,OAAlB,EAA2B,GAA3B,EAAgCoI,EAAhC,CAAmC,qBAAnC,CAAZ,CAJ6C,CAK7C;;AACAD,YAAMP,QAAN,CAAeO,MAAMnI,OAAN,KAAkB,EAAjC,EAAqC,SAArC;AACAmI,YAAMjI,OAAN,CAAc,CAAd;AACAgI,WAAKC,KAAL,GAAaA,MAAM5J,MAAN,CAAa,uBAAb,CAAb;AACAkB,cAAQC,GAAR,CAAYwI,KAAKC,KAAjB;AACAD,WAAKG,GAAL,GAAanC,SAAS3H,MAAT,CAAgB,YAAhB,IAAgC,WAA7C;AACH,KAXM,MAWA;AACH,YAAM,IAAIgG,KAAJ,CAAU,qCAAqC+D,gBAArC,GACA,yBADV,CAAN;AAEH;AACJ;;AACD,SAAOJ,IAAP;AACH,C","file":"map.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 98);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6ed0f1c007097449fa4f","import { API_URL } from './local_settings';\r\n\r\n// Map of U.S. with ZIP3 areas colored by calls offered.\r\n// Offers methods to create/draw the map and update when new data is received.\r\nexport default class CallMap {\r\n    /**\r\n     * Create and draw map on initial run\r\n     * @param  {Object}  data d3.nest data object with zipcode as key and fields as values\r\n     * @param  {String}  field to map (calls or callsPerCustomer)\r\n     * @return {Promise} resolves when complete\r\n     */\r\n    create(data, field) {\r\n        // Taken from d3.schemeBlues[9]\r\n        this.colors = [\"#f7fbff\", \"#deebf7\", \"#c6dbef\", \"#9ecae1\", \"#6baed6\", \"#4292c6\", \"#2171b5\", \"#08519c\", \"#08306b\"];\r\n\r\n        let width = 960,\r\n            height = 500;\r\n\r\n        this.calls = d3.map(data, (d) => d.key);\r\n        let minValue = d3.min(data, (d) => d.value[field]);\r\n        let maxValue = d3.max(data, (d) => d.value[field]);\r\n\r\n        this.x = d3.scaleLinear()\r\n            .domain(d3.extent(data, (d) => d.value[field]))\r\n            .rangeRound([600, 860]);\r\n\r\n        this.color = d3.scaleThreshold()\r\n            .domain(d3.range(0, maxValue, maxValue / 9))\r\n            .range(this.colors);\r\n\r\n        this.path = d3.geoPath();\r\n\r\n        this.svg = d3.select('svg')\r\n            .attr('width', width)\r\n            .attr('height', height);\r\n\r\n        // Key / legend\r\n        this.keyTitle = 'Calls offered';\r\n        this.drawKey(this.x, this.color);\r\n\r\n        return d3.queue()\r\n            .defer(d3.json, API_URL + 'states')\r\n            .defer(d3.json, API_URL + 'zip3-data')\r\n            .await((err, usa, zipData) => this.onReady(err, usa, zipData, field));\r\n    }\r\n\r\n    // Assign initial variables when map is first created and topographic\r\n    // data is first loaded\r\n    onReady(err, usa, zipData, field) {\r\n        this.zipData = zipData;\r\n        this.usa = usa;\r\n        this.drawZips(zipData, field);\r\n        this.drawStates(usa);\r\n    }\r\n\r\n    // Update map with new data\r\n    async update(data, field) {\r\n        // Check if this chart already exists. If not, create it.\r\n        if (!this.svg) return this.create(data, field);\r\n\r\n        // match calls to keys (zip codes)\r\n        this.calls = d3.map(data, (d) => d.key);\r\n\r\n        // update domain and range\r\n        let max = d3.max(data, (d) => d.value[field]);\r\n        this.x.domain(d3.extent(data, (d) => d.value[field]));\r\n        this.color.domain(d3.range(0, max, max / 9));\r\n\r\n        // Key / legend\r\n        // remove then redraw the color key\r\n        this.g.remove().exit();\r\n        this.drawKey(this.x, this.color);\r\n\r\n        // data - paint the state lines and zip codes\r\n        // clear old states and zips\r\n        this.svg.selectAll('.zips, .states').remove().exit();\r\n        // then rebuild them\r\n        this.drawZips(this.zipData, field);\r\n        this.drawStates(this.usa);\r\n    }\r\n\r\n    // Draw ZIP3 areas, colored by number of calls\r\n    // ${zipData} is GeoJSON describing the topography\r\n    drawZips(zipData, field) {\r\n        let backgroundColor = '#feffff';\r\n        // Sort so that areas with call data are drawn last and end up on top\r\n        let sorted = zipData.features.sort((a, b) => {\r\n            if (this.isEmptyZip(a.properties.ZIP, field)) return -1;\r\n            return 1;\r\n        });\r\n\r\n        this.svg.insert('g', '.key')\r\n            .attr('class', 'zips')\r\n          .selectAll('path')\r\n          .data(sorted)\r\n          .enter().append('path')\r\n            .attr('d', this.path)\r\n            .attr('fill', (d) => {\r\n                let zip = d.properties.ZIP;\r\n                if (this.isEmptyZip(zip, field)) return backgroundColor;\r\n                return this.color(this.calls.get(zip).value[field]);\r\n            })\r\n            .attr('stroke', (d) => {\r\n                let zip = d.properties.ZIP;\r\n                if (this.isEmptyZip(zip, field)) return backgroundColor;\r\n                return 'hsla(208, 30%, 60%, 0.5)';\r\n            })\r\n          .append('title')\r\n            .text((d) => {\r\n                let zip = d.properties.ZIP;\r\n                let o = { calls: 0, customers: 0, callsPerCustomer: 0 };\r\n                if (this.calls.has(zip)) {\r\n                    o = this.calls.get(zip).value;\r\n                }\r\n                return `ZIP3: ${zip}\\nCalls: ${o.calls}\\nCustomers: ${o.customers}\\nCalls divided by customer count: ${d3.format(\".2%\")(o.callsPerCustomer)}`;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns true if the zip code is not in the data or has a value equal to 0\r\n     * @param  {String}  zip   zip code\r\n     * @param  {String}  field to check in this.calls.value\r\n     * @return {Boolean}\r\n     */\r\n    isEmptyZip(zip, field) {\r\n        return (!this.calls.has(zip) || this.calls.get(zip).value[field] == 0);\r\n    }\r\n\r\n    // Draw the state outlines\r\n    drawStates(usa) {\r\n        this.svg.insert('g', '.key')\r\n            .attr('class', 'states')\r\n          .selectAll('path')\r\n          .data(usa.features)\r\n          .enter().append('path')\r\n            .attr('d', this.path);\r\n    }\r\n\r\n    // Draw the key/legend\r\n    drawKey(x, color) {\r\n        this.g = this.svg.append('g')\r\n            .attr('class', 'key')\r\n            .attr('transform', 'translate(0,40)');\r\n        this.g.selectAll('rect')\r\n            .data(color.range().map((d) => {\r\n                d = color.invertExtent(d);\r\n                if (d[0] == null) d[0] = x.domain()[0];\r\n                if (d[1] == null) d[1] = x.domain()[1];\r\n                return d;\r\n            }))\r\n            .enter().append('rect')\r\n              .attr('height', 8)\r\n              .attr('x', (d) => x(d[0]))\r\n              .attr('width', (d) => {\r\n                  return Math.abs(x(d[1]) - x(d[0]));\r\n              } )\r\n              .attr('fill', (d) => color(d[0]));\r\n\r\n        this.g.append('text')\r\n            .attr('class', 'caption')\r\n            .attr('x', x.range()[0])\r\n            .attr('y', -6)\r\n            .attr('fill', '#444')\r\n            .attr('text-anchor', 'start')\r\n            .attr('font-weight', 'bold')\r\n            .text(this.keyTitle);\r\n          this.g.call(d3.axisBottom(x)\r\n            .tickSize(13)\r\n            .tickFormat(this.formatLegend)\r\n            .tickValues(color.domain()))\r\n          .select('.domain')\r\n            .remove();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/maps.js","\r\n// Send out an error alert in console and on the page.\r\nexport function error(err, message='') {\r\n    // timestamp\r\n    let newDate = new Date();\r\n    newDate.setTime(Date.now());\r\n    let dateString = newDate.toTimeString();\r\n    console.log(dateString);\r\n\r\n    // Post to page\r\n    $('#message').text(`Whoops! An error occurred. ${err.message} ${message}`);\r\n    console.log('Error log:');\r\n    console.error(err);\r\n}\r\n\r\n// Nicely formatted time\r\nexport function formatAMPM(date) {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    seconds = seconds < 10 ? '0'+seconds : seconds;\r\n    let strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\r\n    return strTime;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/utility.js","import { error } from './utility.js';\r\nimport { API_URL } from './local_settings.js';\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Functions to retrieve and extract data from Five9.\r\n// These functions interact with our server, which houses data\r\n// and formats data originating in Five9 reports.\r\n////////////////////////////////////////////////////////////////\r\n\r\n\r\n// Get agent/ACD statistics\r\nexport async function getStatistics(filter) {\r\n    const response = await request(filter, 'statistics');\r\n    return response.json();\r\n}\r\n\r\n// Get real-time stats\r\nexport async function queueStats() {\r\n    return getData({}, 'queue-stats');\r\n}\r\n\r\n/**\r\n * Get CSV string of report results from Five9\r\n * @param  {Object} params\r\n * @param  {String} type   endpoint: `maps` or `service-level`\r\n * @return {Promise -> Object}        JSON data\r\n */\r\nexport function getReportResults(params, type) {\r\n    return getData(params, `reports/${type}`);\r\n}\r\n\r\n/**\r\n * Return user information from username.\r\n * @param  {String} username if blank, will return currently logged-in user's\r\n *                           data\r\n * @return {Promise -> Object} User's object\r\n */\r\nexport async function getUserInformation(username = '') {\r\n    let path = username ? `users/data/${username}` : `users/data`;\r\n    const response = await request({}, path, 'GET');\r\n    return response.json();\r\n}\r\n\r\n/**\r\n * Set a user's theme preferences.\r\n * @param  {String} username\r\n * @param  {Object} newTheme with theme fields\r\n * @return {Promise -> String} response message\r\n */\r\nexport async function updateUserTheme(username, newTheme) {\r\n    const response = await request(\r\n        { username: username, newTheme: newTheme },\r\n        `users/theme`, 'PATCH'\r\n    );\r\n    return response.text();\r\n}\r\n\r\n\r\n/**\r\n * List of available fields for widgets.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getFieldList() {\r\n    let response = await request({}, 'fields', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a field on server.\r\n * @param  {Object}  field new object\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function updateField(field) {\r\n    let response = await request({field: field}, 'fields', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a field from server.\r\n * @param  {Object}  field object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteField(field) {\r\n    let response = await request({field: field}, 'fields', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n\r\n/**\r\n * List of all goals.\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalList() {\r\n    let response = await request({}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * List of goals that apply to the given agent group(s).\r\n * @param  {Array of Strings}   agentGroups\r\n * @return {Promise} resolves to array of goal objects\r\n */\r\nexport async function getGoalsForAgentGroups(agentGroups) {\r\n    let response = await request({agentGroups: agentGroups}, 'goals', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a goal on server.\r\n * @param  {Object}  goal new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a goal from server.\r\n * @param  {Object}  goal object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteGoal(goal) {\r\n    let response = await request({goal: goal}, 'goals', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * List of all datasources.\r\n * @return {Promise} resolves to array of datasource objects\r\n */\r\nexport async function getDatasources() {\r\n    let response = await request({}, 'datasources', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a datasource on server.\r\n * @param  {Object}  datasource new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a datasource from server.\r\n * @param  {Object}  datasource object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteDatasource(datasource) {\r\n    let response = await request({datasource: datasource}, 'datasources', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * Get skill groups with associated names, agentGroups and skills\r\n * @return {Promise -> [Object]} array of objects from SkillGroup table\r\n */\r\nexport async function getSkillGroups() {\r\n    let response = await request({}, 'skill-group', 'GET');\r\n    return response.json();\r\n}\r\n\r\n/**\r\n * List of all links.\r\n * @return {Promise} resolves to array of link objects\r\n */\r\nexport async function getLinkList() {\r\n    let response = await request({}, 'links', 'POST');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a link on server.\r\n * @param  {Object}  link new object\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function updateLink(link) {\r\n    let response = await request({link: link}, 'links', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete a link from server.\r\n * @param  {Object}  link object to remove\r\n * @return {Promise} resolves to response message\r\n */\r\nexport async function deleteLink(link) {\r\n    let response = await request({link: link}, 'links', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * List of available scheduled skilling jobs.\r\n * @return {Promise} resolves to array of field objects\r\n */\r\nexport async function getSkillJobs() {\r\n    let response = await request({}, 'skill', 'GET');\r\n    return response.json();\r\n}\r\n/**\r\n * Updates a scheduled skilling job on server.\r\n * @param  {Object}  job new object\r\n * @return {Promise} resolves to server's response\r\n */\r\nexport async function updateSkillJob(job) {\r\n    // format data\r\n    const format = (skillStr) => skillStr.split(',').map((sk) => sk.trim());\r\n\r\n    ['addSkills', 'removeSkills'].map((prop) => {\r\n        let skills = job.data[prop];\r\n        if (typeof(skills) == 'string') {\r\n            job.data[prop] = format(skills);\r\n        }\r\n    });\r\n\r\n    let response = await request({job: job, data: job.data}, 'skill', 'PUT');\r\n    return response.text();\r\n}\r\n/**\r\n * Delete the given skilling job object.\r\n * @param  {Object} job\r\n * @return {Promise} resolves to response from server\r\n */\r\nexport async function deleteSkillJob(job) {\r\n    let response = await request({job: job}, 'skill', 'DELETE');\r\n    return response.text();\r\n}\r\n\r\nexport async function getAdminUsers() {\r\n    let response = await request({}, 'users/admin', 'GET');\r\n    let users = await response.json();\r\n    console.log(users)\r\n    return users;\r\n}\r\n\r\nexport async function updateAdminUser(user) {\r\n    let response = await request({user: user}, 'users/admin', 'PATCH');\r\n    return response.text();\r\n}\r\n\r\nexport async function rebootServer() {\r\n    const response = await request({}, 'reboot-server', 'POST');\r\n    return response.text();\r\n}\r\nexport async function reloadData(params) {\r\n    const response = await request(params, 'reload-data', 'POST');\r\n    return response.text();\r\n}\r\n\r\n/**\r\n * [uploadData description]\r\n * @param  {Object} params including fields datasourceName and csv\r\n * @return {Promise}       resolves to string (server response message)\r\n */\r\nexport async function uploadData(params) {\r\n    try {\r\n        const response = await request(params, 'upload-data', 'POST');\r\n        return await response.text();\r\n    } catch (err) {\r\n        return err.message;\r\n    }\r\n}\r\n\r\n/**\r\n *  Helper function that pulls credentials from DOM, then makes request to server.\r\n * @param  {Object} parameters POSTed to server\r\n * @param  {String} endpoint   at server's API\r\n * @return {Object}            JSON data\r\n */\r\nasync function getData(parameters, endpoint) {\r\n    const response = await request(parameters, endpoint);\r\n    return await response.json();\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Make a request to server with given parameters.\r\n * @param  {Object} parameters passed as body of request\r\n * @param  {String} [url='statistics'] endpoint on server\r\n * @param  {String} [method='POST'] HTTP action\r\n * @return {Promise} response from server\r\n */\r\nasync function request(parameters, url='statistics', method='POST') {\r\n    const apiURL = API_URL + url; // defined in api_url.js\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    }\r\n    if (method != 'GET') {\r\n        requestOptions.body = JSON.stringify(parameters);\r\n    }\r\n\r\n    return fetch(apiURL, requestOptions)\r\n        .then(async (response) => {\r\n            if (response.status == 504) notifyServer504(parameters, url); // debugging\r\n            if (!response.ok) {\r\n                let bodyText = await response.text();\r\n                throw new Error(`Server responded with ${response.status} ${response.statusText}: ${bodyText}`);\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nasync function notifyServer504() {\r\n    return fetch(API_URL + 'notify-504');\r\n}\r\n\r\n\r\n// Gets the actual returned value/data out of JSON from the server.\r\nfunction jsonToReturnValue(json, type) {\r\n    return json['env:Envelope']['env:Body'][0]['ns2:'+type+'Response'][0]['return'][0];\r\n}\r\n\r\n// takes JSON from server and returns text within 'faultstring' tag (if existant)\r\nfunction getFaultStringFromData(data) {\r\n    try {\r\n        return data['env:Envelope']['env:Body'][0]['env:Fault'][0]['faultstring'];\r\n    } catch (err) {\r\n        return '';\r\n    }\r\n}\r\n\r\n// Given a requestType, returns JSON to submit to server in POST request.\r\n// requestType should match Five9 API command.\r\nexport function getParameters(requestType) {\r\n    let params = {};\r\n    // Initiate session\r\n    if (requestType == 'setSessionParameters') {\r\n        params = {\r\n            'service': 'setSessionParameters',\r\n            'settings': [ {\r\n                'viewSettings': [\r\n                    { 'idleTimeOut': 1800 },\r\n                    { 'statisticsRange': 'CurrentDay' },\r\n                    { 'rollingPeriod': 'Minutes10' }\r\n                ]\r\n            } ]\r\n        }\r\n    }\r\n    // Get real-time call stats\r\n    if (requestType == 'getStatistics') {\r\n        params = {\r\n            'service': 'getStatistics',\r\n            'settings': [ {\r\n                'statisticType': 'ACDStatus'\r\n            } ]\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/api.js","export const API_URL = 'http://localhost:3000/api/';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/local_settings.js","import { error } from './utility';\r\nimport * as api from './api';\r\nimport CallMap from './maps';\r\n\r\n// General functions to initiate the call map dashboard.\r\n// Uses the CallMap class defined in maps.js to draw the D3 map.\r\n\r\n// timeout to pause event loop when needed\r\nlet timeout = null;\r\nconst mapSettings = {\r\n    display: 'total'\r\n};\r\n\r\n$(document).ready(() => {\r\n    let callMap = new CallMap();\r\n\r\n    // listen for update button presses\r\n    $('.filters-wrapper .update').click(async (event) => {\r\n        // stop any current event loops running\r\n        if (timeout != null) {\r\n            clearTimeout(timeout);\r\n        }\r\n        // Update map every 4 minutes\r\n        startUpdatingMap(callMap, 4*60);\r\n    });\r\n\r\n    // Listen for changes to the filter settings\r\n    setupFilterListeners();\r\n\r\n    // Start updating on page load\r\n    $('.filters-wrapper .update').trigger('click');\r\n});\r\n\r\n\r\nfunction setupFilterListeners() {\r\n    // handle toggle for relative / absolute date filters\r\n    $('.date-type-toggle').children().click((event) => {\r\n        // Relative button was chosen\r\n        if ($(event.currentTarget).hasClass('relative')) {\r\n            // Update toggle buttons to show current selection\r\n            $('.date-type-toggle .relative').addClass('checked');\r\n            $('.date-type-toggle .absolute').removeClass('checked');\r\n            // Display the appropriate date selection\r\n            $('.date-filter-inputs.absolute').addClass('hidden');\r\n            $('.date-filter-inputs.relative').removeClass('hidden');\r\n        // Absolute button was clicked\r\n        } else {\r\n            $('.date-type-toggle .absolute').addClass('checked');\r\n            $('.date-type-toggle .relative').removeClass('checked');\r\n            $('.date-filter-inputs.relative').addClass('hidden');\r\n            $('.date-filter-inputs.absolute').removeClass('hidden');\r\n        }\r\n    })\r\n\r\n    // Handle selection of Today vs Last X Minutes for relative filters\r\n    $('.relative-date-selector').change(() => {\r\n        if ($('.relative-date-selector').val() == 'last-x-minutes') {\r\n            $('.relative-parameters-wrapper').removeClass('hidden');\r\n        } else {\r\n            $('.relative-parameters-wrapper').addClass('hidden');\r\n        }\r\n    });\r\n\r\n    // Alternate between mapping total calls or calls per customer count\r\n    $('.call-display-toggle').children().click((event) => {\r\n        // Was Total button clicked?\r\n        if ($(event.currentTarget).hasClass('total')) {\r\n            mapSettings.display = 'total';\r\n            $('.call-display-toggle .total').addClass('checked');\r\n            $('.call-display-toggle .relative').removeClass('checked');\r\n            // show minimum customer filter\r\n            $('.call-display .minimum-customers-wrapper').addClass('hidden');\r\n        // Relative display was chosen\r\n        } else {\r\n            mapSettings.display = 'relative';\r\n            $('.call-display-toggle .total').removeClass('checked');\r\n            $('.call-display-toggle .relative').addClass('checked');\r\n            $('.call-display .minimum-customers-wrapper').removeClass('hidden');\r\n        }\r\n    });\r\n}\r\n\r\n// Begins a loop of updating the map data every ${refreshRate} seconds\r\nasync function startUpdatingMap(callMap, refreshRate) {\r\n    try {\r\n        $('.message').text(`Updating...`);\r\n        await updateMap(callMap);\r\n        $('.message').text('Last updated ' + moment().format('h:mm:ss A') + '.');\r\n    } catch (err) {\r\n        error(err);\r\n    }\r\n    timeout = setTimeout(() => startUpdatingMap(callMap, refreshRate),\r\n                         refreshRate * 1000);\r\n}\r\n\r\n// Update callMap (d3 map object) based on parameters in page\r\nasync function updateMap(callMap) {\r\n    const params = reportTimeRange();\r\n    params.skills = $('.skills.filter').val();\r\n\r\n    // get all the datas\r\n    let customerData = await getCustomerData();\r\n    const callData = await api.getReportResults(params, 'maps');\r\n\r\n    // build data object off of customerData zip codes\r\n    let data = Object.keys(customerData)\r\n        .map((zip) => ({\r\n            zipCode: zip,\r\n            calls: callData\r\n                    .filter((d) => d.zipCode == zip)\r\n                    .reduce((sum, d) => sum + d.calls, 0),\r\n            customers: customerData[zip]\r\n        }));\r\n\r\n    // if any zips with calls are missing from customerData, add them here\r\n    let missing = getZipsWithoutCustomers(callData, customerData);\r\n    data = data.concat(missing);\r\n\r\n    // Determine the field being mapped -- total calls or per customer\r\n    let field;\r\n    if (mapSettings.display == 'total') {\r\n        field = 'calls';\r\n        callMap.keyTitle = 'Calls offered';\r\n        callMap.formatLegend = d3.format('d');\r\n    } else if (mapSettings.display == 'relative') {\r\n        field = 'callsPerCustomer';\r\n        callMap.keyTitle = 'Calls offered divided by customer base';\r\n        callMap.formatLegend = d3.format('.1%');\r\n    }\r\n\r\n    // If we're in relative display mode, the user can filter areas meeting a\r\n    // minimum customer count\r\n    let filterFn;\r\n    if (mapSettings.display == 'relative') {\r\n        let minCustomers = $('.minimum-customers').val() * 1;\r\n        filterFn = (d) => d.value.customers >= minCustomers;\r\n    } else {\r\n        filterFn = (d) => true;\r\n    }\r\n\r\n    // Key and value extractor functions\r\n    const keyFn = (d) => d.zipCode.substring(0, 3);\r\n    const rollupFn = (d) => {\r\n        let calls = d3.sum(d, (x) => x.calls);\r\n        let customers = d3.sum(d, (x) => x.customers);\r\n        let callsPerCustomer;\r\n        if (customers == 0) callsPerCustomer = 0;\r\n        else callsPerCustomer = calls / customers;\r\n        return {\r\n            'calls': calls,\r\n            'customers': customers,\r\n            'callsPerCustomer': callsPerCustomer\r\n        }\r\n    }\r\n\r\n    // Create the data structure in a D3-friendly way\r\n    let callsByZip = d3.nest()\r\n        .key(keyFn)\r\n        .rollup(rollupFn)\r\n        .entries(data)\r\n        .filter(filterFn)\r\n        .filter((d) => d.key != ''); // remove calls with no zipcode assigned\r\n\r\n    callMap.update(callsByZip, field, keyFn, rollupFn);\r\n\r\n    console.log('Finished updateMap() at ' + moment().format('h:mm:ss A'));\r\n}\r\n\r\n// Object to store customer zipcode data.\r\nconst customerCount = {\r\n    data: [],\r\n    // record time of last update (default to Y2K to force an update)\r\n    lastUpdated: moment('2000-01-01')\r\n};\r\n/**\r\n * Retrieve customer counts by zip code. Updates from the server every 6 hours.\r\n * @return {Object} in format { '<zip code here>': '31415' }\r\n */\r\nasync function getCustomerData() {\r\n    // reload data from server if it's been 6+ hours since the last update\r\n    if (customerCount.lastUpdated.isBefore(moment().subtract(6, 'hours'))) {\r\n        let rawData = await api.getReportResults({}, 'customers');\r\n\r\n        // Convert array of objects to a single object, with zipcode as key\r\n        // and customer count as volue\r\n        customerCount.data = rawData.reduce((object, item) => {\r\n            object[item.zipCode] = item.customerCount;\r\n            return object;\r\n        }, {});\r\n\r\n        customerCount.lastUpdated = moment();\r\n    }\r\n    return customerCount.data;\r\n}\r\n\r\n\r\nfunction getZipsWithoutCustomers(callData, customerData) {\r\n    return callData\r\n        .filter((d) => isZipWithoutCustomers(d.zipCode, customerData))\r\n        .map((d) => ({\r\n            zipCode: d.zipCode,\r\n            calls: d.calls,\r\n            customers: 0\r\n        }));\r\n}\r\n\r\nfunction isZipWithoutCustomers(zip, customerData) {\r\n    return (zip != '' && !customerData.hasOwnProperty(zip));\r\n}\r\n\r\n// Determines start/end times chosen by user\r\n// Return {start:'X',end:'Y'}\r\nfunction reportTimeRange() {\r\n    const time = {};\r\n    // Are we using absolute dates?\r\n    if ($('.date-type-toggle .absolute').hasClass('checked')) {\r\n        time.start = moment($('.filter.start-time').val())\r\n                        .tz('America/Los_Angeles')\r\n                        .format('YYYY-MM-DD[T]HH:mm:ss');\r\n        time.end   = moment($('.filter.end-time'  ).val())\r\n                        .tz('America/Los_Angeles')\r\n                        .format('YYYY-MM-DD[T]HH:mm:ss');\r\n    // Using relative dates\r\n    } else {\r\n        const relativeSelector = $('.relative-date-selector').val();\r\n        if (relativeSelector == 'today') {\r\n            time.start = moment().format('YYYY-MM-DD') + 'T00:00:00';\r\n            time.end   = moment().format('YYYY-MM-DD') + 'T23:59:59';\r\n        // If user specified a certain number of minutes, subtract the minutes,\r\n        // convert to Eastern Time, and round down to nearest 30-minute interval\r\n        } else if (relativeSelector == 'last-x-minutes') {\r\n            const minutes = $('.filter.relative-minutes').val();\r\n            if (isNaN(minutes)) throw new Error(`Relative minute value ${minutes} is not a number.`);\r\n            // Convert to server's timezone\r\n            let start = moment().subtract(minutes, 'm').tz('America/Los_Angeles');\r\n            // round down to nearest interval\r\n            start.subtract(start.minutes() % 30, 'minutes');\r\n            start.seconds(0);\r\n            time.start = start.format('YYYY-MM-DD[T]HH:mm:ss');\r\n            console.log(time.start);\r\n            time.end   = moment().format('YYYY-MM-DD') + 'T23:59:59';\r\n        } else {\r\n            throw new Error('Relative date selector value is ' + relativeSelector +\r\n                            '. Value not recognized.');\r\n        }\r\n    }\r\n    return time;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/maps-dashboard.js"],"sourceRoot":""}
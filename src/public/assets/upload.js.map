{"version":3,"sources":["webpack:///webpack/bootstrap eb2fce7720acc1796026","webpack:///./src/public/javascript/utility.js","webpack:///./src/public/javascript/local_settings.js","webpack:///./src/public/javascript/api.js","webpack:///./src/public/javascript/upload.js"],"names":["error","err","message","newDate","Date","setTime","now","dateString","toTimeString","console","log","$","text","formatAMPM","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","strTime","API_URL","getStatistics","filter","response","request","json","queueStats","getData","getReportResults","params","type","getUserInformation","username","getFieldList","updateField","field","getSkillJobs","updateSkillJob","job","format","skillStr","split","map","sk","trim","prop","skills","data","deleteSkillJob","getAdminUsers","users","updateAdminUser","user","rebootServer","reloadData","uploadData","parameters","endpoint","url","method","apiURL","requestOptions","headers","credentials","body","JSON","stringify","fetch","then","status","notifyServer504","ok","bodyText","Error","statusText","jsonToReturnValue","getFaultStringFromData","getParameters","requestType","vm","Vue","el","components","selectedTableName","methods","updateMessage","msg","uploadFile","event","file","target","files","reader","FileReader","onload","e","csv","result","tableName","confirmedChanges","$refs","value","bind","readAsText"],"mappings":"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","file":"upload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 95);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eb2fce7720acc1796026","\n// Send out an error alert in console and on the page.\nexport function error(err, message='') {\n    // timestamp\n    let newDate = new Date();\n    newDate.setTime(Date.now());\n    let dateString = newDate.toTimeString();\n    console.log(dateString);\n\n    // Post to page\n    $('#message').text(`Whoops! An error occurred. ${err.message} ${message}`);\n    console.log('Error log:');\n    console.error(err);\n}\n\n// Nicely formatted time\nexport function formatAMPM(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    seconds = seconds < 10 ? '0'+seconds : seconds;\n    let strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    return strTime;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/utility.js","export const API_URL = 'https://nathanclonts.com/dashboard/api/';\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/local_settings.js","import { error } from './utility.js';\nimport { API_URL } from './local_settings.js';\n\n////////////////////////////////////////////////////////////////\n// Functions to retrieve and extract data from Five9.\n// These functions interact with our server, which houses data\n// and formats data originating in Five9 reports.\n////////////////////////////////////////////////////////////////\n\n\n// Get agent/ACD statistics\nexport async function getStatistics(filter) {\n    const response = await request(filter, 'statistics');\n    return response.json();\n}\n\n// Get real-time stats\nexport async function queueStats() {\n    return getData({}, 'queue-stats');\n}\n\n/**\n * Get CSV string of report results from Five9\n * @param  {Object} params\n * @param  {String} type   endpoint: `maps` or `service-level`\n * @return {Promise -> Object}        JSON data\n */\nexport function getReportResults(params, type) {\n    return getData(params, `reports/${type}`);\n}\n\n\nexport async function getUserInformation(username) {\n    const response = await request({}, `users/data/${username}`, 'GET');\n    return response.json();\n}\n\n/**\n * List of available fields for widgets.\n * @return {Promise} resolves to array of field objects\n */\nexport async function getFieldList() {\n    let response = await request({}, 'fields', 'GET');\n    return response.json();\n}\n/**\n * Updates a field on server.\n * @param  {Object}  field new object\n * @return {Promise} resolves to array of field objects\n */\nexport async function updateField(field) {\n    let response = await request({field: field}, 'fields', 'PUT');\n    return response.text();\n}\n\n/**\n * List of available scheduled skilling jobs.\n * @return {Promise} resolves to array of field objects\n */\nexport async function getSkillJobs() {\n    let response = await request({}, 'skill', 'GET');\n    return response.json();\n}\n/**\n * Updates a scheduled skilling job on server.\n * @param  {Object}  job new object\n * @return {Promise} resolves to server's response\n */\nexport async function updateSkillJob(job) {\n    // format data\n    const format = (skillStr) => skillStr.split(',').map((sk) => sk.trim());\n\n    ['addSkills', 'removeSkills'].map((prop) => {\n        let skills = job.data[prop];\n        if (typeof(skills) == 'string') {\n            job.data[prop] = format(skills);\n        }\n    });\n\n    let response = await request({job: job, data: job.data}, 'skill', 'PUT');\n    return response.text();\n}\n/**\n * Delete the given skilling job object.\n * @param  {Object} job\n * @return {Promise} resolves to response from server\n */\nexport async function deleteSkillJob(job) {\n    let response = await request({job: job}, 'skill', 'DELETE');\n    return response.text();\n}\n\nexport async function getAdminUsers() {\n    let response = await request({}, 'users/admin', 'GET');\n    let users = await response.json();\n    console.log(users)\n    return users;\n}\n\nexport async function updateAdminUser(user) {\n    let response = await request({user: user}, 'users/admin', 'PATCH');\n    return response.text();\n}\n\nexport async function rebootServer() {\n    const response = await request({}, 'reboot-server', 'POST');\n    return response.text();\n}\nexport async function reloadData(params) {\n    const response = await request(params, 'reload-data', 'POST');\n    return response.text();\n}\n\n/**\n * [uploadData description]\n * @param  {Object} params including fields tableName, csv, and\n *                          confirmedChanges (optional)\n * @return {Promise}       resolves to string (server response message)\n */\nexport async function uploadData(params) {\n    try {\n        const response = await request(params, 'upload-data', 'POST');\n        return await response.text();\n    } catch (err) {\n        return err.message;\n    }\n}\n\n/**\n *  Helper function that pulls credentials from DOM, then makes request to server.\n * @param  {Object} parameters POSTed to server\n * @param  {String} endpoint   at server's API\n * @return {Object}            JSON data\n */\nasync function getData(parameters, endpoint) {\n    const response = await request(parameters, endpoint);\n    return await response.json();\n}\n\n\n\n\n/**\n * Make a request to server with given parameters.\n * @param  {Object} parameters passed as body of request\n * @param  {String} [url='statistics'] endpoint on server\n * @param  {String} [method='POST'] HTTP action\n * @return {Promise} response from server\n */\nasync function request(parameters, url='statistics', method='POST') {\n    const apiURL = API_URL + url; // defined in api_url.js\n\n    const requestOptions = {\n        method: method,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n    }\n    if (method != 'GET') {\n        requestOptions.body = JSON.stringify(parameters);\n    }\n\n    return fetch(apiURL, requestOptions)\n        .then(async (response) => {\n            if (response.status == 504) notifyServer504(parameters, url); // debugging\n            if (!response.ok) {\n                let bodyText = await response.text();\n                throw new Error(`Server responded with ${response.status} ${response.statusText}: ${bodyText}`);\n            }\n            return response;\n        });\n}\n\nasync function notifyServer504() {\n    return fetch(API_URL + 'notify-504');\n}\n\n\n// Gets the actual returned value/data out of JSON from the server.\nfunction jsonToReturnValue(json, type) {\n    return json['env:Envelope']['env:Body'][0]['ns2:'+type+'Response'][0]['return'][0];\n}\n\n// takes JSON from server and returns text within 'faultstring' tag (if existant)\nfunction getFaultStringFromData(data) {\n    try {\n        return data['env:Envelope']['env:Body'][0]['env:Fault'][0]['faultstring'];\n    } catch (err) {\n        return '';\n    }\n}\n\n// Given a requestType, returns JSON to submit to server in POST request.\n// requestType should match Five9 API command.\nexport function getParameters(requestType) {\n    let params = {};\n    // Initiate session\n    if (requestType == 'setSessionParameters') {\n        params = {\n            'service': 'setSessionParameters',\n            'settings': [ {\n                'viewSettings': [\n                    { 'idleTimeOut': 1800 },\n                    { 'statisticsRange': 'CurrentDay' },\n                    { 'rollingPeriod': 'Minutes10' }\n                ]\n            } ]\n        }\n    }\n    // Get real-time call stats\n    if (requestType == 'getStatistics') {\n        params = {\n            'service': 'getStatistics',\n            'settings': [ {\n                'statisticType': 'ACDStatus'\n            } ]\n        }\n    }\n\n    return params;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/api.js","import * as api from './api.js';\n\nconst vm = new Vue({\n    el: '#upload-app',\n\n    components: {\n    },\n\n    data: {\n        message: '',\n        selectedTableName: 'SkillGroup'\n    },\n\n    methods: {\n        updateMessage: function(msg) {\n            this.message = msg;\n        },\n        uploadFile: async function(event) {\n            const file = event.target.files[0];\n            if (!file) {\n                this.updateMessage('No file selected.')\n                return;\n            }\n            const reader = new FileReader();\n            reader.onload = async function(e) {\n                const params = {\n                    csv: e.target.result,\n                    tableName: this.selectedTableName,\n                    confirmedChanges: false\n                };\n                const response = await api.uploadData(params);\n                this.updateMessage(response);\n                // clear input file\n                this.$refs['fileInput'].value = '';\n            }.bind(this);\n            reader.readAsText(file);\n        }\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/javascript/upload.js"],"sourceRoot":""}